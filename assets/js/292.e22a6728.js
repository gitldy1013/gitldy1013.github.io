(window.webpackJsonp=window.webpackJsonp||[]).push([[292],{990:function(t,_,v){"use strict";v.r(_);var a=v(5),n=Object(a.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"volatile不保证原子性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#volatile不保证原子性"}},[t._v("#")]),t._v(" Volatile不保证原子性")]),t._v(" "),v("h2",{attrs:{id:"前言"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),v("p",[t._v("通过前面对JMM的介绍，我们知道，各个线程对主内存中共享变量的操作都是各个线程各自拷贝到自己的工作内存进行操作后在写回到主内存中的。")]),t._v(" "),v("p",[t._v("这就可能存在一个线程AAA修改了共享变量X的值，但是还未写入主内存时，另外一个线程BBB又对主内存中同一共享变量X进行操作，但此时A线程工作内存中共享变量X对线程B来说是不可见，这种工作内存与主内存同步延迟现象就造成了可见性问题。")]),t._v(" "),v("h2",{attrs:{id:"原子性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#原子性"}},[t._v("#")]),t._v(" 原子性")]),t._v(" "),v("p",[t._v("不可分割，完整性，也就是说某个线程正在做某个具体业务时，中间不可以被加塞或者被分割，需要具体完成，要么同时成功，要么同时失败。")]),t._v(" "),v("p",[t._v("数据库也经常提到事务具备原子性")]),t._v(" "),v("h2",{attrs:{id:"代码测试"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#代码测试"}},[t._v("#")]),t._v(" 代码测试")]),t._v(" "),v("p",[t._v("为了测试volatile是否保证原子性，我们创建了20个线程，然后每个线程分别循环1000次，来调用number++的方法")]),t._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("        MyData myData = new MyData();\n\n        // 创建10个线程，线程里面进行1000次循环\n        for (int i = 0; i < 20; i++) {\n            new Thread(() -> {\n                // 里面\n                for (int j = 0; j < 1000; j++) {\n                    myData.addPlusPlus();\n                }\n            }, String.valueOf(i)).start();\n        }\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br"),v("span",{staticClass:"line-number"},[t._v("4")]),v("br"),v("span",{staticClass:"line-number"},[t._v("5")]),v("br"),v("span",{staticClass:"line-number"},[t._v("6")]),v("br"),v("span",{staticClass:"line-number"},[t._v("7")]),v("br"),v("span",{staticClass:"line-number"},[t._v("8")]),v("br"),v("span",{staticClass:"line-number"},[t._v("9")]),v("br"),v("span",{staticClass:"line-number"},[t._v("10")]),v("br"),v("span",{staticClass:"line-number"},[t._v("11")]),v("br")])]),v("p",[t._v("最后通过 Thread.activeCount()，来感知20个线程是否执行完毕，这里判断线程数是否大于2，为什么是2？因为默认是有两个线程的，一个main线程，一个gc线程")]),t._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("// 需要等待上面20个线程都计算完成后，在用main线程取得最终的结果值\nwhile(Thread.activeCount() > 2) {\n    // yield表示不执行\n    Thread.yield();\n}\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br"),v("span",{staticClass:"line-number"},[t._v("4")]),v("br"),v("span",{staticClass:"line-number"},[t._v("5")]),v("br")])]),v("p",[t._v("然后在线程执行完毕后，我们在查看number的值，假设volatile保证原子性的话，那么最后输出的值应该是")]),t._v(" "),v("p",[t._v("20 * 1000 = 20000,")]),t._v(" "),v("p",[t._v("完整代码如下所示：")]),t._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v('\n/**\n * Volatile Java虚拟机提供的轻量级同步机制\n *\n * 可见性（及时通知）\n * 不保证原子性\n * 禁止指令重排\n *\n * @author: 陌溪\n * @create: 2020-03-09-15:58\n */\n\nimport java.util.concurrent.TimeUnit;\n\n/**\n * 假设是主物理内存\n */\nclass MyData {\n    /**\n     * volatile 修饰的关键字，是为了增加 主线程和线程之间的可见性，只要有一个线程修改了内存中的值，其它线程也能马上感知\n     */\n    volatile int number = 0;\n\n    public void addTo60() {\n        this.number = 60;\n    }\n\n    /**\n     * 注意，此时number 前面是加了volatile修饰\n     */\n    public void addPlusPlus() {\n        number ++;\n    }\n}\n\n/**\n * 验证volatile的可见性\n * 1、 假设int number = 0， number变量之前没有添加volatile关键字修饰\n * 2、添加了volatile，可以解决可见性问题\n *\n * 验证volatile不保证原子性\n * 1、原子性指的是什么意思？\n */\npublic class VolatileDemo {\n\n    public static void main(String args []) {\n\n        MyData myData = new MyData();\n\n        // 创建10个线程，线程里面进行1000次循环\n        for (int i = 0; i < 20; i++) {\n            new Thread(() -> {\n                // 里面\n                for (int j = 0; j < 1000; j++) {\n                    myData.addPlusPlus();\n                }\n            }, String.valueOf(i)).start();\n        }\n\n        // 需要等待上面20个线程都计算完成后，在用main线程取得最终的结果值\n        // 这里判断线程数是否大于2，为什么是2？因为默认是有两个线程的，一个main线程，一个gc线程\n        while(Thread.activeCount() > 2) {\n            // yield表示不执行\n            Thread.yield();\n        }\n\n        // 查看最终的值\n        // 假设volatile保证原子性，那么输出的值应该为：  20 * 1000 = 20000\n        System.out.println(Thread.currentThread().getName() + "\\t finally number value: " + myData.number);\n\n    }\n}\n')])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br"),v("span",{staticClass:"line-number"},[t._v("4")]),v("br"),v("span",{staticClass:"line-number"},[t._v("5")]),v("br"),v("span",{staticClass:"line-number"},[t._v("6")]),v("br"),v("span",{staticClass:"line-number"},[t._v("7")]),v("br"),v("span",{staticClass:"line-number"},[t._v("8")]),v("br"),v("span",{staticClass:"line-number"},[t._v("9")]),v("br"),v("span",{staticClass:"line-number"},[t._v("10")]),v("br"),v("span",{staticClass:"line-number"},[t._v("11")]),v("br"),v("span",{staticClass:"line-number"},[t._v("12")]),v("br"),v("span",{staticClass:"line-number"},[t._v("13")]),v("br"),v("span",{staticClass:"line-number"},[t._v("14")]),v("br"),v("span",{staticClass:"line-number"},[t._v("15")]),v("br"),v("span",{staticClass:"line-number"},[t._v("16")]),v("br"),v("span",{staticClass:"line-number"},[t._v("17")]),v("br"),v("span",{staticClass:"line-number"},[t._v("18")]),v("br"),v("span",{staticClass:"line-number"},[t._v("19")]),v("br"),v("span",{staticClass:"line-number"},[t._v("20")]),v("br"),v("span",{staticClass:"line-number"},[t._v("21")]),v("br"),v("span",{staticClass:"line-number"},[t._v("22")]),v("br"),v("span",{staticClass:"line-number"},[t._v("23")]),v("br"),v("span",{staticClass:"line-number"},[t._v("24")]),v("br"),v("span",{staticClass:"line-number"},[t._v("25")]),v("br"),v("span",{staticClass:"line-number"},[t._v("26")]),v("br"),v("span",{staticClass:"line-number"},[t._v("27")]),v("br"),v("span",{staticClass:"line-number"},[t._v("28")]),v("br"),v("span",{staticClass:"line-number"},[t._v("29")]),v("br"),v("span",{staticClass:"line-number"},[t._v("30")]),v("br"),v("span",{staticClass:"line-number"},[t._v("31")]),v("br"),v("span",{staticClass:"line-number"},[t._v("32")]),v("br"),v("span",{staticClass:"line-number"},[t._v("33")]),v("br"),v("span",{staticClass:"line-number"},[t._v("34")]),v("br"),v("span",{staticClass:"line-number"},[t._v("35")]),v("br"),v("span",{staticClass:"line-number"},[t._v("36")]),v("br"),v("span",{staticClass:"line-number"},[t._v("37")]),v("br"),v("span",{staticClass:"line-number"},[t._v("38")]),v("br"),v("span",{staticClass:"line-number"},[t._v("39")]),v("br"),v("span",{staticClass:"line-number"},[t._v("40")]),v("br"),v("span",{staticClass:"line-number"},[t._v("41")]),v("br"),v("span",{staticClass:"line-number"},[t._v("42")]),v("br"),v("span",{staticClass:"line-number"},[t._v("43")]),v("br"),v("span",{staticClass:"line-number"},[t._v("44")]),v("br"),v("span",{staticClass:"line-number"},[t._v("45")]),v("br"),v("span",{staticClass:"line-number"},[t._v("46")]),v("br"),v("span",{staticClass:"line-number"},[t._v("47")]),v("br"),v("span",{staticClass:"line-number"},[t._v("48")]),v("br"),v("span",{staticClass:"line-number"},[t._v("49")]),v("br"),v("span",{staticClass:"line-number"},[t._v("50")]),v("br"),v("span",{staticClass:"line-number"},[t._v("51")]),v("br"),v("span",{staticClass:"line-number"},[t._v("52")]),v("br"),v("span",{staticClass:"line-number"},[t._v("53")]),v("br"),v("span",{staticClass:"line-number"},[t._v("54")]),v("br"),v("span",{staticClass:"line-number"},[t._v("55")]),v("br"),v("span",{staticClass:"line-number"},[t._v("56")]),v("br"),v("span",{staticClass:"line-number"},[t._v("57")]),v("br"),v("span",{staticClass:"line-number"},[t._v("58")]),v("br"),v("span",{staticClass:"line-number"},[t._v("59")]),v("br"),v("span",{staticClass:"line-number"},[t._v("60")]),v("br"),v("span",{staticClass:"line-number"},[t._v("61")]),v("br"),v("span",{staticClass:"line-number"},[t._v("62")]),v("br"),v("span",{staticClass:"line-number"},[t._v("63")]),v("br"),v("span",{staticClass:"line-number"},[t._v("64")]),v("br"),v("span",{staticClass:"line-number"},[t._v("65")]),v("br"),v("span",{staticClass:"line-number"},[t._v("66")]),v("br"),v("span",{staticClass:"line-number"},[t._v("67")]),v("br"),v("span",{staticClass:"line-number"},[t._v("68")]),v("br"),v("span",{staticClass:"line-number"},[t._v("69")]),v("br"),v("span",{staticClass:"line-number"},[t._v("70")]),v("br"),v("span",{staticClass:"line-number"},[t._v("71")]),v("br"),v("span",{staticClass:"line-number"},[t._v("72")]),v("br")])]),v("p",[t._v("最终结果我们会发现，number输出的值并没有20000，而且是每次运行的结果都不一致的，这说明了volatile修饰的变量不保证原子性")]),t._v(" "),v("p",[t._v("第一次：")]),t._v(" "),v("p",[v("img",{attrs:{src:"/images/image-20200309172900462.png",alt:"image-20200309172900462"}})]),t._v(" "),v("p",[t._v("第二次：")]),t._v(" "),v("p",[v("img",{attrs:{src:"/images/image-20200309172919295.png",alt:"image-20200309172919295"}})]),t._v(" "),v("p",[t._v("第三次：")]),t._v(" "),v("p",[v("img",{attrs:{src:"/images/image-20200309172929820.png",alt:"image-20200309172929820"}})]),t._v(" "),v("h2",{attrs:{id:"为什么出现数值丢失"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#为什么出现数值丢失"}},[t._v("#")]),t._v(" 为什么出现数值丢失")]),t._v(" "),v("p",[v("img",{attrs:{src:"/images/image-20200309174220675.png",alt:"image-20200309174220675"}})]),t._v(" "),v("p",[t._v("各自线程在写入主内存的时候，出现了数据的丢失，而引起的数值缺失的问题")]),t._v(" "),v("p",[t._v("下面我们将一个简单的number++操作，转换为字节码文件一探究竟")]),t._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("public class T1 {\n    volatile int n = 0;\n    public void add() {\n        n++;\n    }\n}\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br"),v("span",{staticClass:"line-number"},[t._v("4")]),v("br"),v("span",{staticClass:"line-number"},[t._v("5")]),v("br"),v("span",{staticClass:"line-number"},[t._v("6")]),v("br")])]),v("p",[t._v("转换后的字节码文件")]),t._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v('public class com.moxi.interview.study.thread.T1 {\n  volatile int n;\n\n  public com.moxi.interview.study.thread.T1();\n    Code:\n       0: aload_0\n       1: invokespecial #1                  // Method java/lang/Object."<init>":()V\n       4: aload_0\n       5: iconst_0\n       6: putfield      #2                  // Field n:I\n       9: return\n\n  public void add();\n    Code:\n       0: aload_0\n       1: dup\n       2: getfield      #2                  // Field n:I\n       5: iconst_1\n       6: iadd\n       7: putfield      #2                  // Field n:I\n      10: return\n}\n')])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br"),v("span",{staticClass:"line-number"},[t._v("4")]),v("br"),v("span",{staticClass:"line-number"},[t._v("5")]),v("br"),v("span",{staticClass:"line-number"},[t._v("6")]),v("br"),v("span",{staticClass:"line-number"},[t._v("7")]),v("br"),v("span",{staticClass:"line-number"},[t._v("8")]),v("br"),v("span",{staticClass:"line-number"},[t._v("9")]),v("br"),v("span",{staticClass:"line-number"},[t._v("10")]),v("br"),v("span",{staticClass:"line-number"},[t._v("11")]),v("br"),v("span",{staticClass:"line-number"},[t._v("12")]),v("br"),v("span",{staticClass:"line-number"},[t._v("13")]),v("br"),v("span",{staticClass:"line-number"},[t._v("14")]),v("br"),v("span",{staticClass:"line-number"},[t._v("15")]),v("br"),v("span",{staticClass:"line-number"},[t._v("16")]),v("br"),v("span",{staticClass:"line-number"},[t._v("17")]),v("br"),v("span",{staticClass:"line-number"},[t._v("18")]),v("br"),v("span",{staticClass:"line-number"},[t._v("19")]),v("br"),v("span",{staticClass:"line-number"},[t._v("20")]),v("br"),v("span",{staticClass:"line-number"},[t._v("21")]),v("br"),v("span",{staticClass:"line-number"},[t._v("22")]),v("br")])]),v("p",[t._v("这里查看字节码的操作，是用到了IDEA的javap命令")]),t._v(" "),v("p",[t._v("我们首先，使用IDEA提供的External Tools，来扩展javap命令")]),t._v(" "),v("p",[v("img",{attrs:{src:"/images/image-20200309183026329.png",alt:"image-20200309183026329"}})]),t._v(" "),v("p",[t._v("完成上述操作后，我们在需要查看字节码的文件下，右键选择 External Tools即可")]),t._v(" "),v("p",[v("img",{attrs:{src:"/images/image-20200309183115613.png",alt:"image-20200309183115613"}})]),t._v(" "),v("p",[t._v("如果出现了找不到指定类，那是因为我们创建的是spring boot的maven项目，我们之前需要执行mvn package命令，进行打包操作，将其编译成class文件")]),t._v(" "),v("p",[t._v("移动到底部，有一份字节码指令对照表，方便我们进行阅读")]),t._v(" "),v("p",[t._v("下面我们就针对 add() 这个方法的字节码文件进行分析")]),t._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("  public void add();\n    Code:\n       0: aload_0\n       1: dup\n       2: getfield      #2    // Field n:I\n       5: iconst_1\n       6: iadd\n       7: putfield      #2    // Field n:I\n      10: return\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br"),v("span",{staticClass:"line-number"},[t._v("4")]),v("br"),v("span",{staticClass:"line-number"},[t._v("5")]),v("br"),v("span",{staticClass:"line-number"},[t._v("6")]),v("br"),v("span",{staticClass:"line-number"},[t._v("7")]),v("br"),v("span",{staticClass:"line-number"},[t._v("8")]),v("br"),v("span",{staticClass:"line-number"},[t._v("9")]),v("br")])]),v("p",[t._v("我们能够发现 n++这条命令，被拆分成了3个指令")]),t._v(" "),v("ul",[v("li",[t._v("执行"),v("code",[t._v("getfield")]),t._v(" 从主内存拿到原始n")]),t._v(" "),v("li",[t._v("执行"),v("code",[t._v("iadd")]),t._v(" 进行加1操作")]),t._v(" "),v("li",[t._v("执行"),v("code",[t._v("putfileld")]),t._v(" 把累加后的值写回主内存")])]),t._v(" "),v("p",[t._v("假设我们没有加 "),v("code",[t._v("synchronized")]),t._v("那么第一步就可能存在着，三个线程同时通过getfield命令，拿到主存中的 n值，然后三个线程，各自在自己的工作内存中进行加1操作，但他们并发进行  "),v("code",[t._v("iadd")]),t._v(" 命令的时候，因为只能一个进行写，所以其它操作会被挂起，假设1线程，先进行了写操作，在写完后，volatile的可见性，应该需要告诉其它两个线程，主内存的值已经被修改了，但是因为太快了，其它两个线程，陆续执行 "),v("code",[t._v("iadd")]),t._v("命令，进行写入操作，这就造成了其他线程没有接受到主内存n的改变，从而覆盖了原来的值，出现写丢失，这样也就让最终的结果少于20000")]),t._v(" "),v("h2",{attrs:{id:"如何解决"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#如何解决"}},[t._v("#")]),t._v(" 如何解决")]),t._v(" "),v("p",[t._v("因此这也说明，在多线程环境下 number ++ 在多线程环境下是非线程安全的，解决的方法有哪些呢？")]),t._v(" "),v("ul",[v("li",[t._v("在方法上加入 synchronized")])]),t._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("    public synchronized void addPlusPlus() {\n        number ++;\n    }\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br")])]),v("p",[t._v("运行结果：")]),t._v(" "),v("p",[v("img",{attrs:{src:"/images/image-20200309173315294.png",alt:"image-20200309173315294"}})]),t._v(" "),v("p",[t._v("我们能够发现引入synchronized关键字后，保证了该方法每次只能够一个线程进行访问和操作，最终输出的结果也就为20000")]),t._v(" "),v("h2",{attrs:{id:"其它解决方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#其它解决方法"}},[t._v("#")]),t._v(" 其它解决方法")]),t._v(" "),v("p",[t._v("上面的方法引入synchronized，虽然能够保证原子性，但是为了解决number++，而引入重量级的同步机制，有种 杀鸡焉用牛刀")]),t._v(" "),v("p",[t._v("除了引用synchronized关键字外，还可以使用JUC下面的原子包装类，即刚刚的int类型的number，可以使用AtomicInteger来代替")]),t._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("    /**\n     *  创建一个原子Integer包装类，默认为0\n      */\n    AtomicInteger atomicInteger = new AtomicInteger();\n\n    public void addAtomic() {\n        // 相当于 atomicInter ++\n        atomicInteger.getAndIncrement();\n    }\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br"),v("span",{staticClass:"line-number"},[t._v("4")]),v("br"),v("span",{staticClass:"line-number"},[t._v("5")]),v("br"),v("span",{staticClass:"line-number"},[t._v("6")]),v("br"),v("span",{staticClass:"line-number"},[t._v("7")]),v("br"),v("span",{staticClass:"line-number"},[t._v("8")]),v("br"),v("span",{staticClass:"line-number"},[t._v("9")]),v("br")])]),v("p",[t._v("然后同理，继续刚刚的操作")]),t._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("        // 创建10个线程，线程里面进行1000次循环\n        for (int i = 0; i < 20; i++) {\n            new Thread(() -> {\n                // 里面\n                for (int j = 0; j < 1000; j++) {\n                    myData.addPlusPlus();\n                    myData.addAtomic();\n                }\n            }, String.valueOf(i)).start();\n        }\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br"),v("span",{staticClass:"line-number"},[t._v("4")]),v("br"),v("span",{staticClass:"line-number"},[t._v("5")]),v("br"),v("span",{staticClass:"line-number"},[t._v("6")]),v("br"),v("span",{staticClass:"line-number"},[t._v("7")]),v("br"),v("span",{staticClass:"line-number"},[t._v("8")]),v("br"),v("span",{staticClass:"line-number"},[t._v("9")]),v("br"),v("span",{staticClass:"line-number"},[t._v("10")]),v("br")])]),v("p",[t._v("最后输出")]),t._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v('        // 假设volatile保证原子性，那么输出的值应该为：  20 * 1000 = 20000\n        System.out.println(Thread.currentThread().getName() + "\\t finally number value: " + myData.number);\n        System.out.println(Thread.currentThread().getName() + "\\t finally atomicNumber value: " + myData.atomicInteger);\n')])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br")])]),v("p",[t._v("下面的结果，一个是引入synchronized，一个是使用了原子包装类AtomicInteger")]),t._v(" "),v("p",[v("img",{attrs:{src:"/images/image-20200309205242622.png",alt:"image-20200309205242622"}})]),t._v(" "),v("h2",{attrs:{id:"字节码指令表"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#字节码指令表"}},[t._v("#")]),t._v(" 字节码指令表")]),t._v(" "),v("p",[t._v("为了方便阅读JVM字节码文件，我从网上找了一份字节码指令表")]),t._v(" "),v("p",[t._v("引用：https://segmentfault.com/a/1190000008722128")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("字节码")]),t._v(" "),v("th",[t._v("助记符")]),t._v(" "),v("th",[t._v("指令含义")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("0x00")]),t._v(" "),v("td",[t._v("nop")]),t._v(" "),v("td",[t._v("None")])]),t._v(" "),v("tr",[v("td",[t._v("0x01")]),t._v(" "),v("td",[t._v("aconst_null")]),t._v(" "),v("td",[t._v("将null推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x02")]),t._v(" "),v("td",[t._v("iconst_m1")]),t._v(" "),v("td",[t._v("将int型-1推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x03")]),t._v(" "),v("td",[t._v("iconst_0")]),t._v(" "),v("td",[t._v("将int型0推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x04")]),t._v(" "),v("td",[t._v("iconst_1")]),t._v(" "),v("td",[t._v("将int型1推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x05")]),t._v(" "),v("td",[t._v("iconst_2")]),t._v(" "),v("td",[t._v("将int型2推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x06")]),t._v(" "),v("td",[t._v("iconst_3")]),t._v(" "),v("td",[t._v("将int型3推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x07")]),t._v(" "),v("td",[t._v("iconst_4")]),t._v(" "),v("td",[t._v("将int型4推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x08")]),t._v(" "),v("td",[t._v("iconst_5")]),t._v(" "),v("td",[t._v("将int型5推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x09")]),t._v(" "),v("td",[t._v("lconst_0")]),t._v(" "),v("td",[t._v("将long型0推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x0a")]),t._v(" "),v("td",[t._v("lconst_1")]),t._v(" "),v("td",[t._v("将long型1推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x0b")]),t._v(" "),v("td",[t._v("fconst_0")]),t._v(" "),v("td",[t._v("将float型0推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x0c")]),t._v(" "),v("td",[t._v("fconst_1")]),t._v(" "),v("td",[t._v("将float型1推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x0d")]),t._v(" "),v("td",[t._v("fconst_2")]),t._v(" "),v("td",[t._v("将float型2推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x0e")]),t._v(" "),v("td",[t._v("dconst_0")]),t._v(" "),v("td",[t._v("将double型0推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x0f")]),t._v(" "),v("td",[t._v("dconst_1")]),t._v(" "),v("td",[t._v("将double型1推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x10")]),t._v(" "),v("td",[t._v("bipush")]),t._v(" "),v("td",[t._v("将单字节的常量值(-128~127)推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x11")]),t._v(" "),v("td",[t._v("sipush")]),t._v(" "),v("td",[t._v("将一个短整型常量(-32768~32767)推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x12")]),t._v(" "),v("td",[t._v("ldc")]),t._v(" "),v("td",[t._v("将int,float或String型常量值从常量池中推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x13")]),t._v(" "),v("td",[t._v("ldc_w")]),t._v(" "),v("td",[t._v("将int,float或String型常量值从常量池中推送至栈顶(宽索引)")])]),t._v(" "),v("tr",[v("td",[t._v("0x14")]),t._v(" "),v("td",[t._v("ldc2_w")]),t._v(" "),v("td",[t._v("将long或double型常量值从常量池中推送至栈顶(宽索引)")])]),t._v(" "),v("tr",[v("td",[t._v("0x15")]),t._v(" "),v("td",[t._v("iload")]),t._v(" "),v("td",[t._v("将指定的int型本地变量推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x16")]),t._v(" "),v("td",[t._v("lload")]),t._v(" "),v("td",[t._v("将指定的long型本地变量推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x17")]),t._v(" "),v("td",[t._v("fload")]),t._v(" "),v("td",[t._v("将指定的float型本地变量推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x18")]),t._v(" "),v("td",[t._v("dload")]),t._v(" "),v("td",[t._v("将指定的double型本地变量推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x19")]),t._v(" "),v("td",[t._v("aload")]),t._v(" "),v("td",[t._v("将指定的引用类型本地变量推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x1a")]),t._v(" "),v("td",[t._v("iload_0")]),t._v(" "),v("td",[t._v("将第一个int型本地变量推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x1b")]),t._v(" "),v("td",[t._v("iload_1")]),t._v(" "),v("td",[t._v("将第二个int型本地变量推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x1c")]),t._v(" "),v("td",[t._v("iload_2")]),t._v(" "),v("td",[t._v("将第三个int型本地变量推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x1d")]),t._v(" "),v("td",[t._v("iload_3")]),t._v(" "),v("td",[t._v("将第四个int型本地变量推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x1e")]),t._v(" "),v("td",[t._v("lload_0")]),t._v(" "),v("td",[t._v("将第一个long型本地变量推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x1f")]),t._v(" "),v("td",[t._v("lload_1")]),t._v(" "),v("td",[t._v("将第二个long型本地变量推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x20")]),t._v(" "),v("td",[t._v("lload_2")]),t._v(" "),v("td",[t._v("将第三个long型本地变量推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x21")]),t._v(" "),v("td",[t._v("lload_3")]),t._v(" "),v("td",[t._v("将第四个long型本地变量推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x22")]),t._v(" "),v("td",[t._v("fload_0")]),t._v(" "),v("td",[t._v("将第一个float型本地变量推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x23")]),t._v(" "),v("td",[t._v("fload_1")]),t._v(" "),v("td",[t._v("将第二个float型本地变量推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x24")]),t._v(" "),v("td",[t._v("fload_2")]),t._v(" "),v("td",[t._v("将第三个float型本地变量推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x25")]),t._v(" "),v("td",[t._v("fload_3")]),t._v(" "),v("td",[t._v("将第四个float型本地变量推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x26")]),t._v(" "),v("td",[t._v("dload_0")]),t._v(" "),v("td",[t._v("将第一个double型本地变量推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x27")]),t._v(" "),v("td",[t._v("dload_1")]),t._v(" "),v("td",[t._v("将第二个double型本地变量推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x28")]),t._v(" "),v("td",[t._v("dload_2")]),t._v(" "),v("td",[t._v("将第三个double型本地变量推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x29")]),t._v(" "),v("td",[t._v("dload_3")]),t._v(" "),v("td",[t._v("将第四个double型本地变量推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x2a")]),t._v(" "),v("td",[t._v("aload_0")]),t._v(" "),v("td",[t._v("将第一个引用类型本地变量推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x2b")]),t._v(" "),v("td",[t._v("aload_1")]),t._v(" "),v("td",[t._v("将第二个引用类型本地变量推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x2c")]),t._v(" "),v("td",[t._v("aload_2")]),t._v(" "),v("td",[t._v("将第三个引用类型本地变量推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x2d")]),t._v(" "),v("td",[t._v("aload_3")]),t._v(" "),v("td",[t._v("将第四个引用类型本地变量推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x2e")]),t._v(" "),v("td",[t._v("iaload")]),t._v(" "),v("td",[t._v("将int型数组指定索引的值推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x2f")]),t._v(" "),v("td",[t._v("laload")]),t._v(" "),v("td",[t._v("将long型数组指定索引的值推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x30")]),t._v(" "),v("td",[t._v("faload")]),t._v(" "),v("td",[t._v("将float型数组指定索引的值推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x31")]),t._v(" "),v("td",[t._v("daload")]),t._v(" "),v("td",[t._v("将double型数组指定索引的值推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x32")]),t._v(" "),v("td",[t._v("aaload")]),t._v(" "),v("td",[t._v("将引用类型数组指定索引的值推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x33")]),t._v(" "),v("td",[t._v("baload")]),t._v(" "),v("td",[t._v("将boolean或byte型数组指定索引的值推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x34")]),t._v(" "),v("td",[t._v("caload")]),t._v(" "),v("td",[t._v("将char型数组指定索引的值推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x35")]),t._v(" "),v("td",[t._v("saload")]),t._v(" "),v("td",[t._v("将short型数组指定索引的值推送至栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x36")]),t._v(" "),v("td",[t._v("istore")]),t._v(" "),v("td",[t._v("将栈顶int型数值存入指定本地变量")])]),t._v(" "),v("tr",[v("td",[t._v("0x37")]),t._v(" "),v("td",[t._v("lstore")]),t._v(" "),v("td",[t._v("将栈顶long型数值存入指定本地变量")])]),t._v(" "),v("tr",[v("td",[t._v("0x38")]),t._v(" "),v("td",[t._v("fstore")]),t._v(" "),v("td",[t._v("将栈顶float型数值存入指定本地变量")])]),t._v(" "),v("tr",[v("td",[t._v("0x39")]),t._v(" "),v("td",[t._v("dstore")]),t._v(" "),v("td",[t._v("将栈顶double型数值存入指定本地变量")])]),t._v(" "),v("tr",[v("td",[t._v("0x3a")]),t._v(" "),v("td",[t._v("astore")]),t._v(" "),v("td",[t._v("将栈顶引用类型数值存入指定本地变量")])]),t._v(" "),v("tr",[v("td",[t._v("0x3b")]),t._v(" "),v("td",[t._v("istore_0")]),t._v(" "),v("td",[t._v("将栈顶int型数值存入第一个本地变量")])]),t._v(" "),v("tr",[v("td",[t._v("0x3c")]),t._v(" "),v("td",[t._v("istore_1")]),t._v(" "),v("td",[t._v("将栈顶int型数值存入第二个本地变量")])]),t._v(" "),v("tr",[v("td",[t._v("0x3d")]),t._v(" "),v("td",[t._v("istore_2")]),t._v(" "),v("td",[t._v("将栈顶int型数值存入第三个本地变量")])]),t._v(" "),v("tr",[v("td",[t._v("0x3e")]),t._v(" "),v("td",[t._v("istore_3")]),t._v(" "),v("td",[t._v("将栈顶int型数值存入第四个本地变量")])]),t._v(" "),v("tr",[v("td",[t._v("0x3f")]),t._v(" "),v("td",[t._v("lstore_0")]),t._v(" "),v("td",[t._v("将栈顶long型数值存入第一个本地变量")])]),t._v(" "),v("tr",[v("td",[t._v("0x40")]),t._v(" "),v("td",[t._v("lstore_1")]),t._v(" "),v("td",[t._v("将栈顶long型数值存入第二个本地变量")])]),t._v(" "),v("tr",[v("td",[t._v("0x41")]),t._v(" "),v("td",[t._v("lstore_2")]),t._v(" "),v("td",[t._v("将栈顶long型数值存入第三个本地变量")])]),t._v(" "),v("tr",[v("td",[t._v("0x42")]),t._v(" "),v("td",[t._v("lstore_3")]),t._v(" "),v("td",[t._v("将栈顶long型数值存入第四个本地变量")])]),t._v(" "),v("tr",[v("td",[t._v("0x43")]),t._v(" "),v("td",[t._v("fstore_0")]),t._v(" "),v("td",[t._v("将栈顶float型数值存入第一个本地变量")])]),t._v(" "),v("tr",[v("td",[t._v("0x44")]),t._v(" "),v("td",[t._v("fstore_1")]),t._v(" "),v("td",[t._v("将栈顶float型数值存入第二个本地变量")])]),t._v(" "),v("tr",[v("td",[t._v("0x45")]),t._v(" "),v("td",[t._v("fstore_2")]),t._v(" "),v("td",[t._v("将栈顶float型数值存入第三个本地变量")])]),t._v(" "),v("tr",[v("td",[t._v("0x46")]),t._v(" "),v("td",[t._v("fstore_3")]),t._v(" "),v("td",[t._v("将栈顶float型数值存入第四个本地变量")])]),t._v(" "),v("tr",[v("td",[t._v("0x47")]),t._v(" "),v("td",[t._v("dstore_0")]),t._v(" "),v("td",[t._v("将栈顶double型数值存入第一个本地变量")])]),t._v(" "),v("tr",[v("td",[t._v("0x48")]),t._v(" "),v("td",[t._v("dstore_1")]),t._v(" "),v("td",[t._v("将栈顶double型数值存入第二个本地变量")])]),t._v(" "),v("tr",[v("td",[t._v("0x49")]),t._v(" "),v("td",[t._v("dstore_2")]),t._v(" "),v("td",[t._v("将栈顶double型数值存入第三个本地变量")])]),t._v(" "),v("tr",[v("td",[t._v("0x4a")]),t._v(" "),v("td",[t._v("dstore_3")]),t._v(" "),v("td",[t._v("将栈顶double型数值存入第四个本地变量")])]),t._v(" "),v("tr",[v("td",[t._v("0x4b")]),t._v(" "),v("td",[t._v("astore_0")]),t._v(" "),v("td",[t._v("将栈顶引用型数值存入第一个本地变量")])]),t._v(" "),v("tr",[v("td",[t._v("0x4c")]),t._v(" "),v("td",[t._v("astore_1")]),t._v(" "),v("td",[t._v("将栈顶引用型数值存入第二个本地变量")])]),t._v(" "),v("tr",[v("td",[t._v("0x4d")]),t._v(" "),v("td",[t._v("astore_2")]),t._v(" "),v("td",[t._v("将栈顶引用型数值存入第三个本地变量")])]),t._v(" "),v("tr",[v("td",[t._v("0x4e")]),t._v(" "),v("td",[t._v("astore_3")]),t._v(" "),v("td",[t._v("将栈顶引用型数值存入第四个本地变量")])]),t._v(" "),v("tr",[v("td",[t._v("0x4f")]),t._v(" "),v("td",[t._v("iastore")]),t._v(" "),v("td",[t._v("将栈顶int型数值存入指定数组的指定索引位置")])]),t._v(" "),v("tr",[v("td",[t._v("0x50")]),t._v(" "),v("td",[t._v("lastore")]),t._v(" "),v("td",[t._v("将栈顶long型数值存入指定数组的指定索引位置")])]),t._v(" "),v("tr",[v("td",[t._v("0x51")]),t._v(" "),v("td",[t._v("fastore")]),t._v(" "),v("td",[t._v("将栈顶float型数值存入指定数组的指定索引位置")])]),t._v(" "),v("tr",[v("td",[t._v("0x52")]),t._v(" "),v("td",[t._v("dastore")]),t._v(" "),v("td",[t._v("将栈顶double型数值存入指定数组的指定索引位置")])]),t._v(" "),v("tr",[v("td",[t._v("0x53")]),t._v(" "),v("td",[t._v("aastore")]),t._v(" "),v("td",[t._v("将栈顶引用型数值存入指定数组的指定索引位置")])]),t._v(" "),v("tr",[v("td",[t._v("0x54")]),t._v(" "),v("td",[t._v("bastore")]),t._v(" "),v("td",[t._v("将栈顶boolean或byte型数值存入指定数组的指定索引位置")])]),t._v(" "),v("tr",[v("td",[t._v("0x55")]),t._v(" "),v("td",[t._v("castore")]),t._v(" "),v("td",[t._v("将栈顶char型数值存入指定数组的指定索引位置")])]),t._v(" "),v("tr",[v("td",[t._v("0x56")]),t._v(" "),v("td",[t._v("sastore")]),t._v(" "),v("td",[t._v("将栈顶short型数值存入指定数组的指定索引位置")])]),t._v(" "),v("tr",[v("td",[t._v("0x57")]),t._v(" "),v("td",[t._v("pop")]),t._v(" "),v("td",[t._v("将栈顶数值弹出(数值不能是long或double类型的)")])]),t._v(" "),v("tr",[v("td",[t._v("0x58")]),t._v(" "),v("td",[t._v("pop2")]),t._v(" "),v("td",[t._v("将栈顶的一个(对于非long或double类型)或两个数值(对于非long或double的其他类型)弹出")])]),t._v(" "),v("tr",[v("td",[t._v("0x59")]),t._v(" "),v("td",[t._v("dup")]),t._v(" "),v("td",[t._v("复制栈顶数值并将复制值压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x5a")]),t._v(" "),v("td",[t._v("dup_x1")]),t._v(" "),v("td",[t._v("复制栈顶数值并将两个复制值压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x5b")]),t._v(" "),v("td",[t._v("dup_x2")]),t._v(" "),v("td",[t._v("复制栈顶数值并将三个(或两个)复制值压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x5c")]),t._v(" "),v("td",[t._v("dup2")]),t._v(" "),v("td",[t._v("复制栈顶一个(对于long或double类型)或两个(对于非long或double的其他类型)数值并将复制值压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x5d")]),t._v(" "),v("td",[t._v("dup2_x1")]),t._v(" "),v("td",[t._v("dup_x1指令的双倍版本")])]),t._v(" "),v("tr",[v("td",[t._v("0x5e")]),t._v(" "),v("td",[t._v("dup2_x2")]),t._v(" "),v("td",[t._v("dup_x2指令的双倍版本")])]),t._v(" "),v("tr",[v("td",[t._v("0x5f")]),t._v(" "),v("td",[t._v("swap")]),t._v(" "),v("td",[t._v("将栈顶最顶端的两个数值互换(数值不能是long或double类型)")])]),t._v(" "),v("tr",[v("td",[t._v("0x60")]),t._v(" "),v("td",[t._v("iadd")]),t._v(" "),v("td",[t._v("将栈顶两int型数值相加并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x61")]),t._v(" "),v("td",[t._v("ladd")]),t._v(" "),v("td",[t._v("将栈顶两long型数值相加并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x62")]),t._v(" "),v("td",[t._v("fadd")]),t._v(" "),v("td",[t._v("将栈顶两float型数值相加并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x63")]),t._v(" "),v("td",[t._v("dadd")]),t._v(" "),v("td",[t._v("将栈顶两double型数值相加并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x64")]),t._v(" "),v("td",[t._v("isub")]),t._v(" "),v("td",[t._v("将栈顶两int型数值相减并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x65")]),t._v(" "),v("td",[t._v("lsub")]),t._v(" "),v("td",[t._v("将栈顶两long型数值相减并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x66")]),t._v(" "),v("td",[t._v("fsub")]),t._v(" "),v("td",[t._v("将栈顶两float型数值相减并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x67")]),t._v(" "),v("td",[t._v("dsub")]),t._v(" "),v("td",[t._v("将栈顶两double型数值相减并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x68")]),t._v(" "),v("td",[t._v("imul")]),t._v(" "),v("td",[t._v("将栈顶两int型数值相乘并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x69")]),t._v(" "),v("td",[t._v("lmul")]),t._v(" "),v("td",[t._v("将栈顶两long型数值相乘并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x6a")]),t._v(" "),v("td",[t._v("fmul")]),t._v(" "),v("td",[t._v("将栈顶两float型数值相乘并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x6b")]),t._v(" "),v("td",[t._v("dmul")]),t._v(" "),v("td",[t._v("将栈顶两double型数值相乘并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x6c")]),t._v(" "),v("td",[t._v("idiv")]),t._v(" "),v("td",[t._v("将栈顶两int型数值相除并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x6d")]),t._v(" "),v("td",[t._v("ldiv")]),t._v(" "),v("td",[t._v("将栈顶两long型数值相除并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x6e")]),t._v(" "),v("td",[t._v("fdiv")]),t._v(" "),v("td",[t._v("将栈顶两float型数值相除并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x6f")]),t._v(" "),v("td",[t._v("ddiv")]),t._v(" "),v("td",[t._v("将栈顶两double型数值相除并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x70")]),t._v(" "),v("td",[t._v("irem")]),t._v(" "),v("td",[t._v("将栈顶两int型数值作取模运算并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x71")]),t._v(" "),v("td",[t._v("lrem")]),t._v(" "),v("td",[t._v("将栈顶两long型数值作取模运算并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x72")]),t._v(" "),v("td",[t._v("frem")]),t._v(" "),v("td",[t._v("将栈顶两float型数值作取模运算并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x73")]),t._v(" "),v("td",[t._v("drem")]),t._v(" "),v("td",[t._v("将栈顶两double型数值作取模运算并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x74")]),t._v(" "),v("td",[t._v("ineg")]),t._v(" "),v("td",[t._v("将栈顶int型数值取负并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x75")]),t._v(" "),v("td",[t._v("lneg")]),t._v(" "),v("td",[t._v("将栈顶long型数值取负并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x76")]),t._v(" "),v("td",[t._v("fneg")]),t._v(" "),v("td",[t._v("将栈顶float型数值取负并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x77")]),t._v(" "),v("td",[t._v("dneg")]),t._v(" "),v("td",[t._v("将栈顶double型数值取负并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x78")]),t._v(" "),v("td",[t._v("ishl")]),t._v(" "),v("td",[t._v("将int型数值左移指定位数并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x79")]),t._v(" "),v("td",[t._v("lshl")]),t._v(" "),v("td",[t._v("将long型数值左移指定位数并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x7a")]),t._v(" "),v("td",[t._v("ishr")]),t._v(" "),v("td",[t._v("将int型数值右(带符号)移指定位数并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x7b")]),t._v(" "),v("td",[t._v("lshr")]),t._v(" "),v("td",[t._v("将long型数值右(带符号)移指定位数并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x7c")]),t._v(" "),v("td",[t._v("iushr")]),t._v(" "),v("td",[t._v("将int型数值右(无符号)移指定位数并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x7d")]),t._v(" "),v("td",[t._v("lushr")]),t._v(" "),v("td",[t._v("将long型数值右(无符号)移指定位数并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x7e")]),t._v(" "),v("td",[t._v("iand")]),t._v(" "),v("td",[t._v('将栈顶两int型数值"按位与"并将结果压入栈顶')])]),t._v(" "),v("tr",[v("td",[t._v("0x7f")]),t._v(" "),v("td",[t._v("land")]),t._v(" "),v("td",[t._v('将栈顶两long型数值"按位与"并将结果压入栈顶')])]),t._v(" "),v("tr",[v("td",[t._v("0x80")]),t._v(" "),v("td",[t._v("ior")]),t._v(" "),v("td",[t._v('将栈顶两int型数值"按位或"并将结果压入栈顶')])]),t._v(" "),v("tr",[v("td",[t._v("0x81")]),t._v(" "),v("td",[t._v("lor")]),t._v(" "),v("td",[t._v('将栈顶两long型数值"按位或"并将结果压入栈顶')])]),t._v(" "),v("tr",[v("td",[t._v("0x82")]),t._v(" "),v("td",[t._v("ixor")]),t._v(" "),v("td",[t._v('将栈顶两int型数值"按位异或"并将结果压入栈顶')])]),t._v(" "),v("tr",[v("td",[t._v("0x83")]),t._v(" "),v("td",[t._v("lxor")]),t._v(" "),v("td",[t._v('将栈顶两long型数值"按位异或"并将结果压入栈顶')])]),t._v(" "),v("tr",[v("td",[t._v("0x84")]),t._v(" "),v("td",[t._v("iinc")]),t._v(" "),v("td",[t._v("将指定int型变量增加指定值(如i++, i--, i+=2等)")])]),t._v(" "),v("tr",[v("td",[t._v("0x85")]),t._v(" "),v("td",[t._v("i2l")]),t._v(" "),v("td",[t._v("将栈顶int型数值强制转换为long型数值并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x86")]),t._v(" "),v("td",[t._v("i2f")]),t._v(" "),v("td",[t._v("将栈顶int型数值强制转换为float型数值并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x87")]),t._v(" "),v("td",[t._v("i2d")]),t._v(" "),v("td",[t._v("将栈顶int型数值强制转换为double型数值并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x88")]),t._v(" "),v("td",[t._v("l2i")]),t._v(" "),v("td",[t._v("将栈顶long型数值强制转换为int型数值并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x89")]),t._v(" "),v("td",[t._v("l2f")]),t._v(" "),v("td",[t._v("将栈顶long型数值强制转换为float型数值并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x8a")]),t._v(" "),v("td",[t._v("l2d")]),t._v(" "),v("td",[t._v("将栈顶long型数值强制转换为double型数值并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x8b")]),t._v(" "),v("td",[t._v("f2i")]),t._v(" "),v("td",[t._v("将栈顶float型数值强制转换为int型数值并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x8c")]),t._v(" "),v("td",[t._v("f2l")]),t._v(" "),v("td",[t._v("将栈顶float型数值强制转换为long型数值并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x8d")]),t._v(" "),v("td",[t._v("f2d")]),t._v(" "),v("td",[t._v("将栈顶float型数值强制转换为double型数值并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x8e")]),t._v(" "),v("td",[t._v("d2i")]),t._v(" "),v("td",[t._v("将栈顶double型数值强制转换为int型数值并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x8f")]),t._v(" "),v("td",[t._v("d2l")]),t._v(" "),v("td",[t._v("将栈顶double型数值强制转换为long型数值并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x90")]),t._v(" "),v("td",[t._v("d2f")]),t._v(" "),v("td",[t._v("将栈顶double型数值强制转换为float型数值并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x91")]),t._v(" "),v("td",[t._v("i2b")]),t._v(" "),v("td",[t._v("将栈顶int型数值强制转换为byte型数值并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x92")]),t._v(" "),v("td",[t._v("i2c")]),t._v(" "),v("td",[t._v("将栈顶int型数值强制转换为char型数值并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x93")]),t._v(" "),v("td",[t._v("i2s")]),t._v(" "),v("td",[t._v("将栈顶int型数值强制转换为short型数值并将结果压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x94")]),t._v(" "),v("td",[t._v("lcmp")]),t._v(" "),v("td",[t._v("比较栈顶两long型数值大小, 并将结果(1, 0或-1)压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x95")]),t._v(" "),v("td",[t._v("fcmpl")]),t._v(" "),v("td",[t._v("比较栈顶两float型数值大小, 并将结果(1, 0或-1)压入栈顶; 当其中一个数值为"),v("code",[t._v("NaN")]),t._v("时, 将-1压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x96")]),t._v(" "),v("td",[t._v("fcmpg")]),t._v(" "),v("td",[t._v("比较栈顶两float型数值大小, 并将结果(1, 0或-1)压入栈顶; 当其中一个数值为"),v("code",[t._v("NaN")]),t._v("时, 将1压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x97")]),t._v(" "),v("td",[t._v("dcmpl")]),t._v(" "),v("td",[t._v("比较栈顶两double型数值大小, 并将结果(1, 0或-1)压入栈顶; 当其中一个数值为"),v("code",[t._v("NaN")]),t._v("时, 将-1压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x98")]),t._v(" "),v("td",[t._v("dcmpg")]),t._v(" "),v("td",[t._v("比较栈顶两double型数值大小, 并将结果(1, 0或-1)压入栈顶; 当其中一个数值为"),v("code",[t._v("NaN")]),t._v("时, 将1压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0x99")]),t._v(" "),v("td",[t._v("ifeq")]),t._v(" "),v("td",[t._v("当栈顶int型数值等于0时跳转")])]),t._v(" "),v("tr",[v("td",[t._v("0x9a")]),t._v(" "),v("td",[t._v("ifne")]),t._v(" "),v("td",[t._v("当栈顶int型数值不等于0时跳转")])]),t._v(" "),v("tr",[v("td",[t._v("0x9b")]),t._v(" "),v("td",[t._v("iflt")]),t._v(" "),v("td",[t._v("当栈顶int型数值小于0时跳转")])]),t._v(" "),v("tr",[v("td",[t._v("0x9c")]),t._v(" "),v("td",[t._v("ifge")]),t._v(" "),v("td",[t._v("当栈顶int型数值大于等于0时跳转")])]),t._v(" "),v("tr",[v("td",[t._v("0x9d")]),t._v(" "),v("td",[t._v("ifgt")]),t._v(" "),v("td",[t._v("当栈顶int型数值大于0时跳转")])]),t._v(" "),v("tr",[v("td",[t._v("0x9e")]),t._v(" "),v("td",[t._v("ifle")]),t._v(" "),v("td",[t._v("当栈顶int型数值小于等于0时跳转")])]),t._v(" "),v("tr",[v("td",[t._v("0x9f")]),t._v(" "),v("td",[t._v("if_icmpeq")]),t._v(" "),v("td",[t._v("比较栈顶两int型数值大小, 当结果等于0时跳转")])]),t._v(" "),v("tr",[v("td",[t._v("0xa0")]),t._v(" "),v("td",[t._v("if_icmpne")]),t._v(" "),v("td",[t._v("比较栈顶两int型数值大小, 当结果不等于0时跳转")])]),t._v(" "),v("tr",[v("td",[t._v("0xa1")]),t._v(" "),v("td",[t._v("if_icmplt")]),t._v(" "),v("td",[t._v("比较栈顶两int型数值大小, 当结果小于0时跳转")])]),t._v(" "),v("tr",[v("td",[t._v("0xa2")]),t._v(" "),v("td",[t._v("if_icmpge")]),t._v(" "),v("td",[t._v("比较栈顶两int型数值大小, 当结果大于等于0时跳转")])]),t._v(" "),v("tr",[v("td",[t._v("0xa3")]),t._v(" "),v("td",[t._v("if_icmpgt")]),t._v(" "),v("td",[t._v("比较栈顶两int型数值大小, 当结果大于0时跳转")])]),t._v(" "),v("tr",[v("td",[t._v("0xa4")]),t._v(" "),v("td",[t._v("if_icmple")]),t._v(" "),v("td",[t._v("比较栈顶两int型数值大小, 当结果小于等于0时跳转")])]),t._v(" "),v("tr",[v("td",[t._v("0xa5")]),t._v(" "),v("td",[t._v("if_acmpeq")]),t._v(" "),v("td",[t._v("比较栈顶两引用型数值, 当结果相等时跳转")])]),t._v(" "),v("tr",[v("td",[t._v("0xa6")]),t._v(" "),v("td",[t._v("if_acmpne")]),t._v(" "),v("td",[t._v("比较栈顶两引用型数值, 当结果不相等时跳转")])]),t._v(" "),v("tr",[v("td",[t._v("0xa7")]),t._v(" "),v("td",[t._v("goto")]),t._v(" "),v("td",[t._v("无条件跳转")])]),t._v(" "),v("tr",[v("td",[t._v("0xa8")]),t._v(" "),v("td",[t._v("jsr")]),t._v(" "),v("td",[t._v("跳转至指定的16位offset位置, 并将jsr的下一条指令地址压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0xa9")]),t._v(" "),v("td",[t._v("ret")]),t._v(" "),v("td",[t._v("返回至本地变量指定的index的指令位置(一般与jsr或jsr_w联合使用)")])]),t._v(" "),v("tr",[v("td",[t._v("0xaa")]),t._v(" "),v("td",[t._v("tableswitch")]),t._v(" "),v("td",[t._v("用于switch条件跳转, case值连续(可变长度指令)")])]),t._v(" "),v("tr",[v("td",[t._v("0xab")]),t._v(" "),v("td",[t._v("lookupswitch")]),t._v(" "),v("td",[t._v("用于switch条件跳转, case值不连续(可变长度指令)")])]),t._v(" "),v("tr",[v("td",[t._v("0xac")]),t._v(" "),v("td",[t._v("ireturn")]),t._v(" "),v("td",[t._v("从当前方法返回int")])]),t._v(" "),v("tr",[v("td",[t._v("0xad")]),t._v(" "),v("td",[t._v("lreturn")]),t._v(" "),v("td",[t._v("从当前方法返回long")])]),t._v(" "),v("tr",[v("td",[t._v("0xae")]),t._v(" "),v("td",[t._v("freturn")]),t._v(" "),v("td",[t._v("从当前方法返回float")])]),t._v(" "),v("tr",[v("td",[t._v("0xaf")]),t._v(" "),v("td",[t._v("dreturn")]),t._v(" "),v("td",[t._v("从当前方法返回double")])]),t._v(" "),v("tr",[v("td",[t._v("0xb0")]),t._v(" "),v("td",[t._v("areturn")]),t._v(" "),v("td",[t._v("从当前方法返回对象引用")])]),t._v(" "),v("tr",[v("td",[t._v("0xb1")]),t._v(" "),v("td",[t._v("return")]),t._v(" "),v("td",[t._v("从当前方法返回void")])]),t._v(" "),v("tr",[v("td",[t._v("0xb2")]),t._v(" "),v("td",[t._v("getstatic")]),t._v(" "),v("td",[t._v("获取指定类的静态域, 并将其压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0xb3")]),t._v(" "),v("td",[t._v("putstatic")]),t._v(" "),v("td",[t._v("为指定类的静态域赋值")])]),t._v(" "),v("tr",[v("td",[t._v("0xb4")]),t._v(" "),v("td",[t._v("getfield")]),t._v(" "),v("td",[t._v("获取指定类的实例域, 并将其压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0xb5")]),t._v(" "),v("td",[t._v("putfield")]),t._v(" "),v("td",[t._v("为指定类的实例域赋值")])]),t._v(" "),v("tr",[v("td",[t._v("0xb6")]),t._v(" "),v("td",[t._v("invokevirtual")]),t._v(" "),v("td",[t._v("调用实例方法")])]),t._v(" "),v("tr",[v("td",[t._v("0xb7")]),t._v(" "),v("td",[t._v("invokespecial")]),t._v(" "),v("td",[t._v("调用超类构建方法, 实例初始化方法, 私有方法")])]),t._v(" "),v("tr",[v("td",[t._v("0xb8")]),t._v(" "),v("td",[t._v("invokestatic")]),t._v(" "),v("td",[t._v("调用静态方法")])]),t._v(" "),v("tr",[v("td",[t._v("0xb9")]),t._v(" "),v("td",[t._v("invokeinterface")]),t._v(" "),v("td",[t._v("调用接口方法")])]),t._v(" "),v("tr",[v("td",[t._v("0xba")]),t._v(" "),v("td",[t._v("invokedynamic")]),t._v(" "),v("td",[t._v("调用动态方法")])]),t._v(" "),v("tr",[v("td",[t._v("0xbb")]),t._v(" "),v("td",[t._v("new")]),t._v(" "),v("td",[t._v("创建一个对象, 并将其引用引用值压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0xbc")]),t._v(" "),v("td",[t._v("newarray")]),t._v(" "),v("td",[t._v("创建一个指定的原始类型(如int, float, char等)的数组, 并将其引用值压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0xbd")]),t._v(" "),v("td",[t._v("anewarray")]),t._v(" "),v("td",[t._v("创建一个引用型(如类, 接口, 数组)的数组, 并将其引用值压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0xbe")]),t._v(" "),v("td",[t._v("arraylength")]),t._v(" "),v("td",[t._v("获取数组的长度值并压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0xbf")]),t._v(" "),v("td",[t._v("athrow")]),t._v(" "),v("td",[t._v("将栈顶的异常抛出")])]),t._v(" "),v("tr",[v("td",[t._v("0xc0")]),t._v(" "),v("td",[t._v("checkcast")]),t._v(" "),v("td",[t._v("检验类型转换, 检验未通过将抛出 ClassCastException")])]),t._v(" "),v("tr",[v("td",[t._v("0xc1")]),t._v(" "),v("td",[t._v("instanceof")]),t._v(" "),v("td",[t._v("检验对象是否是指定类的实际, 如果是将1压入栈顶, 否则将0压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0xc2")]),t._v(" "),v("td",[t._v("monitorenter")]),t._v(" "),v("td",[t._v("获得对象的锁, 用于同步方法或同步块")])]),t._v(" "),v("tr",[v("td",[t._v("0xc3")]),t._v(" "),v("td",[t._v("monitorexit")]),t._v(" "),v("td",[t._v("释放对象的锁, 用于同步方法或同步块")])]),t._v(" "),v("tr",[v("td",[t._v("0xc4")]),t._v(" "),v("td",[t._v("wide")]),t._v(" "),v("td",[t._v("扩展本地变量的宽度")])]),t._v(" "),v("tr",[v("td",[t._v("0xc5")]),t._v(" "),v("td",[t._v("multianewarray")]),t._v(" "),v("td",[t._v("创建指定类型和指定维度的多维数组(执行该指令时, 操作栈中必须包含各维度的长度值), 并将其引用压入栈顶")])]),t._v(" "),v("tr",[v("td",[t._v("0xc6")]),t._v(" "),v("td",[t._v("ifnull")]),t._v(" "),v("td",[t._v("为null时跳转")])]),t._v(" "),v("tr",[v("td",[t._v("0xc7")]),t._v(" "),v("td",[t._v("ifnonnull")]),t._v(" "),v("td",[t._v("不为null时跳转")])]),t._v(" "),v("tr",[v("td",[t._v("0xc8")]),t._v(" "),v("td",[t._v("goto_w")]),t._v(" "),v("td",[t._v("无条件跳转(宽索引)")])]),t._v(" "),v("tr",[v("td",[t._v("0xc9")]),t._v(" "),v("td",[t._v("jsr_w")]),t._v(" "),v("td",[t._v("跳转至指定的32位offset位置, 并将jsr_w的下一条指令地址压入栈顶")])])])])])}),[],!1,null,null,null);_.default=n.exports}}]);