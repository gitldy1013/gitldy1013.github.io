(window.webpackJsonp=window.webpackJsonp||[]).push([[588],{1284:function(s,n,t){"use strict";t.r(n);var a=t(5),e=Object(a.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"go语言基础之流程控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#go语言基础之流程控制"}},[s._v("#")]),s._v(" Go语言基础之流程控制")]),s._v(" "),t("blockquote",[t("ul",[t("li",[s._v("流程控制是每种编程语言控制逻辑走向和执行次序的重要部分，流程控制可以说是一门语言的“经脉”。")]),s._v(" "),t("li",[s._v("Go语言中最常用的流程控制有"),t("code",[s._v("if")]),s._v("和"),t("code",[s._v("for")]),s._v("，而"),t("code",[s._v("switch")]),s._v("和"),t("code",[s._v("goto")]),s._v("主要是为了简化代码、降低重复代码而生的结构，属于扩展类的流程控制。")])])]),s._v(" "),t("h2",{attrs:{id:"if-else-分支结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#if-else-分支结构"}},[s._v("#")]),s._v(" if else(分支结构)")]),s._v(" "),t("h3",{attrs:{id:"if条件判断基本写法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#if条件判断基本写法"}},[s._v("#")]),s._v(" if条件判断基本写法")]),s._v(" "),t("p",[s._v("Go语言中"),t("code",[s._v("if")]),s._v("条件判断的格式如下：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("    if 表达式1 {\n        分支1\n    } else if 表达式2 {\n        分支2\n    } else{\n        分支3\n    }\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("当表达式1的结果为"),t("code",[s._v("true")]),s._v("时，执行分支1，否则判断表达式2，如果满足则执行分支2，都不满足时，则执行分支3。 if判断中的"),t("code",[s._v("else if")]),s._v("和"),t("code",[s._v("else")]),s._v("都是可选的，可以根据实际需要进行选择。")]),s._v(" "),t("p",[s._v("Go语言规定与"),t("code",[s._v("if")]),s._v("匹配的左括号"),t("code",[s._v("{")]),s._v("必须与"),t("code",[s._v("if和表达式")]),s._v("放在同一行，"),t("code",[s._v("{")]),s._v("放在其他位置会触发编译错误。 同理，与"),t("code",[s._v("else")]),s._v("匹配的"),t("code",[s._v("{")]),s._v("也必须与"),t("code",[s._v("else")]),s._v("写在同一行，"),t("code",[s._v("else")]),s._v("也必须与上一个"),t("code",[s._v("if")]),s._v("或"),t("code",[s._v("else if")]),s._v("右边的大括号在同一行。")]),s._v(" "),t("p",[s._v("举个例子：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('    func ifDemo1() {\n    \tscore := 65\n    \tif score >= 90 {\n    \t\tfmt.Println("A")\n    \t} else if score > 75 {\n    \t\tfmt.Println("B")\n    \t} else {\n    \t\tfmt.Println("C")\n    \t}\n    }\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("h3",{attrs:{id:"if条件判断特殊写法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#if条件判断特殊写法"}},[s._v("#")]),s._v(" if条件判断特殊写法")]),s._v(" "),t("p",[s._v("if条件判断还有一种特殊的写法，可以在 if 表达式之前添加一个执行语句，再根据变量值进行判断，举个例子：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('    func ifDemo2() {\n    \tif score := 65; score >= 90 {\n    \t\tfmt.Println("A")\n    \t} else if score > 75 {\n    \t\tfmt.Println("B")\n    \t} else {\n    \t\tfmt.Println("C")\n    \t}\n    }\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[t("strong",[s._v("思考题：")]),s._v(" 上下两种写法的区别在哪里？")]),s._v(" "),t("h2",{attrs:{id:"for-循环结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#for-循环结构"}},[s._v("#")]),s._v(" for(循环结构)")]),s._v(" "),t("p",[s._v("Go 语言中的所有循环类型均可以使用"),t("code",[s._v("for")]),s._v("关键字来完成。")]),s._v(" "),t("p",[s._v("for循环的基本格式如下：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("    for 初始语句;条件表达式;结束语句{\n        循环体语句\n    }\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("条件表达式返回"),t("code",[s._v("true")]),s._v("时循环体不停地进行循环，直到条件表达式返回"),t("code",[s._v("false")]),s._v("时自动退出循环。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("    func forDemo() {\n    \tfor i := 0; i < 10; i++ {\n    \t\tfmt.Println(i)\n    \t}\n    }\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("for循环的初始语句可以被忽略，但是初始语句后的分号必须要写，例如：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("    func forDemo2() {\n    \ti := 0\n    \tfor ; i < 10; i++ {\n    \t\tfmt.Println(i)\n    \t}\n    }\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("for循环的初始语句和结束语句都可以省略，例如：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("    func forDemo3() {\n    \ti := 0\n    \tfor i < 10 {\n    \t\tfmt.Println(i)\n    \t\ti++\n    \t}\n    }\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("这种写法类似于其他编程语言中的"),t("code",[s._v("while")]),s._v("，在"),t("code",[s._v("while")]),s._v("后添加一个条件表达式，满足条件表达式时持续循环，否则结束循环。")]),s._v(" "),t("h3",{attrs:{id:"无限循环"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#无限循环"}},[s._v("#")]),s._v(" 无限循环")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("    for {\n        循环体语句\n    }\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("for循环可以通过"),t("code",[s._v("break")]),s._v("、"),t("code",[s._v("goto")]),s._v("、"),t("code",[s._v("return")]),s._v("、"),t("code",[s._v("panic")]),s._v("语句强制退出循环。")]),s._v(" "),t("h2",{attrs:{id:"for-range-键值循环"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#for-range-键值循环"}},[s._v("#")]),s._v(" for range(键值循环)")]),s._v(" "),t("p",[s._v("Go语言中可以使用"),t("code",[s._v("for range")]),s._v("遍历数组、切片、字符串、map 及通道（channel）。 通过"),t("code",[s._v("for range")]),s._v("遍历的返回值有以下规律：")]),s._v(" "),t("ol",[t("li",[s._v("数组、切片、字符串返回索引和值。")]),s._v(" "),t("li",[s._v("map返回键和值。")]),s._v(" "),t("li",[s._v("通道（channel）只返回通道内的值。")])]),s._v(" "),t("h2",{attrs:{id:"switch-case"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#switch-case"}},[s._v("#")]),s._v(" switch case")]),s._v(" "),t("p",[s._v("使用"),t("code",[s._v("switch")]),s._v("语句可方便地对大量的值进行条件判断。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('    func switchDemo1() {\n    \tfinger := 3\n    \tswitch finger {\n    \tcase 1:\n    \t\tfmt.Println("大拇指")\n    \tcase 2:\n    \t\tfmt.Println("食指")\n    \tcase 3:\n    \t\tfmt.Println("中指")\n    \tcase 4:\n    \t\tfmt.Println("无名指")\n    \tcase 5:\n    \t\tfmt.Println("小拇指")\n    \tdefault:\n    \t\tfmt.Println("无效的输入！")\n    \t}\n    }\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("p",[s._v("Go语言规定每个"),t("code",[s._v("switch")]),s._v("只能有一个"),t("code",[s._v("default")]),s._v("分支。")]),s._v(" "),t("p",[s._v("一个分支可以有多个值，多个case值中间使用英文逗号分隔。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('    func testSwitch3() {\n    \tswitch n := 7; n {\n    \tcase 1, 3, 5, 7, 9:\n    \t\tfmt.Println("奇数")\n    \tcase 2, 4, 6, 8:\n    \t\tfmt.Println("偶数")\n    \tdefault:\n    \t\tfmt.Println(n)\n    \t}\n    }\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("分支还可以使用表达式，这时候switch语句后面不需要再跟判断变量。例如：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('    func switchDemo4() {\n    \tage := 30\n    \tswitch {\n    \tcase age < 25:\n    \t\tfmt.Println("好好学习吧")\n    \tcase age > 25 && age < 35:\n    \t\tfmt.Println("好好工作吧")\n    \tcase age > 60:\n    \t\tfmt.Println("好好享受吧")\n    \tdefault:\n    \t\tfmt.Println("活着真好")\n    \t}\n    }\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("p",[t("code",[s._v("fallthrough")]),s._v("语法可以执行满足条件的case的下一个case，是为了兼容C语言中的case设计的。")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('    func switchDemo5() {\n    \ts := "a"\n    \tswitch {\n    \tcase s == "a":\n    \t\tfmt.Println("a")\n    \t\tfallthrough\n    \tcase s == "b":\n    \t\tfmt.Println("b")\n    \tcase s == "c":\n    \t\tfmt.Println("c")\n    \tdefault:\n    \t\tfmt.Println("...")\n    \t}\n    }\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[s._v("输出：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("    a\n    b\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h2",{attrs:{id:"goto-跳转到指定标签"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#goto-跳转到指定标签"}},[s._v("#")]),s._v(" goto(跳转到指定标签)")]),s._v(" "),t("p",[t("code",[s._v("goto")]),s._v("语句通过标签进行代码间的无条件跳转。"),t("code",[s._v("goto")]),s._v("语句可以在快速跳出循环、避免重复退出上有一定的帮助。Go语言中使用"),t("code",[s._v("goto")]),s._v("语句能简化一些代码的实现过程。 例如双层嵌套的for循环要退出时：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('    func gotoDemo1() {\n    \tvar breakFlag bool\n    \tfor i := 0; i < 10; i++ {\n    \t\tfor j := 0; j < 10; j++ {\n    \t\t\tif j == 2 {\n    \t\t\t\t// 设置退出标签\n    \t\t\t\tbreakFlag = true\n    \t\t\t\tbreak\n    \t\t\t}\n    \t\t\tfmt.Printf("%v-%v\\n", i, j)\n    \t\t}\n    \t\t// 外层for循环判断\n    \t\tif breakFlag {\n    \t\t\tbreak\n    \t\t}\n    \t}\n    }\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("p",[s._v("使用"),t("code",[s._v("goto")]),s._v("语句能简化代码：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('    func gotoDemo2() {\n    \tfor i := 0; i < 10; i++ {\n    \t\tfor j := 0; j < 10; j++ {\n    \t\t\tif j == 2 {\n    \t\t\t\t// 设置退出标签\n    \t\t\t\tgoto breakTag\n    \t\t\t}\n    \t\t\tfmt.Printf("%v-%v\\n", i, j)\n    \t\t}\n    \t}\n    \treturn\n    \t// 标签\n    breakTag:\n    \tfmt.Println("结束for循环")\n    }\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("h2",{attrs:{id:"break-跳出循环"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#break-跳出循环"}},[s._v("#")]),s._v(" break(跳出循环)")]),s._v(" "),t("p",[t("code",[s._v("break")]),s._v("语句可以结束"),t("code",[s._v("for")]),s._v("、"),t("code",[s._v("switch")]),s._v("和"),t("code",[s._v("select")]),s._v("的代码块。")]),s._v(" "),t("p",[t("code",[s._v("break")]),s._v("语句还可以在语句后面添加标签，表示退出某个标签对应的代码块，标签要求必须定义在对应的"),t("code",[s._v("for")]),s._v("、"),t("code",[s._v("switch")]),s._v("和 "),t("code",[s._v("select")]),s._v("的代码块上。 举个例子：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('    func breakDemo1() {\n    BREAKDEMO1:\n    \tfor i := 0; i < 10; i++ {\n    \t\tfor j := 0; j < 10; j++ {\n    \t\t\tif j == 2 {\n    \t\t\t\tbreak BREAKDEMO1\n    \t\t\t}\n    \t\t\tfmt.Printf("%v-%v\\n", i, j)\n    \t\t}\n    \t}\n    \tfmt.Println("...")\n    }\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("h2",{attrs:{id:"continue-继续下次循环"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#continue-继续下次循环"}},[s._v("#")]),s._v(" continue(继续下次循环)")]),s._v(" "),t("p",[t("code",[s._v("continue")]),s._v("语句可以结束当前循环，开始下一次的循环迭代过程，仅限在"),t("code",[s._v("for")]),s._v("循环内使用。")]),s._v(" "),t("p",[s._v("在 "),t("code",[s._v("continue")]),s._v("语句后添加标签时，表示开始标签对应的循环。例如：")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('    func continueDemo() {\n    forloop1:\n    \tfor i := 0; i < 5; i++ {\n    \t\t// forloop2:\n    \t\tfor j := 0; j < 5; j++ {\n    \t\t\tif i == 2 && j == 2 {\n    \t\t\t\tcontinue forloop1\n    \t\t\t}\n    \t\t\tfmt.Printf("%v-%v\\n", i, j)\n    \t\t}\n    \t}\n    }\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("h2",{attrs:{id:"练习题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#练习题"}},[s._v("#")]),s._v(" 练习题")]),s._v(" "),t("ol",[t("li",[s._v("编写代码打印9*9乘法表。")])])])}),[],!1,null,null,null);n.default=e.exports}}]);