(window.webpackJsonp=window.webpackJsonp||[]).push([[183],{882:function(a,s,n){"use strict";n.r(s);var e=n(5),t=Object(e.a)({},(function(){var a=this,s=a.$createElement,n=a._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h1",{attrs:{id:"hystrix断路器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hystrix断路器"}},[a._v("#")]),a._v(" Hystrix断路器")]),a._v(" "),n("p",[a._v("Hystrix官宣停更，官方推荐使用：resilence4j替换，同时国内Spring Cloud Alibaba 提出了Sentinel实现熔断和限流")]),a._v(" "),n("h2",{attrs:{id:"概述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[a._v("#")]),a._v(" 概述")]),a._v(" "),n("h3",{attrs:{id:"分布式面临的问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分布式面临的问题"}},[a._v("#")]),a._v(" 分布式面临的问题")]),a._v(" "),n("p",[a._v("复杂分布式体系结构中的应用程序有数十个依赖关系，每个依赖关系在某些时候将不可避免地失败（网络卡顿，网络超时）")]),a._v(" "),n("p",[n("img",{attrs:{src:"/images/image-20200408192644381.png",alt:"image-20200408192644381"}})]),a._v(" "),n("h3",{attrs:{id:"服务雪崩"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#服务雪崩"}},[a._v("#")]),a._v(" 服务雪崩")]),a._v(" "),n("p",[a._v("多个微服务之间调用的时候，假设微服务A调用微服务B和微服务C，微服务B和微服务C又调用其它的微服务，这就是所谓的“扇出”。如果扇出的链路上某个微服务的调用响应时间过长或者不可用，对微服务A的调用就会占用越来越多的系统资源，进而引起系统崩溃，所谓的 雪崩效应")]),a._v(" "),n("p",[a._v("对于高流量的应用来说，单一的后端依赖可能会导致所有服务器上的所有资源都在几秒钟内饱和。比失败更糟糕的是，这些应用程序还可能导致服务之间的延迟增加，备份队列，线程和其它系统资源紧张，导致整个系统发生更多的级联故障，这些都表示需要对故障和延迟进行隔离和管理，以便单个依赖关系的失败，不能取消整个应用程序或系统。")]),a._v(" "),n("p",[a._v("通常当你发现一个模块下的某个实例失败后，这时候这个模块依然还会接收流量，然后这个有问题的模块还调用了其他的模块，这样就会发生级联故障，或者叫雪崩")]),a._v(" "),n("h3",{attrs:{id:"hystrix的诞生"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hystrix的诞生"}},[a._v("#")]),a._v(" HyStrix的诞生")]),a._v(" "),n("p",[a._v("Hystrix是一个用于处理分布式系统的延迟和容错的开源库，在分布式系统里，许多依赖不可避免的会调用失败，比如超时，异常等，Hystrix能够保证在一个依赖出问题的情况下，不会导致整体服务失败，避免级联故障，以提高分布式系统的弹性。")]),a._v(" "),n("p",[a._v("断路器 本身是一种开关装置，当某个服务单元发生故障之后，通过断路器的故障监控（类似于熔断保险丝），向调用方返回一个符合预期的，可处理的备选响应（FallBack），而不是长时间的等待或者抛出调用方无法处理的异常，这样就保证了服务调用方的线程不会被长时间、不必要地占用，从而避免了故障在分布式系统中蔓延，乃至雪崩。")]),a._v(" "),n("h3",{attrs:{id:"hystrix作用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hystrix作用"}},[a._v("#")]),a._v(" Hystrix作用")]),a._v(" "),n("ul",[n("li",[a._v("服务降级")]),a._v(" "),n("li",[a._v("服务熔断")]),a._v(" "),n("li",[a._v("接近实时的监控（Hystrix Dashboard）")]),a._v(" "),n("li",[a._v("。。。。")])]),a._v(" "),n("h2",{attrs:{id:"hystrix重要概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hystrix重要概念"}},[a._v("#")]),a._v(" Hystrix重要概念")]),a._v(" "),n("h3",{attrs:{id:"服务降级"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#服务降级"}},[a._v("#")]),a._v(" 服务降级")]),a._v(" "),n("p",[a._v("fallback，假设对方服务不可用了，那么至少需要返回一个兜底的解决方法，即向服务调用方返回一个符合预期的，可处理的备选响应。")]),a._v(" "),n("p",[a._v("例如：服务繁忙，请稍后再试，不让客户端等待并立刻返回一个友好的提示，fallback")]),a._v(" "),n("p",[n("strong",[a._v("哪些情况会触发降级")])]),a._v(" "),n("ul",[n("li",[a._v("程序运行异常")]),a._v(" "),n("li",[a._v("超时")]),a._v(" "),n("li",[a._v("服务熔断触发服务降级")]),a._v(" "),n("li",[a._v("线程池/信号量打满也会导致服务降级")])]),a._v(" "),n("h3",{attrs:{id:"服务熔断"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#服务熔断"}},[a._v("#")]),a._v(" 服务熔断")]),a._v(" "),n("p",[a._v("break，类比保险丝达到了最大服务访问后，直接拒绝访问，拉闸断电，然后调用服务降级的方法并返回友好提示")]),a._v(" "),n("p",[a._v("一般过程：服务降级 -> 服务熔断 -> 恢复调用链路")]),a._v(" "),n("h3",{attrs:{id:"服务限流"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#服务限流"}},[a._v("#")]),a._v(" 服务限流")]),a._v(" "),n("p",[a._v("flowlimit，秒杀高并发等操作，严禁一窝蜂的过来拥挤，大家排队，一秒钟N个，有序进行")]),a._v(" "),n("h2",{attrs:{id:"hystrix案例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hystrix案例"}},[a._v("#")]),a._v(" Hystrix案例")]),a._v(" "),n("h3",{attrs:{id:"构建"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#构建"}},[a._v("#")]),a._v(" 构建")]),a._v(" "),n("h4",{attrs:{id:"引入依赖"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#引入依赖"}},[a._v("#")]),a._v(" 引入依赖")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("\x3c!--hystrix--\x3e\n<dependency>\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>\n</dependency>\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br")])]),n("h4",{attrs:{id:"启动类添加hystrix注解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#启动类添加hystrix注解"}},[a._v("#")]),a._v(" 启动类添加Hystrix注解")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('@SpringBootApplication\n@EnableDiscoveryClient\n@EnableCircuitBreaker\npublic class PaymentHystrixMain8001 {\n    public static void main(String[] args) {\n        SpringApplication.run(PaymentHystrixMain8001.class, args);\n    }\n    /**\n     * 此配置是为了服务监控而配置，与服务容错本身无观，springCloud 升级之后的坑\n     * ServletRegistrationBean因为springboot的默认路径不是/hystrix.stream\n     * 只要在自己的项目中配置上下面的servlet即可\n     * @return\n     */\n    @Bean\n    public ServletRegistrationBean getServlet(){\n        HystrixMetricsStreamServlet streamServlet = new HystrixMetricsStreamServlet();\n        ServletRegistrationBean<HystrixMetricsStreamServlet> registrationBean = new ServletRegistrationBean<>(streamServlet);\n        registrationBean.setLoadOnStartup(1);\n        registrationBean.addUrlMappings("/hystrix.stream");\n        registrationBean.setName("HystrixMetricsStreamServlet");\n        return registrationBean;\n    }\n}\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br"),n("span",{staticClass:"line-number"},[a._v("21")]),n("br"),n("span",{staticClass:"line-number"},[a._v("22")]),n("br"),n("span",{staticClass:"line-number"},[a._v("23")]),n("br")])]),n("h4",{attrs:{id:"业务类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#业务类"}},[a._v("#")]),a._v(" 业务类")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('@Service\npublic class PaymentService {\n    /**\n     * 正常访问\n     *\n     * @param id\n     * @return\n     */\n    public String paymentInfo_OK(Integer id) {\n        return "线程池:" + Thread.currentThread().getName() + " paymentInfo_OK,id:" + id + "\\t" + "O(∩_∩)O哈哈~";\n    }\n\n    /**\n     * 超时访问\n     *\n     * @param id\n     * @return\n     */\n    @HystrixCommand(fallbackMethod = "paymentInfo_TimeOutHandler", commandProperties = {\n            @HystrixProperty(name = "execution.isolation.thread.timeoutInMilliseconds", value = "5000")\n    })\n    public String paymentInfo_TimeOut(Integer id) {\n        int timeNumber = 3;\n        try { TimeUnit.SECONDS.sleep(timeNumber); } catch (InterruptedException e) { e.printStackTrace();}\n        return "线程池:" + Thread.currentThread().getName() + " paymentInfo_TimeOut,id:" + id + "\\t" +\n                "O(∩_∩)O哈哈~  耗时(秒)";\n    }\n\n    public String paymentInfo_TimeOutHandler(Integer id){\n        return "线程池:" + Thread.currentThread().getName() + " 8001系统繁忙请稍后再试！！,id:" + id + "\\t"+"我哭了！！";\n    }\n\n    //====服务熔断，上方是降级\n    /**\n     * 在10秒窗口期中10次请求有6次是请求失败的,断路器将起作用\n     * @param id\n     * @return\n     */\n    @HystrixCommand(\n            fallbackMethod = "paymentCircuitBreaker_fallback", commandProperties = {\n            @HystrixProperty(name = "circuitBreaker.enabled", value = "true"),// 是否开启断路器\n            @HystrixProperty(name = "circuitBreaker.requestVolumeThreshold", value = "10"),// 请求次数\n            @HystrixProperty(name = "circuitBreaker.sleepWindowInMilliseconds", value = "10000"),// 时间窗口期/时间范文\n            @HystrixProperty(name = "circuitBreaker.errorThresholdPercentage", value = "60")// 失败率达到多少后跳闸\n    }\n    )\n    public String paymentCircuitBreaker(@PathVariable("id") Integer id) {\n        if (id < 0) {\n            throw new RuntimeException("*****id不能是负数");\n        }\n        String serialNumber = IdUtil.simpleUUID();\n        return Thread.currentThread().getName() + "\\t" + "调用成功,流水号:" + serialNumber;\n    }\n\n    public String paymentCircuitBreaker_fallback(@PathVariable("id") Integer id) {\n        return "id 不能负数,请稍后重试,o(╥﹏╥)o id:" + id;\n    }\n}\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br"),n("span",{staticClass:"line-number"},[a._v("21")]),n("br"),n("span",{staticClass:"line-number"},[a._v("22")]),n("br"),n("span",{staticClass:"line-number"},[a._v("23")]),n("br"),n("span",{staticClass:"line-number"},[a._v("24")]),n("br"),n("span",{staticClass:"line-number"},[a._v("25")]),n("br"),n("span",{staticClass:"line-number"},[a._v("26")]),n("br"),n("span",{staticClass:"line-number"},[a._v("27")]),n("br"),n("span",{staticClass:"line-number"},[a._v("28")]),n("br"),n("span",{staticClass:"line-number"},[a._v("29")]),n("br"),n("span",{staticClass:"line-number"},[a._v("30")]),n("br"),n("span",{staticClass:"line-number"},[a._v("31")]),n("br"),n("span",{staticClass:"line-number"},[a._v("32")]),n("br"),n("span",{staticClass:"line-number"},[a._v("33")]),n("br"),n("span",{staticClass:"line-number"},[a._v("34")]),n("br"),n("span",{staticClass:"line-number"},[a._v("35")]),n("br"),n("span",{staticClass:"line-number"},[a._v("36")]),n("br"),n("span",{staticClass:"line-number"},[a._v("37")]),n("br"),n("span",{staticClass:"line-number"},[a._v("38")]),n("br"),n("span",{staticClass:"line-number"},[a._v("39")]),n("br"),n("span",{staticClass:"line-number"},[a._v("40")]),n("br"),n("span",{staticClass:"line-number"},[a._v("41")]),n("br"),n("span",{staticClass:"line-number"},[a._v("42")]),n("br"),n("span",{staticClass:"line-number"},[a._v("43")]),n("br"),n("span",{staticClass:"line-number"},[a._v("44")]),n("br"),n("span",{staticClass:"line-number"},[a._v("45")]),n("br"),n("span",{staticClass:"line-number"},[a._v("46")]),n("br"),n("span",{staticClass:"line-number"},[a._v("47")]),n("br"),n("span",{staticClass:"line-number"},[a._v("48")]),n("br"),n("span",{staticClass:"line-number"},[a._v("49")]),n("br"),n("span",{staticClass:"line-number"},[a._v("50")]),n("br"),n("span",{staticClass:"line-number"},[a._v("51")]),n("br"),n("span",{staticClass:"line-number"},[a._v("52")]),n("br"),n("span",{staticClass:"line-number"},[a._v("53")]),n("br"),n("span",{staticClass:"line-number"},[a._v("54")]),n("br"),n("span",{staticClass:"line-number"},[a._v("55")]),n("br"),n("span",{staticClass:"line-number"},[a._v("56")]),n("br"),n("span",{staticClass:"line-number"},[a._v("57")]),n("br"),n("span",{staticClass:"line-number"},[a._v("58")]),n("br")])]),n("h3",{attrs:{id:"高并发测试"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#高并发测试"}},[a._v("#")]),a._v(" 高并发测试")]),a._v(" "),n("p",[a._v("Jmeter高并发测试")]),a._v(" "),n("p",[a._v("我们创建20000个线程去访问")]),a._v(" "),n("p",[n("img",{attrs:{src:"/images/image-20200408202319733.png",alt:"image-20200408202319733"}})]),a._v(" "),n("p",[a._v("访问刚刚我们写的两个 延时接口")]),a._v(" "),n("p",[n("img",{attrs:{src:"/images/image-20200408202400666.png",alt:"image-20200408202400666"}})]),a._v(" "),n("p",[a._v("我们会发现当线程多的时候，会直接卡死，甚至把其它正常的接口都已经拖累")]),a._v(" "),n("p",[a._v("这是因为我们使用20000个线程去访问那个延时的接口，这样会把该微服务的资源全部集中处理 延时接口，而导致正常的接口资源不够，出现卡顿的现象。")]),a._v(" "),n("p",[a._v("同时tomcat的默认工作线程数被打满，没有多余的线程来分解压力和处理。")]),a._v(" "),n("h3",{attrs:{id:"服务消费者加入"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#服务消费者加入"}},[a._v("#")]),a._v(" 服务消费者加入")]),a._v(" "),n("p",[a._v("刚刚我们能够看到，光是调用服务提供者就不能支持20000的并发量，这个时候，在使用服务消费者的引入，同时请求该接口，这个时候我们就需要在服务消费端设置服务降级了")]),a._v(" "),n("p",[a._v("首先启动 hystrix，@EnableHystrix")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("@SpringBootApplication\n@EnableEurekaClient\n@EnableFeignClients\n@EnableHystrix\npublic class OrderHystrixMain80 {\n    public static void main(String[] args) {\n        SpringApplication.run(OrderHystrixMain80.class, args);\n    }\n}\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br")])]),n("p",[a._v("然后修改yml")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("server:\n  port: 80\neureka:\n  client:\n    register-with-eureka: false\n    fetch-registry: true\n    service-url:\n      defaultZone: http://eureka7001.com:7001/eureka,http://eureka7002.com:7002/eureka\n  # 设置feign客户端超时时间(OpenFeign默认支持ribbon)\nfeign:\n  hystrix:\n    enabled: true\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br")])]),n("p",[a._v("最后我们在feign调用上增加 fallBack")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('@Component\n@FeignClient(value = "cloud-provider-hystrix-payment", fallback = PaymentFallbackService.class)\npublic interface PaymentHystrixService {\n    /**\n     * 正常访问\n     *\n     * @param id\n     * @return\n     */\n    @GetMapping("/payment/hystrix/ok/{id}")\n    public String paymentInfo_OK(@PathVariable("id") Integer id);\n    /**\n     * 超时访问\n     *\n     * @param id\n     * @return\n     */\n    @GetMapping("/payment/hystrix/timeout/{id}")\n    public String paymentInfo_TimeOut(@PathVariable("id") Integer id);\n}\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br")])]),n("p",[a._v("同时fallback的方法为")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('@Component\npublic class PaymentFallbackService implements PaymentHystrixService {\n    @Override\n    public String paymentInfo_OK(Integer id) {\n        return "--- PaymentFallbackService  fall  paymentInfo_OK vack ，/(ㄒoㄒ)/~~";\n    }\n\n    @Override\n    public String paymentInfo_TimeOut(Integer id) {\n        return "--- PaymentFallbackService  fall  paymentInfo_TimeOut， /(ㄒoㄒ)/~~";\n    }\n}\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br")])]),n("h2",{attrs:{id:"解决方案"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[a._v("#")]),a._v(" 解决方案")]),a._v(" "),n("h3",{attrs:{id:"原因"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原因"}},[a._v("#")]),a._v(" 原因")]),a._v(" "),n("p",[a._v("超时导致服务器变慢，超时不再等待")]),a._v(" "),n("p",[a._v("出错，宕机或者程序运行出错，出错要有兜底")]),a._v(" "),n("p",[a._v("解决")]),a._v(" "),n("ul",[n("li",[a._v("对方服务8001超时了，调用者80不能一直卡死等待，必须有服务降级")]),a._v(" "),n("li",[a._v("对方服务8001宕机了，调用者80不能一直卡死，必须有服务降级")]),a._v(" "),n("li",[a._v("对方服务8001正常，调用者自己出故障或者有自我要求（自己的等待时间小于服务提供者），自己处理降级")])]),a._v(" "),n("h3",{attrs:{id:"服务降级-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#服务降级-2"}},[a._v("#")]),a._v(" 服务降级")]),a._v(" "),n("p",[a._v("使用新的注解 "),n("code",[a._v("@HystrixCommand")])]),a._v(" "),n("p",[a._v("同时需要在主启动类上新增："),n("code",[a._v("@EnableCircuiteBreaker")])]),a._v(" "),n("p",[a._v("设置8001自身调用超时时间的峰值，峰值内可以正常运行，超过了需要有兜底的方法处理，作为服务降级fallback")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('    /**\n     * 超时访问\n     *\n     * @param id\n     * @return\n     */\n    @HystrixCommand(fallbackMethod = "paymentInfo_TimeOutHandler", commandProperties = {\n            @HystrixProperty(name = "execution.isolation.thread.timeoutInMilliseconds", value = "3000")\n    })\n    public String paymentInfo_TimeOut(Integer id) {\n        int timeNumber = 3;\n        try { TimeUnit.SECONDS.sleep(timeNumber); } catch (InterruptedException e) { e.printStackTrace();}\n        return "线程池:" + Thread.currentThread().getName() + " paymentInfo_TimeOut,id:" + id + "\\t" +\n                "O(∩_∩)O哈哈~  耗时(秒)";\n    }\n\n    /**\n     * 兜底的解决方案\n     * @param id\n     * @return\n     */\n    public String paymentInfo_TimeOutHandler(Integer id){\n        return "线程池:" + Thread.currentThread().getName() + " 8001系统繁忙请稍后再试！！,id:" + id + "\\t"+"我哭了！！";\n    }\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br"),n("span",{staticClass:"line-number"},[a._v("21")]),n("br"),n("span",{staticClass:"line-number"},[a._v("22")]),n("br"),n("span",{staticClass:"line-number"},[a._v("23")]),n("br"),n("span",{staticClass:"line-number"},[a._v("24")]),n("br")])]),n("p",[a._v("上述的方法就是当在规定的5秒内没有完成，那么就会触发服务降级，返回一个兜底的解决方案")]),a._v(" "),n("p",[a._v("同时不仅是超时，假设服务内的方法出现了异常，也同样会触发兜底的解决方法，例如下面的代码，我们制造出一个除数为0的异常。")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('    @HystrixCommand(fallbackMethod = "paymentInfo_TimeOutHandler", commandProperties = {\n            @HystrixProperty(name = "execution.isolation.thread.timeoutInMilliseconds", value = "3000")\n    })\n    public String paymentInfo_TimeOut(Integer id) {\n        int timeNumber = 10 / 0;\n        return "线程池:" + Thread.currentThread().getName() + " paymentInfo_TimeOut,id:" + id + "\\t" +\n                "O(∩_∩)O哈哈~  耗时(秒)";\n    }\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br")])]),n("p",[a._v("上述说的是服务提供方的降级，服务消费者也需要设置服务降级的处理保护，也就是对客户端进行保护")]),a._v(" "),n("p",[a._v("也就是说服务降级，既可以放在客户端，也可以放在服务端，一般而言是放在客户端进行服务降级的")]),a._v(" "),n("p",[a._v("首先主启动类设置："),n("code",[a._v("@EnableHystrix")])]),a._v(" "),n("blockquote",[n("p",[a._v("配置过的devtool热部署对java代码的改动明显，但是对@HystrixCommand内属性的修改建议重启微服务")])]),a._v(" "),n("p",[a._v("然后yml开启hystrix")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("feign:\n  hystrix:\n    enabled: true\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br")])]),n("p",[a._v("服务消费端降级")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('    @GetMapping("/consumer/payment/hystrix/timeout/{id}")\n    @HystrixCommand(fallbackMethod = "paymentTimeOutFallbackMethod", commandProperties = {\n            @HystrixProperty(name = "execution.isolation.thread.timeoutInMilliseconds", value = "1500")\n    })\n    public String paymentInfo_TimeOut(@PathVariable("id") Integer id) {\n        return paymentHystrixService.paymentInfo_TimeOut(id);\n    }\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br")])]),n("p",[n("strong",[a._v("目前问题")])]),a._v(" "),n("p",[a._v("目前异常处理的方法，和业务代码耦合，这就造成耦合度比较高")]),a._v(" "),n("p",[a._v("解决方法就是使用统一的服务降级方法")]),a._v(" "),n("p",[n("strong",[a._v("方法1：")])]),a._v(" "),n("p",[a._v("除了个别重要核心业务有专属，其它普通的可以通过"),n("code",[a._v('@DefaultProperties(defaultFallback = "")')]),a._v("，这样通用的和独享的各自分开，避免了代码膨胀，合理减少了代码量")]),a._v(" "),n("p",[a._v("可以在Controller处设置 "),n("code",[a._v('@DefaultProperties(defaultFallback = "payment_Global_FallbackMethod")')])]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('@RestController\n@Slf4j\n@DefaultProperties(defaultFallback = "payment_Global_FallbackMethod")\npublic class OrderHystrixController {\n\n    @GetMapping("/consumer/payment/hystrix/timeout/{id}")\n    @HystrixCommand  // 这个方法也会走全局 fallback\n    public String paymentInfo_TimeOut(@PathVariable("id") Integer id) {\n        int age = 10/0; //方法前挂了，跟后面挂了两种\n        return paymentHystrixService.paymentInfo_TimeOut(id);\n    }\n\n\n    //下面是全局fallback方法\n    public String payment_Global_FallbackMethod(){\n        return "Global异常处理信息，请稍后再试,/(ㄒoㄒ)/~~";\n    }\n}\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br")])]),n("p",[n("strong",[a._v("方法2：")])]),a._v(" "),n("p",[a._v("我们现在还发现，兜底的方法 和 我们的业务代码耦合在一块比较混乱")]),a._v(" "),n("p",[a._v("我们可以在feign调用的时候，增加hystrix的服务降级处理的实现类，这样就可以进行解耦")]),a._v(" "),n("p",[a._v("格式："),n("code",[a._v("@FeignClient(fallback = PaymentFallbackService.class)")])]),a._v(" "),n("p",[a._v("我们要面对的异常主要有")]),a._v(" "),n("ul",[n("li",[a._v("运行")]),a._v(" "),n("li",[a._v("超时")]),a._v(" "),n("li",[a._v("宕机")])]),a._v(" "),n("p",[a._v("需要新建一个FallbackService实现类，然后通过实现类统一为feign接口里面的方法进行异常处理")]),a._v(" "),n("p",[a._v("feign接口")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('@Component\n@FeignClient(value = "cloud-provider-hystrix-payment", fallback = PaymentFallbackService.class)\npublic interface PaymentHystrixService {\n    /**\n     * 正常访问\n     *\n     * @param id\n     * @return\n     */\n    @GetMapping("/payment/hystrix/ok/{id}")\n    public String paymentInfo_OK(@PathVariable("id") Integer id);\n    /**\n     * 超时访问\n     *\n     * @param id\n     * @return\n     */\n    @GetMapping("/payment/hystrix/timeout/{id}")\n    public String paymentInfo_TimeOut(@PathVariable("id") Integer id);\n}\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br")])]),n("p",[a._v("实现类")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('@Component\npublic class PaymentFallbackService implements PaymentHystrixService {\n    @Override\n    public String paymentInfo_OK(Integer id) {\n        return "--- PaymentFallbackService  fall  paymentInfo_OK vack ，/(ㄒoㄒ)/~~";\n    }\n\n    @Override\n    public String paymentInfo_TimeOut(Integer id) {\n        return "--- PaymentFallbackService  fall  paymentInfo_TimeOut， /(ㄒoㄒ)/~~";\n    }\n}\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br")])]),n("p",[a._v("这个时候，如果我们将服务提供方进行关闭，但是我们在客户端做了服务降级处理，让客户端在服务端不可用时，也会获得提示信息，而不会挂起耗死服务器")]),a._v(" "),n("h3",{attrs:{id:"服务熔断-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#服务熔断-2"}},[a._v("#")]),a._v(" 服务熔断")]),a._v(" "),n("p",[a._v("服务熔断也是服务降级的一个 特例")]),a._v(" "),n("h4",{attrs:{id:"熔断概念"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#熔断概念"}},[a._v("#")]),a._v(" 熔断概念")]),a._v(" "),n("p",[a._v("熔断机制是应对雪崩效应的一种微服务链路保护机制，当扇出链路的某个微服务不可用或者响应时间太长时，会进行服务的降级，进而熔断该节点微服务的调用，快速返回错误的响应状态")]),a._v(" "),n("p",[a._v("当检测到该节点微服务调用响应正常后，恢复调用链路")]),a._v(" "),n("p",[a._v("在Spring Cloud框架里，熔断机制通过Hystrix实现，Hystrix会监控微服务间调用的状况，当失败的调用到一定的阈值，缺省是5秒内20次调用失败，就会启动熔断机制，熔断机制的注解还是 "),n("code",[a._v("@HystrixCommand")])]),a._v(" "),n("p",[a._v("来源，微服务提出者马丁福勒：https://martinfowler.com/bliki/CircuitBreaker.html")]),a._v(" "),n("blockquote",[n("p",[a._v("这个简单的断路器避免了在电路打开时进行保护调用，但是当情况恢复正常时需要外部干预来重置它。对于建筑物中的断路器，这是一种合理的方法，但是对于软件断路器，我们可以让断路器本身检测底层调用是否再次工作。我们可以通过在适当的间隔之后再次尝试protected调用来实现这种自重置行为，并在断路器成功时重置它")])]),a._v(" "),n("p",[n("img",{attrs:{src:"/images/image-20200409095855788.png",alt:"image-20200409095855788"}})]),a._v(" "),n("p",[a._v("熔断器的三种状态：打开，关闭，半开")]),a._v(" "),n("p",[a._v("这里提出了 半开的概念，首先打开一半的，然后慢慢的进行恢复，最后在把断路器关闭")]),a._v(" "),n("p",[a._v("降级 -> 熔断 -> 恢复")]),a._v(" "),n("p",[a._v("这里我们在服务提供方 8001，增加服务熔断")]),a._v(" "),n("p",[a._v("这里有四个字段")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('// 是否开启断路器\n@HystrixProperty(name = "circuitBreaker.enabled", value = "true"),\n\n// 请求次数\n@HystrixProperty(name = "circuitBreaker.requestVolumeThreshold", value = "10"),\n\n// 时间窗口期/时间范文\n@HystrixProperty(name = "circuitBreaker.sleepWindowInMilliseconds", value = "10000"),\n\n// 失败率达到多少后跳闸\n@HystrixProperty(name = "circuitBreaker.errorThresholdPercentage", value = "60")\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br")])]),n("p",[a._v("首先是是否开启熔断器，然后是在一个时间窗口内，有60%的失败，那么就启动断路器，也就是10次里面，6次失败，完整代码如下：")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('    /**\n     * 在10秒窗口期中10次请求有6次是请求失败的,断路器将起作用\n     * @param id\n     * @return\n     */\n    @HystrixCommand(\n            fallbackMethod = "paymentCircuitBreaker_fallback", commandProperties = {\n            @HystrixProperty(name = "circuitBreaker.enabled", value = "true"),// 是否开启断路器\n            @HystrixProperty(name = "circuitBreaker.requestVolumeThreshold", value = "10"),// 请求次数\n            @HystrixProperty(name = "circuitBreaker.sleepWindowInMilliseconds", value = "10000"),// 时间窗口期/时间范文\n            @HystrixProperty(name = "circuitBreaker.errorThresholdPercentage", value = "60")// 失败率达到多少后跳闸\n    }\n    )\n    public String paymentCircuitBreaker(@PathVariable("id") Integer id) {\n        if (id < 0) {\n            throw new RuntimeException("*****id不能是负数");\n        }\n        String serialNumber = IdUtil.simpleUUID();\n        return Thread.currentThread().getName() + "\\t" + "调用成功,流水号:" + serialNumber;\n    }\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br")])]),n("p",[a._v("当断路器被打开的时候，即使是正确的请求，该方法也会被断路")]),a._v(" "),n("h3",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[a._v("#")]),a._v(" 总结")]),a._v(" "),n("h4",{attrs:{id:"熔断类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#熔断类型"}},[a._v("#")]),a._v(" 熔断类型")]),a._v(" "),n("ul",[n("li",[a._v("熔断打开：请求不再进行调用当前服务，内部设置时钟一般为MTTR（平均故障处理时间），当打开时长达所设时钟则进入半熔断状态")]),a._v(" "),n("li",[a._v("熔断关闭：熔断关闭不会对服务进行熔断")]),a._v(" "),n("li",[a._v("熔断半开：部分请求根据规则调用当前服务，如果请求成功且符合规则，则认为当前服务恢复正常，关闭熔断")])]),a._v(" "),n("h4",{attrs:{id:"断路器启动条件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#断路器启动条件"}},[a._v("#")]),a._v(" 断路器启动条件")]),a._v(" "),n("p",[n("img",{attrs:{src:"/images/image-20200409114527145.png",alt:"image-20200409114527145"}})]),a._v(" "),n("p",[a._v("涉及到断路器的三个重要参数：快照时间窗，请求总阈值，错误百分比阈值")]),a._v(" "),n("ul",[n("li",[a._v("快照时间窗：断路器确定是否打开需要统计一些请求和错误数据，而统计的时间范围就是快照时间窗，默认为最近的10秒。")]),a._v(" "),n("li",[a._v("请求总数阈值：在快照时间窗口内，必须满足请求总数阈值才有资格熔断。默认为20，意味着在10秒内，如果hystrix的调用总次数不足20次，即使所有请求都超时或者其他原因失败，断路器都不会打开。")]),a._v(" "),n("li",[a._v("错误百分比阈值：当请求总数在快照时间窗内超过了阈值，比如发生了30次调用，并且有15次发生了超时异常，也就是超过了50的错误百分比，在默认设定的50%阈值情况下，这时候就会将断路器打开")])]),a._v(" "),n("p",[a._v("开启和关闭的条件")]),a._v(" "),n("ul",[n("li",[a._v("当满足一定阈值的时候（默认10秒内超过20个请求）")]),a._v(" "),n("li",[a._v("当失败率达到一定的时候（默认10秒内超过50%的请求失败）")]),a._v(" "),n("li",[a._v("到达以上阈值，断路器将会开启")]),a._v(" "),n("li",[a._v("当开启的时候，所有请求都不会进行转发")]),a._v(" "),n("li",[a._v("一段时间之后（默认是5秒），这个时候断路器是半开状态，会让其中一个请求进行转发。如果成功，断路器会关闭，若失败，继续开启，重复4和5")])]),a._v(" "),n("p",[a._v("断路器开启后")]),a._v(" "),n("ul",[n("li",[a._v("再有请求调用的时候，将不会调用主逻辑，而是直接调用降级fallback，通过断路器，实现了自动的发现错误并将降级逻辑切换为主逻辑，减少相应延迟的效果。")]),a._v(" "),n("li",[a._v("原来的主逻辑如何恢复？\n"),n("ul",[n("li",[a._v("对于这个问题，Hystrix实现了自动恢复功能，当断路器打开，对主逻辑进行熔断之后，hystrix会启动一个休眠时间窗，在这个时间窗内，降级逻辑是临时的成为主逻辑，当休眠时间窗到期，断路器将进入半开状态，释放一次请求到原来的主逻辑上，如果此次请求正常返回，断路器将继续闭合，主逻辑恢复，如果这次请求依然有问题，断路器继续保持打开状态，休眠时间窗重新计时。")])])])]),a._v(" "),n("h3",{attrs:{id:"服务限流-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#服务限流-2"}},[a._v("#")]),a._v(" 服务限流")]),a._v(" "),n("p",[a._v("后面讲解Sentinel的时候进行说明")]),a._v(" "),n("h2",{attrs:{id:"hystrix工作流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hystrix工作流程"}},[a._v("#")]),a._v(" Hystrix工作流程")]),a._v(" "),n("p",[n("img",{attrs:{src:"/images/image-20200409120112552.png",alt:"image-20200409120112552"}})]),a._v(" "),n("p",[a._v("蓝色：调用路径")]),a._v(" "),n("p",[a._v("红色：返回路径")]),a._v(" "),n("p",[a._v("完整的请求路线：")]),a._v(" "),n("ol",[n("li",[a._v("选择一个Hystrix注册方式")]),a._v(" "),n("li",[a._v("二选一即可")]),a._v(" "),n("li",[a._v("判断缓存中是否包含需要返回的内容（如果有直接返回）")]),a._v(" "),n("li",[a._v("断路器是否为打开状态（如果是，直接跳转到8，返回）")]),a._v(" "),n("li",[a._v("断路器为健康状态，判断是否有可用资源（没有，直接跳转8）")]),a._v(" "),n("li",[a._v("构造方法和Run方法")]),a._v(" "),n("li",[a._v("将正常，超时，异常的消息发送给断路器")]),a._v(" "),n("li",[a._v("调用getFallback方法，也就是服务降级")]),a._v(" "),n("li",[a._v("直接返回正确结果")])]),a._v(" "),n("h2",{attrs:{id:"服务监控hystrixdashboard"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#服务监控hystrixdashboard"}},[a._v("#")]),a._v(" 服务监控HystrixDashboard")]),a._v(" "),n("h3",{attrs:{id:"概述-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#概述-2"}},[a._v("#")]),a._v(" 概述")]),a._v(" "),n("p",[a._v("除了隔离依赖服务的调用以外，Hystrix还提供了准实时的调用监控（Hystrix Dashboard），Hystrix会持续地记录所有通过Hystrix发起的请求的执行信息，并以统计报表和图形化的形式展示给用户，包括每秒执行多少请求，成功多少请求，失败多少，Netflix通过Hystrix-metrics-event-stream项目实现了对以上指标的监控，SpringCloud也提供了HystrixDashboard整合，对监控内容转化成可视化页面")]),a._v(" "),n("h3",{attrs:{id:"搭建"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#搭建"}},[a._v("#")]),a._v(" 搭建")]),a._v(" "),n("p",[a._v("引入依赖")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("\x3c!--hystrix dashboard--\x3e\n<dependency>\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-starter-netflix-hystrix-dashboard</artifactId>\n</dependency>\n\n\x3c!--监控--\x3e\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-actuator</artifactId>\n</dependency>\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br")])]),n("p",[a._v("application.yml添加端口")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("server:\n  port: 9001\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br")])]),n("p",[a._v("主启动类：配置注解"),n("code",[a._v("@EnableHystrixDashboard")])]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("@SpringBootApplication\n@EnableHystrixDashboard\npublic class HystrixDashboardMain9001 {\n    public static void main(String[] args) {\n        SpringApplication.run(HystrixDashboardMain9001.class);\n    }\n}\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br")])]),n("p",[a._v("同时，最后我们需要注意，每个服务类想要被监控的，都需要在pom文件中，添加一下注解")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("\x3c!--监控--\x3e\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-actuator</artifactId>\n</dependency>\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br")])]),n("p",[a._v("同时在服务提供者的启动类上，需要添加以下的内容")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('@SpringBootApplication\n@EnableDiscoveryClient\n@EnableCircuitBreaker\npublic class PaymentHystrixMain8001 {\n    public static void main(String[] args) {\n        SpringApplication.run(PaymentHystrixMain8001.class, args);\n    }\n    /**\n     * 此配置是为了服务监控而配置，与服务容错本身无观，springCloud 升级之后的坑\n     * ServletRegistrationBean因为springboot的默认路径不是/hystrix.stream\n     * 只要在自己的项目中配置上下面的servlet即可\n     * @return\n     */\n    @Bean\n    public ServletRegistrationBean getServlet(){\n        HystrixMetricsStreamServlet streamServlet = new HystrixMetricsStreamServlet();\n        ServletRegistrationBean<HystrixMetricsStreamServlet> registrationBean = new ServletRegistrationBean<>(streamServlet);\n        registrationBean.setLoadOnStartup(1);\n        registrationBean.addUrlMappings("/hystrix.stream");\n        registrationBean.setName("HystrixMetricsStreamServlet");\n        return registrationBean;\n    }\n}\n\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br"),n("span",{staticClass:"line-number"},[a._v("21")]),n("br"),n("span",{staticClass:"line-number"},[a._v("22")]),n("br"),n("span",{staticClass:"line-number"},[a._v("23")]),n("br"),n("span",{staticClass:"line-number"},[a._v("24")]),n("br")])]),n("p",[a._v("输入以下地址，进入Hystrix的图形化界面")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("http://localhost:9001/hystrix\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br")])]),n("p",[n("img",{attrs:{src:"/images/image-20200409121425718.png",alt:"image-20200409121425718"}})]),a._v(" "),n("h3",{attrs:{id:"使用监控"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用监控"}},[a._v("#")]),a._v(" 使用监控")]),a._v(" "),n("p",[a._v("我们需要使用当前hystrix需要监控的端口号，也就是使用 9001 去监控 8001，即使用hystrix dashboard去监控服务提供者的端口号")]),a._v(" "),n("p",[n("img",{attrs:{src:"/images/image-20200409122102137.png",alt:"image-20200409122102137"}})]),a._v(" "),n("p",[a._v("然后我们运行")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("http://localhost:8001/payment/circuit/31\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br")])]),n("p",[a._v("就能够发现Hystrix Dashboard能够检测到我们的请求")]),a._v(" "),n("p",[n("img",{attrs:{src:"/images/image-20200409122312059.png",alt:"image-20200409122312059"}})]),a._v(" "),n("p",[a._v("假设我们访问错误的方法后")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("http://localhost:8001/payment/circuit/-31\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br")])]),n("p",[a._v("我们能够发现，此时断路器处于开启状态，并且错误率百分100")]),a._v(" "),n("p",[n("img",{attrs:{src:"/images/image-20200409122448651.png",alt:"image-20200409122448651"}})]),a._v(" "),n("p",[a._v("如何看懂图")]),a._v(" "),n("p",[a._v("首先是七种颜色")]),a._v(" "),n("p",[n("img",{attrs:{src:"/images/image-20200409122754448.png",alt:"image-20200409122754448"}})]),a._v(" "),n("p",[a._v("每个颜色都对应的一种结果")]),a._v(" "),n("p",[n("img",{attrs:{src:"/images/image-20200409122820328.png",alt:"image-20200409122820328"}})]),a._v(" "),n("p",[a._v("然后是里面的圆")]),a._v(" "),n("p",[a._v("实心圆：共有两种含义。它通过颜色的变化代表了实例的健康程度，它的健康程度从")]),a._v(" "),n("p",[a._v("绿色 < 黄色 < 橙色 <红色，递减")]),a._v(" "),n("p",[a._v("该实心圆除了颜色变化之外，它的大小也会根据实例的请求流量发生变化，流量越大该实心圆就越大，所以通过该实心圆的展示，就可以快速在大量的实例中快速发现故障实例和高压力实例")]),a._v(" "),n("p",[a._v("曲线：用于记录2分钟内流量的相对变化，可以通过它来观察到流量的上升和下降趋势")]),a._v(" "),n("p",[n("img",{attrs:{src:"/images/image-20200409123214743.png",alt:"image-20200409123214743"}})])])}),[],!1,null,null,null);s.default=t.exports}}]);