(window.webpackJsonp=window.webpackJsonp||[]).push([[220],{917:function(e,t,a){"use strict";a.r(t);var s=a(5),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),a("p",[e._v("今天在写前端页面的时候，遇到这样一个问题，就是当一个页面由两个Vue文件构成的时候，如果在一个vue文件的时候进行了操作，那么需要将操作得到的数据传递给另外一个文件，那么另外页面就需要能够监听到前面这个页面的数据变化")]),e._v(" "),a("p",[e._v("这里以蘑菇博客举例，我们都知道蘑菇博客的头部是单独写在一个组件中，而下面的index的页面，又是另外一个vue文件，那么我在页面1点击搜索，页面2如何知道搜索的值呢？")]),e._v(" "),a("p",[a("img",{attrs:{src:"http://picture.moguit.cn//blog/admin/png/2020/3/7/1583583658750.png",alt:""}})]),e._v(" "),a("h2",{attrs:{id:"解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[e._v("#")]),e._v(" 解决方案")]),e._v(" "),a("p",[e._v("其实解决的方案就是通过vuex来进行实现，步骤如下：")]),e._v(" "),a("ul",[a("li",[e._v("页面1当点击提交按钮的时候，调用vuex的保存方法，将文本内容存储到vuex中")]),e._v(" "),a("li",[e._v("然后页面2使用watch钩子函数，监听 vuex中内容的变化，如果改变了，那么就执行对应的函数")])]),e._v(" "),a("h2",{attrs:{id:"具体代码如下"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#具体代码如下"}},[e._v("#")]),e._v(" 具体代码如下")]),e._v(" "),a("p",[e._v("关于vuex的使用，可以参考："),a("a",{attrs:{href:"http://www.moguit.cn/#/info?blogUid=a00ebe1473c584ff94bdd40402a4d573",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vuex学习指南-实现一个计数器"),a("OutboundLink")],1)]),e._v(" "),a("p",[e._v("首先我们需要定义一个message状态，用于存储我们需要发送的内容")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("import {SET_MESSAGE} from './mutation-types'\n\nconst app = {\n  // 全局状态\n  state: {\n    // 消息，用于更新\n    message: {}\n  },\n  // getters是对数据的包装，例如对数据进行拼接，或者过滤\n  getters: {\n    // 类似于计算属性\n    // 增加的方法\n  },\n  // 如果我们需要更改store中的状态，一定要通过mutations来进行操作\n  mutations: {\n\n    [SET_MESSAGE] (state, message) {\n      state.message = message\n    }\n  },\n\n  // actions是我们定义的一些操作，正常情况下，我们很少会直接调用mutation方法来改变state\n  actions: {\n\n  }\n}\nexport default app\n")])])]),a("p",[e._v("然后在页面1的时候引入")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("// vuex中有mapState方法，相当于我们能够使用它的getset方法\nimport {mapMutations} from 'vuex'\n")])])]),a("p",[e._v("然后在method方法中，解析出刚刚我们定义的setMessage")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("methods:{\n    // 拿到vuex中的写的方法\n    ...mapMutations(['setMessage']),\n}\n")])])]),a("p",[e._v("最后在我们点击的时候，调用setMessage方法")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("// 存储到vuex中\nthis.setMessage(message)\n")])])]),a("p",[e._v("这样，我们的消息就放到了vuex中了，下面我们在页面2，添加watch的钩子函数，用于监听vuex中message状态的变化，如果改变了就会触发，那么我们就可以在这里编写业务逻辑代码了")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[e._v("  watch: {\n    '$store.state.app.message': function (newFlag, oldFlag) {\n         console.log('监听到页面1的变化')\n         // 进行业务逻辑处理\n     }\n}")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);