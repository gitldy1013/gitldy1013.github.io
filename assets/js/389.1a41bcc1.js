(window.webpackJsonp=window.webpackJsonp||[]).push([[389],{1085:function(t,a,e){"use strict";e.r(a);var r=e(5),o=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"什么是-dubbo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是-dubbo"}},[t._v("#")]),t._v(" 什么是 Dubbo")]),t._v(" "),e("h2",{attrs:{id:"概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),e("p",[t._v("Apache Dubbo (incubating) |ˈdʌbəʊ| 是一款高性能、轻量级的开源 Java RPC 分布式服务框架，它提供了三大核心能力：面向接口的远程方法调用，智能容错和负载均衡，以及服务自动注册和发现。她最大的特点是按照分层的方式来架构，使用这种方式可以使各个层之间解耦合（或者最大限度地松耦合）。从服务模型的角度来看，Dubbo 采用的是一种非常简单的模型，要么是提供方提供服务，要么是消费方消费服务，所以基于这一点可以抽象出服务提供方（Provider）和服务消费方（Consumer）两个角色。")]),t._v(" "),e("ul",[e("li",[t._v("官网：http://dubbo.apache.org/zh-cn")]),t._v(" "),e("li",[t._v("GitHub：https://github.com/apache/incubator-dubbo")])])])}),[],!1,null,null,null);a.default=o.exports}}]);