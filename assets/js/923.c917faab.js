(window.webpackJsonp=window.webpackJsonp||[]).push([[923],{1619:function(s,a,e){"use strict";e.r(a);var n=e(5),r=Object(n.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"配置-swagger2-接口文档引擎"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置-swagger2-接口文档引擎"}},[s._v("#")]),s._v(" 配置 Swagger2 接口文档引擎")]),s._v(" "),e("h2",{attrs:{id:"手写文档存在的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#手写文档存在的问题"}},[s._v("#")]),s._v(" 手写文档存在的问题")]),s._v(" "),e("ul",[e("li",[s._v("文档需要更新的时候，需要再次发送一份给前端，也就是文档更新交流不及时。")]),s._v(" "),e("li",[s._v("接口返回结果不明确")]),s._v(" "),e("li",[s._v("不能直接在线测试接口，通常需要使用工具，比如："),e("code",[s._v("Postman")])]),s._v(" "),e("li",[s._v("接口文档太多，不好管理")])]),s._v(" "),e("h2",{attrs:{id:"使用-swagger-解决问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-swagger-解决问题"}},[s._v("#")]),s._v(" 使用 Swagger 解决问题")]),s._v(" "),e("p",[s._v("Swagger 也就是为了解决这个问题，当然也不能说 Swagger 就一定是完美的，当然也有缺点，最明显的就是代码植入性比较强。")]),s._v(" "),e("h3",{attrs:{id:"maven"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#maven"}},[s._v("#")]),s._v(" Maven")]),s._v(" "),e("p",[s._v("增加 Swagger2 所需依赖，"),e("code",[s._v("pom.xml")]),s._v(" 配置如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("    \x3c!-- Swagger2 Begin --\x3e\n    <dependency>\n        <groupId>io.springfox</groupId>\n        <artifactId>springfox-swagger2</artifactId>\n        <version>2.9.2</version>\n    </dependency>\n    <dependency>\n        <groupId>io.springfox</groupId>\n        <artifactId>springfox-swagger-ui</artifactId>\n        <version>2.9.2</version>\n    </dependency>\n    \x3c!-- Swagger2 End --\x3e\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("h3",{attrs:{id:"配置-swagger2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置-swagger2"}},[s._v("#")]),s._v(" 配置 Swagger2")]),s._v(" "),e("p",[s._v("注意："),e("code",[s._v('RequestHandlerSelectors.basePackage("com.cmcc.myshop.service")')]),s._v(" 为 Controller 包路径，不然生成的文档扫描不到接口")]),s._v(" "),e("p",[s._v("创建一个名为 "),e("code",[s._v("Swagger2Configuration")]),s._v(" 的 Java 配置类，代码如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('    package com.cmcc.myshop.commons.service.config;\n    \n    import org.springframework.context.annotation.Bean;\n    import org.springframework.context.annotation.Configuration;\n    import springfox.documentation.builders.ApiInfoBuilder;\n    import springfox.documentation.builders.PathSelectors;\n    import springfox.documentation.builders.RequestHandlerSelectors;\n    import springfox.documentation.service.ApiInfo;\n    import springfox.documentation.spi.DocumentationType;\n    import springfox.documentation.spring.web.plugins.Docket;\n    \n    @Configuration\n    public class Swagger2Configuration {\n        @Bean\n        public Docket createRestApi() {\n            return new Docket(DocumentationType.SWAGGER_2)\n                    .apiInfo(apiInfo())\n                    .select()\n                    .apis(RequestHandlerSelectors.basePackage("com.cmcc.myshop.service"))\n                    .paths(PathSelectors.any())\n                    .build();\n        }\n    \n        private ApiInfo apiInfo() {\n            return new ApiInfoBuilder()\n                    .title("MyShop API 文档")\n                    .description("MyShop API 网关接口，http://www.cmcc.com")\n                    .termsOfServiceUrl("http://www.cmcc.com")\n                    .version("1.0.0")\n                    .build();\n        }\n    }\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br")])]),e("h3",{attrs:{id:"启用-swagger2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启用-swagger2"}},[s._v("#")]),s._v(" 启用 Swagger2")]),s._v(" "),e("p",[s._v("Application 中加上注解 "),e("code",[s._v("@EnableSwagger2")]),s._v(" 表示开启 Swagger")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('    package com.cmcc.myshop.service.reg;\n    \n    import org.springframework.boot.SpringApplication;\n    import org.springframework.boot.autoconfigure.SpringBootApplication;\n    import org.springframework.cloud.client.discovery.EnableDiscoveryClient;\n    import org.springframework.cloud.stream.annotation.EnableBinding;\n    import org.springframework.cloud.stream.messaging.Source;\n    import org.springframework.context.annotation.ComponentScan;\n    import org.springframework.scheduling.annotation.EnableAsync;\n    import springfox.documentation.swagger2.annotations.EnableSwagger2;\n    import tk.mybatis.spring.annotation.MapperScan;\n    \n    @SpringBootApplication\n    @EnableDiscoveryClient\n    @ComponentScan(basePackages = "com.cmcc.myshop")\n    @MapperScan(basePackages = "com.cmcc.myshop.commons.mapper")\n    @EnableBinding({Source.class})\n    @EnableAsync\n    @EnableSwagger2\n    public class MyShopServiceRegApplication {\n        public static void main(String[] args) {\n            SpringApplication.run(MyShopServiceRegApplication.class, args);\n        }\n    }\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br")])]),e("h3",{attrs:{id:"使用-swagger2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-swagger2"}},[s._v("#")]),s._v(" 使用 Swagger2")]),s._v(" "),e("p",[s._v("在 Controller 中增加 Swagger2 相关注解，代码如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('    /**\n     * 用户注册\n     *\n     * @param tbUser\n     * @return\n     */\n    @ApiOperation(value = "用户注册", notes = "以实体类为参数，注意用户名和邮箱不要重复")\n    @PostMapping(value = {""})\n    public AbstractBaseResult reg(@ApiParam(name = "tbUser", value = "用户模型") TbUser tbUser) {\n        // 数据校验\n        AbstractBaseResult validator = validator(tbUser);\n        if (validator != null) {\n            return validator;\n        }\n    \n        // 判断用户名是否重复\n        if (!tbUserService.unique("username", tbUser.getUsername())) {\n            return error("用户名重复，请重试", null);\n        }\n    \n        // 判断邮箱是否重复\n        if (!tbUserService.unique("email", tbUser.getEmail())) {\n            return error("邮箱重复，请重试", null);\n        }\n    \n        // 设置密码加密\n        if (StringUtils.isNotBlank(tbUser.getPassword())) {\n            tbUser.setPassword(DigestUtils.md5DigestAsHex(tbUser.getPassword().getBytes()));\n        }\n    \n        // 密码为空\n        else {\n            return error("密码不可为空", null);\n        }\n    \n        // 注册用户\n        TbUser user = tbUserService.save(tbUser);\n        if (user != null) {\n            response.setStatus(HttpStatus.CREATED.value());\n            // 发送注册成功通知到消息队列\n            regService.sendEmail(user);\n            return success(request.getRequestURI(), user);\n        }\n    \n        return error("注册失败，请重试", null);\n    }\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br")])]),e("h3",{attrs:{id:"访问-swagger2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#访问-swagger2"}},[s._v("#")]),s._v(" 访问 Swagger2")]),s._v(" "),e("p",[s._v("访问地址：http://ip:port/swagger-ui.html")]),s._v(" "),e("p",[e("img",{attrs:{src:"/img/20190213003615.png",alt:""}})]),s._v(" "),e("h2",{attrs:{id:"swagger-常用注解说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#swagger-常用注解说明"}},[s._v("#")]),s._v(" Swagger 常用注解说明")]),s._v(" "),e("p",[s._v("Swagger 通过注解表明该接口会生成文档，包括接口名、请求方法、参数、返回信息的等等。")]),s._v(" "),e("h3",{attrs:{id:"常用注解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用注解"}},[s._v("#")]),s._v(" 常用注解")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("@Api")]),s._v("：修饰整个类，描述 Controller 的作用")]),s._v(" "),e("li",[e("code",[s._v("@ApiOperation")]),s._v("：描述一个类的一个方法，或者说一个接口")]),s._v(" "),e("li",[e("code",[s._v("@ApiParam")]),s._v("：单个参数描述")]),s._v(" "),e("li",[e("code",[s._v("@ApiModel")]),s._v("：用对象来接收参数")]),s._v(" "),e("li",[e("code",[s._v("@ApiProperty")]),s._v("：用对象接收参数时，描述对象的一个字段")]),s._v(" "),e("li",[e("code",[s._v("@ApiResponse")]),s._v("：HTTP 响应其中 1 个描述")]),s._v(" "),e("li",[e("code",[s._v("@ApiResponses")]),s._v("：HTTP 响应整体描述")]),s._v(" "),e("li",[e("code",[s._v("@ApiIgnore")]),s._v("：使用该注解忽略这个API")]),s._v(" "),e("li",[e("code",[s._v("@ApiError")]),s._v("：发生错误返回的信息")]),s._v(" "),e("li",[e("code",[s._v("@ApiImplicitParam")]),s._v("：一个请求参数")]),s._v(" "),e("li",[e("code",[s._v("@ApiImplicitParams")]),s._v("：多个请求参数")])]),s._v(" "),e("h3",{attrs:{id:"api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[s._v("#")]),s._v(" "),e("code",[s._v("@Api")])]),s._v(" "),e("p",[s._v("说明：用在请求的类上，表示对类的说明")]),s._v(" "),e("p",[s._v("常用参数：")]),s._v(" "),e("ul",[e("li",[s._v('tags="说明该类的作用，非空时将覆盖 value 的值"')]),s._v(" "),e("li",[s._v('value="描述类的作用"')])]),s._v(" "),e("p",[s._v("其他参数：")]),s._v(" "),e("ul",[e("li",[s._v("description 对 api 资源的描述，在 1.5 版本后不再支持")]),s._v(" "),e("li",[s._v("basePath 基本路径可以不配置，在 1.5 版本后不再支持")]),s._v(" "),e("li",[s._v("position 如果配置多个 Api 想改变显示的顺序位置，在 1.5 版本后不再支持")]),s._v(" "),e("li",[s._v('produces 设置 MIME 类型列表（output），例："application/json, application/xml"，默认为空')]),s._v(" "),e("li",[s._v('consumes 设置 MIME 类型列表（input），例："application/json, application/xml"，默认为空')]),s._v(" "),e("li",[s._v("protocols 设置特定协议，例：http， https， ws， wss")]),s._v(" "),e("li",[s._v("authorizations 获取授权列表（安全声明），如果未设置，则返回一个空的授权值。")]),s._v(" "),e("li",[s._v("hidden 默认为 false，配置为 true 将在文档中隐藏")])]),s._v(" "),e("p",[s._v("示例：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('    @Api(tags="登录请求")\n    @Controller\n    public class LoginController {}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h3",{attrs:{id:"apioperation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#apioperation"}},[s._v("#")]),s._v(" "),e("code",[s._v("@ApiOperation")])]),s._v(" "),e("p",[s._v("说明：用在请求的方法上，说明方法的用途、作用")]),s._v(" "),e("p",[s._v("常用参数：")]),s._v(" "),e("ul",[e("li",[s._v('value="说明方法的用途、作用"')]),s._v(" "),e("li",[s._v('notes="方法的备注说明"')])]),s._v(" "),e("p",[s._v("其他参数：")]),s._v(" "),e("ul",[e("li",[s._v("tags 操作标签，非空时将覆盖value的值")]),s._v(" "),e("li",[s._v("response 响应类型（即返回对象）")]),s._v(" "),e("li",[s._v('responseContainer 声明包装的响应容器（返回对象类型）。有效值为 "List", "Set" or "Map"。')]),s._v(" "),e("li",[s._v("responseReference 指定对响应类型的引用。将覆盖任何指定的response（）类")]),s._v(" "),e("li",[s._v('httpMethod 指定HTTP方法，"GET", "HEAD", "POST", "PUT", "DELETE", "OPTIONS" and "PATCH"')]),s._v(" "),e("li",[s._v("position 如果配置多个Api 想改变显示的顺序位置，在1.5版本后不再支持")]),s._v(" "),e("li",[s._v("nickname 第三方工具唯一标识，默认为空")]),s._v(" "),e("li",[s._v('produces 设置MIME类型列表（output），例："application/json, application/xml"，默认为空')]),s._v(" "),e("li",[s._v('consumes 设置MIME类型列表（input），例："application/json, application/xml"，默认为空')]),s._v(" "),e("li",[s._v("protocols 设置特定协议，例：http， https， ws， wss。")]),s._v(" "),e("li",[s._v("authorizations 获取授权列表（安全声明），如果未设置，则返回一个空的授权值。")]),s._v(" "),e("li",[s._v("hidden 默认为false， 配置为true 将在文档中隐藏")]),s._v(" "),e("li",[s._v("responseHeaders 响应头列表")]),s._v(" "),e("li",[s._v("code 响应的HTTP状态代码。默认 200")]),s._v(" "),e("li",[s._v("extensions 扩展属性列表数组")])]),s._v(" "),e("p",[s._v("示例：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('    @ResponseBody\n    @PostMapping(value="/login")\n    @ApiOperation(value = "登录检测", notes="根据用户名、密码判断该用户是否存在")\n    public UserModel login(@RequestParam(value = "name", required = false) String account,\n    @RequestParam(value = "pass", required = false) String password){}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h3",{attrs:{id:"apiimplicitparams"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#apiimplicitparams"}},[s._v("#")]),s._v(" "),e("code",[s._v("@ApiImplicitParams")])]),s._v(" "),e("p",[s._v("说明：用在请求的方法上，表示一组参数说明；"),e("code",[s._v("@ApiImplicitParam")]),s._v("：用在 "),e("code",[s._v("@ApiImplicitParams")]),s._v(" 注解中，指定一个请求参数的各个方面")]),s._v(" "),e("p",[s._v("常用参数：")]),s._v(" "),e("ul",[e("li",[s._v("name：参数名，参数名称可以覆盖方法参数名称，路径参数必须与方法参数一致")]),s._v(" "),e("li",[s._v("value：参数的汉字说明、解释")]),s._v(" "),e("li",[s._v("required：参数是否必须传，默认为 false （路径参数必填）")]),s._v(" "),e("li",[s._v("paramType：参数放在哪个地方\n"),e("ul",[e("li",[s._v("header 请求参数的获取："),e("code",[s._v("@RequestHeader")])]),s._v(" "),e("li",[s._v("query 请求参数的获取："),e("code",[s._v("@RequestParam")])]),s._v(" "),e("li",[s._v("path（用于 restful 接口）--\x3e 请求参数的获取："),e("code",[s._v("@PathVariable")])]),s._v(" "),e("li",[s._v("body（不常用）")]),s._v(" "),e("li",[s._v("form（不常用）")])])]),s._v(" "),e("li",[s._v('dataType：参数类型，默认 String，其它值 dataType="Integer"')]),s._v(" "),e("li",[s._v("defaultValue：参数的默认值")])]),s._v(" "),e("p",[s._v("其他参数（"),e("code",[s._v("@ApiImplicitParam")]),s._v("）：")]),s._v(" "),e("ul",[e("li",[s._v("allowableValues 限制参数的可接受值。1.以逗号分隔的列表 2.范围值 3.设置最小值/最大值")]),s._v(" "),e("li",[s._v("access 允许从API文档中过滤参数。")]),s._v(" "),e("li",[s._v("allowMultiple 指定参数是否可以通过具有多个事件接受多个值，默认为 false")]),s._v(" "),e("li",[s._v("example 单个示例")]),s._v(" "),e("li",[s._v("examples 参数示例。仅适用于 BodyParameters")])]),s._v(" "),e("p",[s._v("示例：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('    @ResponseBody\n    @PostMapping(value="/login")\n    @ApiOperation(value = "登录检测", notes="根据用户名、密码判断该用户是否存在")\n    @ApiImplicitParams({\n        @ApiImplicitParam(name = "name", value = "用户名", required = false, paramType = "query", dataType = "String"),\n        @ApiImplicitParam(name = "pass", value = "密码", required = false, paramType = "query", dataType = "String")\n    })\n    public UserModel login(@RequestParam(value = "name", required = false) String account,\n    @RequestParam(value = "pass", required = false) String password){}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("h3",{attrs:{id:"apimodel"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#apimodel"}},[s._v("#")]),s._v(" "),e("code",[s._v("@ApiModel")])]),s._v(" "),e("p",[s._v("说明：用于响应类上，表示一个返回响应数据的信息（这种一般用在 POST 创建的时候，使用 "),e("code",[s._v("@RequestBody")]),s._v(" 这样的场景，请求参数无法使用 "),e("code",[s._v("@ApiImplicitParam")]),s._v(" 注解进行描述的时候）；"),e("code",[s._v("@ApiModelProperty")]),s._v("：用在属性上，描述响应类的属性")]),s._v(" "),e("p",[s._v("其他参数(@ApiModelProperty)：")]),s._v(" "),e("ul",[e("li",[s._v("value 此属性的简要说明。")]),s._v(" "),e("li",[s._v("name 允许覆盖属性名称")]),s._v(" "),e("li",[s._v("allowableValues 限制参数的可接受值。1.以逗号分隔的列表 2.范围值 3.设置最小值/最大值")]),s._v(" "),e("li",[s._v("access 允许从 API 文档中过滤属性。\n"),e("ul",[e("li",[s._v("notes 目前尚未使用。")])])]),s._v(" "),e("li",[s._v("dataType 参数的数据类型。可以是类名或者参数名，会覆盖类的属性名称。")]),s._v(" "),e("li",[s._v("required 参数是否必传，默认为 false")]),s._v(" "),e("li",[s._v("position 允许在类中对属性进行排序。默认为 0")]),s._v(" "),e("li",[s._v("hidden 允许在 Swagger 模型定义中隐藏该属性。")]),s._v(" "),e("li",[s._v("example 属性的示例。")]),s._v(" "),e("li",[s._v("readOnly 将属性设定为只读。")]),s._v(" "),e("li",[s._v("reference 指定对相应类型定义的引用，覆盖指定的任何参数值")])]),s._v(" "),e("p",[s._v("示例：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('    @ApiModel(value="用户登录信息", description="用于判断用户是否存在")\n    public class UserModel implements Serializable{\n    \n       private static final long serialVersionUID = 1L;\n    \n       /**\n        * 用户名\n        */\n       @ApiModelProperty(value="用户名")\n       private String account;\n    \n       /**\n         * 密码\n         */\n        @ApiModelProperty(value="密码")\n       private String password;\n    }\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("h3",{attrs:{id:"apiresponses"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#apiresponses"}},[s._v("#")]),s._v(" "),e("code",[s._v("@ApiResponses")])]),s._v(" "),e("p",[s._v("说明：用在请求的方法上，表示一组响应；"),e("code",[s._v("@ApiResponse")]),s._v("：用在 "),e("code",[s._v("@ApiResponses")]),s._v(" 中，一般用于表达一个错误的响应信息")]),s._v(" "),e("p",[s._v("常用参数：")]),s._v(" "),e("ul",[e("li",[s._v("code：数字，例如 400")]),s._v(" "),e("li",[s._v('message：信息，例如 "请求参数没填好"')]),s._v(" "),e("li",[s._v("response：抛出异常的类")])]),s._v(" "),e("p",[s._v("示例：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('    @ResponseBody\n    @PostMapping(value="/update/{id}")\n    @ApiOperation(value = "修改用户信息",notes = "打开页面并修改指定用户信息")\n    @ApiResponses({\n        @ApiResponse(code=400,message="请求参数没填好"),\n        @ApiResponse(code=404,message="请求路径没有或页面跳转路径不对")\n    })\n    public JsonResult update(@PathVariable String id, UserModel model){}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h3",{attrs:{id:"apiparam"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#apiparam"}},[s._v("#")]),s._v(" "),e("code",[s._v("@ApiParam")])]),s._v(" "),e("p",[s._v("说明：用在请求方法中，描述参数信息")]),s._v(" "),e("p",[s._v("常用参数：")]),s._v(" "),e("ul",[e("li",[s._v("name：参数名称，参数名称可以覆盖方法参数名称，路径参数必须与方法参数一致")]),s._v(" "),e("li",[s._v("value：参数的简要说明。")]),s._v(" "),e("li",[s._v("defaultValue：参数默认值")]),s._v(" "),e("li",[s._v("required：属性是否必填，默认为 false （路径参数必须填）")])]),s._v(" "),e("p",[s._v("以实体类为参数：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('    @ResponseBody\n    @PostMapping(value="/login")\n    @ApiOperation(value = "登录检测", notes="根据用户名、密码判断该用户是否存在")\n    public UserModel login(@ApiParam(name = "model", value = "用户信息Model") UserModel model){}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("其他参数：")]),s._v(" "),e("ul",[e("li",[s._v("allowableValues 限制参数的可接受值。1.以逗号分隔的列表 2.范围值 3.设置最小值/最大值")]),s._v(" "),e("li",[s._v("access 允许从 API 文档中过滤参数。")]),s._v(" "),e("li",[s._v("allowMultiple 指定参数是否可以通过具有多个事件接受多个值，默认为 false")]),s._v(" "),e("li",[s._v("hidden 隐藏参数列表中的参数。")]),s._v(" "),e("li",[s._v("example 单个示例")]),s._v(" "),e("li",[s._v("examples 参数示例。仅适用于 BodyParameters")])]),s._v(" "),e("p",[s._v("示例：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('    @ResponseBody\n    @PostMapping(value="/login")\n    @ApiOperation(value = "登录检测", notes="根据用户名、密码判断该用户是否存在")\n    public UserModel login(@ApiParam(name = "name", value = "用户名", required = false) @RequestParam(value = "name", required = false) String account,\n        @ApiParam(name = "pass", value = "密码", required = false) @RequestParam(value = "pass", required = false) String password){}\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])])])}),[],!1,null,null,null);a.default=r.exports}}]);