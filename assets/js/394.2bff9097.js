(window.webpackJsonp=window.webpackJsonp||[]).push([[394],{1090:function(t,r,s){"use strict";s.r(r);var v=s(5),_=Object(v.a)({},(function(){var t=this,r=t.$createElement,s=t._self._c||r;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"什么是分布式协调技术"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是分布式协调技术"}},[t._v("#")]),t._v(" 什么是分布式协调技术")]),t._v(" "),s("h2",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),s("p",[t._v('分布式协调技术主要用来解决分布式环境当中多个进程之间的同步控制，让他们有序的去访问某种临界资源，防止造成"脏数据"的后果。')]),t._v(" "),s("p",[s("img",{attrs:{src:"/img/import78411.png",alt:""}})]),t._v(" "),s("p",[t._v("在这图中有三台机器，每台机器各跑一个应用程序。然后我们将这三台机器通过网络将其连接起来，构成一个系统来为用户提供服务，对用户来说这个系统的架构是透明的，他感觉不到我这个系统是一个什么样的架构。那么我们就可以把这种系统称作一个"),s("strong",[t._v("分布式系统")]),t._v("。")]),t._v(" "),s("p",[t._v("在这个分布式系统中如何对进程进行调度，我假设在第一台机器上挂载了一个资源，然后这三个物理分布的进程都要竞争这个资源，但我们又不希望他们同时进行访问，这时候我们就需要一个"),s("strong",[t._v("协调器")]),t._v("，来让他们有序的来访问这个资源。这个协调器就是我们经常提到的那个"),s("strong",[t._v("锁")]),t._v('，比如说"进程-1"在使用该资源的时候，会先去获得锁，"进程1"获得锁以后会对该资源保持'),s("strong",[t._v("独占")]),t._v('，这样其他进程就无法访问该资源，"进程1"用完该资源以后就将锁释放掉，让其他进程来获得锁，那么通过这个锁机制，我们就能保证了分布式系统中多个进程能够有序的访问该临界资源。那么我们把这个分布式环境下的这个锁叫作'),s("strong",[t._v("分布式锁")]),t._v("。这个分布式锁也就是我们"),s("strong",[t._v("分布式协调技术")]),t._v("实现的核心内容。")])])}),[],!1,null,null,null);r.default=_.exports}}]);