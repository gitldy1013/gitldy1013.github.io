(window.webpackJsonp=window.webpackJsonp||[]).push([[857],{1552:function(s,a,e){"use strict";e.r(a);var n=e(5),t=Object(n.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"实现数据持久化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现数据持久化"}},[s._v("#")]),s._v(" 实现数据持久化")]),s._v(" "),e("h2",{attrs:{id:"概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[s._v("#")]),s._v(" 概述")]),s._v(" "),e("p",[s._v("存储管理与计算管理是两个不同的问题。Persistent Volume 子系统，对存储的供应和使用做了抽象，以 API 形式提供给管理员和用户使用。要完成这一任务，我们引入了两个新的 API 资源："),e("strong",[s._v("Persistent Volume（持久卷）")]),s._v(" 和 "),e("strong",[s._v("Persistent Volume Claim（持久卷消费者）")]),s._v("。")]),s._v(" "),e("p",[s._v("Persistent Volume（PV）是集群之中的一块网络存储。跟 Node 一样，也是集群的资源。PV 跟 Volume (卷) 类似，不过会有独立于 Pod 的生命周期。这一 API 对象包含了存储的实现细节，例如 NFS、iSCSI 或者其他的云提供商的存储系统。Persistent Volume Claim (PVC) 是用户的一个请求。跟 Pod 类似，Pod 消费 Node 的资源，PVC 消费 PV 的资源。Pod 能够申请特定的资源（CPU 和内存）；Claim 能够请求特定的尺寸和访问模式（例如可以加载一个读写，以及多个只读实例）")]),s._v(" "),e("h2",{attrs:{id:"pv-与-pvc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pv-与-pvc"}},[s._v("#")]),s._v(" PV 与 PVC")]),s._v(" "),e("p",[s._v("PV 是集群的资源。PVC 是对这一资源的请求，也是对资源的所有权的检验。PV 和 PVC 之间的互动遵循如下的生命周期。")]),s._v(" "),e("ul",[e("li",[e("strong",[s._v("供应：")]),s._v(" 集群管理员会创建一系列的 PV。这些 PV 包含了为集群用户提供的真实存储资源，它们可利用 Kubernetes API 来消费。")]),s._v(" "),e("li",[e("strong",[s._v("绑定：")]),s._v(" 用户创建一个包含了容量和访问模式的持久卷申请。Master 会监听 PVC 的产生，并尝试根据请求内容查找匹配的 PV，并把 PV 和 PVC 进行绑定。用户能够获取满足需要的资源，并且在使用过程中可能超出请求数量。如果找不到合适的卷，这一申请就会持续处于非绑定状态，一直到出现合适的 PV。例如一个集群准备了很多的 50G 大小的持久卷，（虽然总量足够）也是无法响应 100G 的申请的，除非把 100G 的 PV 加入集群。")]),s._v(" "),e("li",[e("strong",[s._v("使用：")]),s._v(" Pod 把申请作为卷来使用。集群会通过 PVC 查找绑定的 PV，并 Mount 给 Pod。对于支持多种访问方式的卷，用户在使用 PVC 作为卷的时候，可以指定需要的访问方式。一旦用户拥有了一个已经绑定的 PVC，被绑定的 PV 就归该用户所有了。用户的 Pods 能够通过在 Pod 的卷中包含的 PVC 来访问他们占有的 PV。")]),s._v(" "),e("li",[e("strong",[s._v("释放：")]),s._v(" 当用户完成对卷的使用时，就可以利用 API 删除 PVC 对象了，而且他还可以重新申请。删除 PVC 后，对应的卷被视为 “被释放”，但是这时还不能给其他的 PVC 使用。之前的 PVC 数据还保存在卷中，要根据策略来进行后续处理。")]),s._v(" "),e("li",[e("strong",[s._v("回收：")]),s._v(" PV 的回收策略向集群阐述了在 PVC 释放卷的时候，应如何进行后续工作。目前可以采用三种策略：保留，回收或者删除。保留策略允许重新申请这一资源。在持久卷能够支持的情况下，删除策略会同时删除持久卷以及 AWS EBS/GCE PD 或者 Cinder 卷中的存储内容。如果插件能够支持，回收策略会执行基础的擦除操作（"),e("code",[s._v("rm -rf /thevolume/*")]),s._v("），这一卷就能被重新申请了。")])]),s._v(" "),e("h2",{attrs:{id:"定义-pv"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#定义-pv"}},[s._v("#")]),s._v(" 定义 PV")]),s._v(" "),e("h3",{attrs:{id:"持久卷插件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#持久卷插件"}},[s._v("#")]),s._v(" 持久卷插件")]),s._v(" "),e("p",[s._v("持久卷是以插件方式实现的，目前支持的插件如下：")]),s._v(" "),e("ul",[e("li",[s._v("GCEPersistentDisk")]),s._v(" "),e("li",[s._v("AWSElasticBlockStore")]),s._v(" "),e("li",[e("strong",[s._v("NFS（我们采用的是该方案）")])]),s._v(" "),e("li",[s._v("iSCSI")]),s._v(" "),e("li",[s._v("RBD (Ceph Block Device)")]),s._v(" "),e("li",[s._v("Glusterfs")]),s._v(" "),e("li",[s._v("HostPath (单节点测试使用)")]),s._v(" "),e("li",[s._v("本地持久卷")])]),s._v(" "),e("h3",{attrs:{id:"yaml-配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#yaml-配置"}},[s._v("#")]),s._v(" YAML 配置")]),s._v(" "),e("p",[s._v("创建一个名为 "),e("code",[s._v("nfs-pv-mysql.yml")]),s._v(" 的配置文件")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('    apiVersion: v1\n    kind: PersistentVolume\n    metadata:\n      name: nfs-pv-mysql\n    spec:\n      # 设置容量\n      capacity:\n        storage: 5Gi\n      # 访问模式\n      accessModes:\n        # 该卷能够以读写模式被多个节点同时加载\n        - ReadWriteMany\n      # 回收策略，这里是基础擦除 `rm-rf/thevolume/*`\n      persistentVolumeReclaimPolicy: Recycle\n      nfs:\n        # NFS 服务端配置的路径\n        path: "/usr/local/kubernetes/volumes"\n        # NFS 服务端地址\n        server: 192.168.141.140\n        readOnly: false\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("    # 部署\n    kubectl create -f nfs-pv-mysql.yml\n    # 删除\n    kubectl delete -f nfs-pv-mysql.yml\n    # 查看\n    kubectl get pv\n    NAME           CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM   STORAGECLASS   REASON   AGE\n    nfs-pv-mysql   5Gi        RWX            Recycle          Available                                   29m\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h3",{attrs:{id:"配置说明"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置说明"}},[s._v("#")]),s._v(" 配置说明")]),s._v(" "),e("h4",{attrs:{id:"capacity-容量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#capacity-容量"}},[s._v("#")]),s._v(" Capacity（容量）")]),s._v(" "),e("p",[s._v("一般来说，PV 会指定存储容量。这里需要使用 PV 的 capcity 属性。目前存储大小是唯一一个能够被申请的指标，今后会加入更多属性，例如 IOPS，吞吐能力等。")]),s._v(" "),e("h4",{attrs:{id:"accessmodes-访问模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#accessmodes-访问模式"}},[s._v("#")]),s._v(" AccessModes（访问模式）")]),s._v(" "),e("p",[s._v("只要资源提供者支持，持久卷能够被用任何方式加载到主机上。每种存储都会有不同的能力，每个 PV 的访问模式也会被设置成为该卷所支持的特定模式。例如 NFS 能够支持多个读写客户端，但是某个 NFS PV 可能会在服务器上以只读方式使用。每个 PV 都有自己的一系列的访问模式，这些访问模式取决于 PV 的能力。访问模式的可选范围如下：")]),s._v(" "),e("ul",[e("li",[s._v("ReadWriteOnce：该卷能够以读写模式被加载到一个节点上")]),s._v(" "),e("li",[s._v("ReadOnlyMany：该卷能够以只读模式加载到多个节点上")]),s._v(" "),e("li",[s._v("ReadWriteMany：该卷能够以读写模式被多个节点同时加载")])]),s._v(" "),e("p",[s._v("在 CLI 下，访问模式缩写为：")]),s._v(" "),e("ul",[e("li",[s._v("RWO：ReadWriteOnce")]),s._v(" "),e("li",[s._v("ROX：ReadOnlyMany")]),s._v(" "),e("li",[s._v("RWX：ReadWriteMany")])]),s._v(" "),e("p",[s._v("另外，一个卷不论支持多少种访问模式，同时只能以一种访问模式加载。例如一个 GCE Persistent Disk 既能支持 ReadWriteOnce，也能支持 ReadOnlyMany。")]),s._v(" "),e("h4",{attrs:{id:"recyclingpolicy-回收策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#recyclingpolicy-回收策略"}},[s._v("#")]),s._v(" RecyclingPolicy（回收策略）")]),s._v(" "),e("p",[s._v("当前的回收策略可选值包括：")]),s._v(" "),e("ul",[e("li",[s._v("Retain：人工重新申请")]),s._v(" "),e("li",[s._v("Recycle：基础擦除（"),e("code",[s._v("rm-rf/thevolume/*")]),s._v("）")]),s._v(" "),e("li",[s._v("Delete：相关的存储资产例如 AWS EBS，GCE PD 或者 OpenStack Cinder 卷一并删除")])]),s._v(" "),e("p",[s._v("目前，只有 NFS 和 HostPath 支持 Recycle 策略，AWS EBS、GCE PD 以及 Cinder 卷支持 Delete 策略。")]),s._v(" "),e("h4",{attrs:{id:"阶段-phase"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#阶段-phase"}},[s._v("#")]),s._v(" 阶段（Phase）")]),s._v(" "),e("p",[s._v("一个卷会处于如下阶段之一：")]),s._v(" "),e("ul",[e("li",[s._v("Available：可用资源，尚未被绑定到 PVC 上")]),s._v(" "),e("li",[s._v("Bound：该卷已经被绑定")]),s._v(" "),e("li",[s._v("Released：PVC 已经被删除，但该资源尚未被集群回收")]),s._v(" "),e("li",[s._v("Failed：该卷的自动回收过程失败")])]),s._v(" "),e("h2",{attrs:{id:"定义-pvc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#定义-pvc"}},[s._v("#")]),s._v(" 定义 PVC")]),s._v(" "),e("p",[s._v("创建一个名为 "),e("code",[s._v("nfs-pvc-mysql-myshop.yml")]),s._v(" 的配置文件")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("    apiVersion: v1\n    kind: PersistentVolumeClaim\n    metadata:\n      name: nfs-pvc-mysql-myshop\n    spec:\n      accessModes:\n      # 需要使用和 PV 一致的访问模式\n      - ReadWriteMany\n      # 按需分配资源\n      resources:\n         requests:\n           storage: 1Gi\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("    # 部署\n    kubectl create -f nfs-pvc-mysql-myshop.yml\n    # 删除\n    kubectl delete -f nfs-pvc-mysql-myshop.yml\n    # 查看\n    kubectl get pvc\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("h2",{attrs:{id:"部署-mysql8"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#部署-mysql8"}},[s._v("#")]),s._v(" 部署 MySQL8")]),s._v(" "),e("blockquote",[e("p",[e("strong",[s._v("注意：")]),s._v(" 要确保每台 Node 都安装了 NFS 客户端，"),e("code",[s._v("apt-get install -y nfs-common")])])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('    apiVersion: extensions/v1beta1\n    kind: Deployment\n    metadata:\n      name: mysql-myshop\n    spec:\n      replicas: 1\n      template:\n        metadata:\n          labels:\n            name: mysql-myshop\n        spec:\n          containers:\n            - name: mysql-myshop\n              image: mysql\n              # 只有镜像不存在时，才会进行镜像拉取\n              imagePullPolicy: IfNotPresent\n              ports:\n                - containerPort: 3306\n              # 同 Docker 配置中的 environment\n              env:\n                - name: MYSQL_ROOT_PASSWORD\n                  value: "123456"\n              # 容器中的挂载目录\n              volumeMounts:\n                - name: nfs-vol-myshop\n                  mountPath: /var/lib/mysql\n          volumes:\n            # 挂载到数据卷\n            - name: nfs-vol-myshop\n              persistentVolumeClaim:\n                claimName: nfs-pvc-mysql-myshop\n    ---\n    apiVersion: v1\n    kind: Service\n    metadata:\n      name: mysql-myshop\n    spec:\n      ports:\n        - port: 3306\n          targetPort: 3306\n      type: LoadBalancer\n      selector:\n        name: mysql-myshop\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br")])]),e("h3",{attrs:{id:"解决权限问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决权限问题"}},[s._v("#")]),s._v(" 解决权限问题")]),s._v(" "),e("p",[s._v("当你使用 "),e("code",[s._v("kubectl create -f <YAML>")]),s._v(" 部署后，你会发现 Pod 状态为 Error，容器无法正常启动的情况，我们可以使用 "),e("code",[s._v("kubectl logs <Pod Name>")]),s._v(" 看到一条日志")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("    chown: changing ownership of '/var/lib/mysql/': Operation not permitted\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("解决方案是在 NFS 服务端配置中增加一个参数 "),e("code",[s._v("no_root_squash")]),s._v("，即将配置修改为："),e("code",[s._v("/usr/local/kubernetes/volumes *(rw,sync,no_subtree_check,no_root_squash)")])]),s._v(" "),e("h3",{attrs:{id:"测试运行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#测试运行"}},[s._v("#")]),s._v(" 测试运行")]),s._v(" "),e("p",[s._v("部署成功后可以使用 "),e("code",[s._v("kubectl get service")]),s._v(" 查看我们 MySQL 的运行端口，再使用连接工具连接会报如下错误")]),s._v(" "),e("p",[e("img",{attrs:{src:"/img/20190609212326.png",alt:""}})]),s._v(" "),e("p",[s._v("意思为无法使用密码的方式登录，在 Docker 部署时我们可以在 YAML 中配置相关参数解决这个问题；下一节我们讲解在 Kubernetes 中采用 "),e("strong",[s._v("ConfigMap")]),s._v(" 的方式配置 MySQL")]),s._v(" "),e("h2",{attrs:{id:"附-imagepullpolicy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#附-imagepullpolicy"}},[s._v("#")]),s._v(" 附：ImagePullPolicy")]),s._v(" "),e("p",[s._v("支持三种 ImagePullPolicy")]),s._v(" "),e("ul",[e("li",[e("strong",[s._v("Always：")]),s._v(" 不管镜像是否存在都会进行一次拉取")]),s._v(" "),e("li",[e("strong",[s._v("Never：")]),s._v(" 不管镜像是否存在都不会进行拉取")]),s._v(" "),e("li",[e("strong",[s._v("IfNotPresent：")]),s._v(" 只有镜像不存在时，才会进行镜像拉取")])]),s._v(" "),e("p",[s._v("注意")]),s._v(" "),e("ul",[e("li",[s._v("默认为 "),e("code",[s._v("IfNotPresent")]),s._v("，但 "),e("code",[s._v(":latest")]),s._v(" 标签的镜像默认为 "),e("code",[s._v("Always")])]),s._v(" "),e("li",[s._v("拉取镜像时 Docker 会进行校验，如果镜像中的 MD5 码没有变，则不会拉取镜像数据")]),s._v(" "),e("li",[s._v("生产环境中应该尽量避免使用 "),e("code",[s._v(":latest")]),s._v(" 标签，而开发环境中可以借助 "),e("code",[s._v(":latest")]),s._v(" 标签自动拉取最新的镜像")])])])}),[],!1,null,null,null);a.default=t.exports}}]);