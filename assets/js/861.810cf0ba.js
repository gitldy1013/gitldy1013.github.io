(window.webpackJsonp=window.webpackJsonp||[]).push([[861],{1557:function(e,n,s){"use strict";s.r(n);var t=s(5),a=Object(t.a)({},(function(){var e=this,n=e.$createElement,s=e._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"解决-node-无法加入的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决-node-无法加入的问题"}},[e._v("#")]),e._v(" 解决 Node 无法加入的问题")]),e._v(" "),s("h2",{attrs:{id:"问题描述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题描述"}},[e._v("#")]),e._v(" 问题描述")]),e._v(" "),s("p",[e._v("当我们使用 "),s("code",[e._v("kubeadm join")]),e._v(" 命令将 Node 节点加入集群时，你会发现所有 "),s("code",[e._v("kubectl")]),e._v(" 命令均不可用（呈现阻塞状态，并不会返回响应结果），我们可以在 Node 节点中通过 "),s("code",[e._v("kubeadm reset")]),e._v(" 命令将 Node 节点下线，此时回到 Master 节点再使用 "),s("code",[e._v("watch kubectl get pods --all-namespaces")]),e._v(" 可以看到下图中报错了，"),s("code",[e._v("coredns-xxx-xxx")]),e._v(" 状态为 "),s("code",[e._v("CrashLoopBackOff")])]),e._v(" "),s("p",[s("img",{attrs:{src:"/img/20190604010905.png",alt:""}})]),e._v(" "),s("h2",{attrs:{id:"解决方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[e._v("#")]),e._v(" 解决方案")]),e._v(" "),s("p",[e._v("从上面的错误信息不难看出应该是出现了网络问题，而我们在安装过程中只使用了一个网络插件 "),s("strong",[e._v("Calico")]),e._v(" ，那么该错误是不是由 Calico 引起的呢？带着这个疑问我们去到 Calico 官网再看一下它的说明，官网地址：https://docs.projectcalico.org/v3.7/getting-started/kubernetes/")]),e._v(" "),s("p",[e._v("在它的 Quickstart 里有两段话（属于特别提醒），截图如下：")]),e._v(" "),s("p",[s("img",{attrs:{src:"/img/20190604013518.png",alt:""}})]),e._v(" "),s("p",[e._v("上面这段话的主要意思是：当 "),s("code",[e._v("kubeadm")]),e._v(" 安装完成后不要关机，继续完成后续的安装步骤；这也说明了安装 Kubernetes 的过程不要出现中断一口气搞定（不过这不是重点）(*￣rǒ￣)")]),e._v(" "),s("p",[s("img",{attrs:{src:"/img/20190604014207.png",alt:""}})]),e._v(" "),s("p",[e._v("上面这段话的主要意思是：如果你的网络在 "),s("code",[e._v("192.168.0.0/16")]),e._v(" 网段中，则必须选择一个不同的 Pod 网络；恰巧咱们的网络范围（我虚拟机的 IP 范围是 "),s("code",[e._v("192.168.141.0/24")]),e._v("）和该网段重叠 (ノへ￣、)；好吧，当时做单节点集群时因为没啥问题而忽略了 ♪(^∇^*)")]),e._v(" "),s("p",[e._v("so，能够遇到这个问题主要是因为虚拟机 IP 范围刚好和 Calico 默认网段重叠导致的，所以想要解决这个问题，咱们就需要修改 Calico 的网段了（当然也可以改虚拟机的），换句话说就是大家重装一下 o (一︿一 +) o")]),e._v(" "),s("p",[s("strong",[e._v("按照以下标准步骤重装即可")])]),e._v(" "),s("h2",{attrs:{id:"重置-kubernetes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#重置-kubernetes"}},[e._v("#")]),e._v(" 重置 Kubernetes")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("    kubeadm reset\n    \n    # 输出如下\n    [reset] WARNING: Changes made to this host by 'kubeadm init' or 'kubeadm join' will be reverted.\n    [reset] Are you sure you want to proceed? [y/N]: y\n    [preflight] Running pre-flight checks\n    W0604 01:55:28.517280   22688 reset.go:234] [reset] No kubeadm config, using etcd pod spec to get data directory\n    [reset] No etcd config found. Assuming external etcd\n    [reset] Please manually reset etcd to prevent further issues\n    [reset] Stopping the kubelet service\n    [reset] unmounting mounted directories in \"/var/lib/kubelet\"\n    [reset] Deleting contents of stateful directories: [/var/lib/kubelet /etc/cni/net.d /var/lib/dockershim /var/run/kubernetes]\n    [reset] Deleting contents of config directories: [/etc/kubernetes/manifests /etc/kubernetes/pki]\n    [reset] Deleting files: [/etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/bootstrap-kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf]\n    \n    The reset process does not reset or clean up iptables rules or IPVS tables.\n    If you wish to reset iptables, you must do so manually.\n    For example:\n    iptables -F && iptables -t nat -F && iptables -t mangle -F && iptables -X\n    \n    If your cluster was setup to utilize IPVS, run ipvsadm --clear (or similar)\n    to reset your system's IPVS tables.\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br")])]),s("h2",{attrs:{id:"删除-kubectl-配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除-kubectl-配置"}},[e._v("#")]),e._v(" 删除 kubectl 配置")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("    rm -fr ~/.kube/\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h2",{attrs:{id:"启用-ipvs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启用-ipvs"}},[e._v("#")]),e._v(" 启用 IPVS")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("    modprobe -- ip_vs\n    modprobe -- ip_vs_rr\n    modprobe -- ip_vs_wrr\n    modprobe -- ip_vs_sh\n    modprobe -- nf_conntrack_ipv4\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br")])]),s("h2",{attrs:{id:"导出并修改配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#导出并修改配置文件"}},[e._v("#")]),e._v(" 导出并修改配置文件")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("    kubeadm config print init-defaults --kubeconfig ClusterConfiguration > kubeadm.yml\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("配置文件修改如下")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('    apiVersion: kubeadm.k8s.io/v1beta1\n    bootstrapTokens:\n    - groups:\n      - system:bootstrappers:kubeadm:default-node-token\n      token: abcdef.0123456789abcdef\n      ttl: 24h0m0s\n      usages:\n      - signing\n      - authentication\n    kind: InitConfiguration\n    localAPIEndpoint:\n      advertiseAddress: 192.168.141.150\n      bindPort: 6443\n    nodeRegistration:\n      criSocket: /var/run/dockershim.sock\n      name: kubernetes-master-01\n      taints:\n      - effect: NoSchedule\n        key: node-role.kubernetes.io/master\n    ---\n    apiServer:\n      timeoutForControlPlane: 4m0s\n    apiVersion: kubeadm.k8s.io/v1beta1\n    certificatesDir: /etc/kubernetes/pki\n    clusterName: kubernetes\n    controlPlaneEndpoint: "192.168.141.200:6444"\n    controllerManager: {}\n    dns:\n      type: CoreDNS\n    etcd:\n      local:\n        dataDir: /var/lib/etcd\n    imageRepository: registry.aliyuncs.com/google_containers\n    kind: ClusterConfiguration\n    kubernetesVersion: v1.14.2\n    networking:\n      dnsDomain: cluster.local\n      # 主要修改在这里，替换 Calico 网段为我们虚拟机不重叠的网段（这里用的是 Flannel 默认网段）\n      podSubnet: "10.244.0.0/16"\n      serviceSubnet: 10.96.0.0/12\n    scheduler: {}\n    ---\n    apiVersion: kubeproxy.config.k8s.io/v1alpha1\n    kind: KubeProxyConfiguration\n    featureGates:\n      SupportIPVSProxyMode: true\n    mode: ipvs\n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br"),s("span",{staticClass:"line-number"},[e._v("33")]),s("br"),s("span",{staticClass:"line-number"},[e._v("34")]),s("br"),s("span",{staticClass:"line-number"},[e._v("35")]),s("br"),s("span",{staticClass:"line-number"},[e._v("36")]),s("br"),s("span",{staticClass:"line-number"},[e._v("37")]),s("br"),s("span",{staticClass:"line-number"},[e._v("38")]),s("br"),s("span",{staticClass:"line-number"},[e._v("39")]),s("br"),s("span",{staticClass:"line-number"},[e._v("40")]),s("br"),s("span",{staticClass:"line-number"},[e._v("41")]),s("br"),s("span",{staticClass:"line-number"},[e._v("42")]),s("br"),s("span",{staticClass:"line-number"},[e._v("43")]),s("br"),s("span",{staticClass:"line-number"},[e._v("44")]),s("br"),s("span",{staticClass:"line-number"},[e._v("45")]),s("br"),s("span",{staticClass:"line-number"},[e._v("46")]),s("br"),s("span",{staticClass:"line-number"},[e._v("47")]),s("br")])]),s("h2",{attrs:{id:"kubeadm-初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#kubeadm-初始化"}},[e._v("#")]),e._v(" kubeadm 初始化")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('    kubeadm init --config=kubeadm.yml --experimental-upload-certs | tee kubeadm-init.log\n    \n    # 输出如下\n    [init] Using Kubernetes version: v1.14.2\n    [preflight] Running pre-flight checks\n            [WARNING IsDockerSystemdCheck]: detected "cgroupfs" as the Docker cgroup driver. The recommended driver is "systemd". Please follow the guide at https://kubernetes.io/docs/setup/cri/\n    [preflight] Pulling images required for setting up a Kubernetes cluster\n    [preflight] This might take a minute or two, depending on the speed of your internet connection\n    [preflight] You can also perform this action in beforehand using \'kubeadm config images pull\'\n    [kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"\n    [kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"\n    [kubelet-start] Activating the kubelet service\n    [certs] Using certificateDir folder "/etc/kubernetes/pki"\n    [certs] Generating "front-proxy-ca" certificate and key\n    [certs] Generating "front-proxy-client" certificate and key\n    [certs] Generating "etcd/ca" certificate and key\n    [certs] Generating "etcd/peer" certificate and key\n    [certs] etcd/peer serving cert is signed for DNS names [kubernetes-master-01 localhost] and IPs [192.168.141.150 127.0.0.1 ::1]\n    [certs] Generating "etcd/healthcheck-client" certificate and key\n    [certs] Generating "apiserver-etcd-client" certificate and key\n    [certs] Generating "etcd/server" certificate and key\n    [certs] etcd/server serving cert is signed for DNS names [kubernetes-master-01 localhost] and IPs [192.168.141.150 127.0.0.1 ::1]\n    [certs] Generating "ca" certificate and key\n    [certs] Generating "apiserver" certificate and key\n    [certs] apiserver serving cert is signed for DNS names [kubernetes-master-01 kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 192.168.141.150 192.168.141.200]\n    [certs] Generating "apiserver-kubelet-client" certificate and key\n    [certs] Generating "sa" key and public key\n    [kubeconfig] Using kubeconfig folder "/etc/kubernetes"\n    [endpoint] WARNING: port specified in controlPlaneEndpoint overrides bindPort in the controlplane address\n    [kubeconfig] Writing "admin.conf" kubeconfig file\n    [endpoint] WARNING: port specified in controlPlaneEndpoint overrides bindPort in the controlplane address\n    [kubeconfig] Writing "kubelet.conf" kubeconfig file\n    [endpoint] WARNING: port specified in controlPlaneEndpoint overrides bindPort in the controlplane address\n    [kubeconfig] Writing "controller-manager.conf" kubeconfig file\n    [endpoint] WARNING: port specified in controlPlaneEndpoint overrides bindPort in the controlplane address\n    [kubeconfig] Writing "scheduler.conf" kubeconfig file\n    [control-plane] Using manifest folder "/etc/kubernetes/manifests"\n    [control-plane] Creating static Pod manifest for "kube-apiserver"\n    [control-plane] Creating static Pod manifest for "kube-controller-manager"\n    [control-plane] Creating static Pod manifest for "kube-scheduler"\n    [etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"\n    [wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests". This can take up to 4m0s\n    [apiclient] All control plane components are healthy after 24.507568 seconds\n    [upload-config] storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace\n    [kubelet] Creating a ConfigMap "kubelet-config-1.14" in namespace kube-system with the configuration for the kubelets in the cluster\n    [upload-certs] Storing the certificates in ConfigMap "kubeadm-certs" in the "kube-system" Namespace\n    [upload-certs] Using certificate key:\n    a662b8364666f82c93cc5cd4fb4fabb623bbe9afdb182da353ac40f1752dfa4a\n    [mark-control-plane] Marking the node kubernetes-master-01 as control-plane by adding the label "node-role.kubernetes.io/master=\'\'"\n    [mark-control-plane] Marking the node kubernetes-master-01 as control-plane by adding the taints [node-role.kubernetes.io/master:NoSchedule]\n    [bootstrap-token] Using token: abcdef.0123456789abcdef\n    [bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles\n    [bootstrap-token] configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials\n    [bootstrap-token] configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token\n    [bootstrap-token] configured RBAC rules to allow certificate rotation for all node client certificates in the cluster\n    [bootstrap-token] creating the "cluster-info" ConfigMap in the "kube-public" namespace\n    [addons] Applied essential addon: CoreDNS\n    [endpoint] WARNING: port specified in controlPlaneEndpoint overrides bindPort in the controlplane address\n    [addons] Applied essential addon: kube-proxy\n    \n    Your Kubernetes control-plane has initialized successfully!\n    \n    To start using your cluster, you need to run the following as a regular user:\n    \n      mkdir -p $HOME/.kube\n      sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n      sudo chown $(id -u):$(id -g) $HOME/.kube/config\n    \n    You should now deploy a pod network to the cluster.\n    Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:\n      https://kubernetes.io/docs/concepts/cluster-administration/addons/\n    \n    You can now join any number of the control-plane node running the following command on each as root:\n    \n      kubeadm join 192.168.141.200:6444 --token abcdef.0123456789abcdef \\\n        --discovery-token-ca-cert-hash sha256:2ea8c138021fb1e184a24ed2a81c16c92f9f25c635c73918b1402df98f9c8aad \\\n        --experimental-control-plane --certificate-key a662b8364666f82c93cc5cd4fb4fabb623bbe9afdb182da353ac40f1752dfa4a\n    \n    Please note that the certificate-key gives access to cluster sensitive data, keep it secret!\n    As a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use \n    "kubeadm init phase upload-certs --experimental-upload-certs" to reload certs afterward.\n    \n    Then you can join any number of worker nodes by running the following on each as root:\n    \n    kubeadm join 192.168.141.200:6444 --token abcdef.0123456789abcdef \\\n        --discovery-token-ca-cert-hash sha256:2ea8c138021fb1e184a24ed2a81c16c92f9f25c635c73918b1402df98f9c8aad \n')])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br"),s("span",{staticClass:"line-number"},[e._v("27")]),s("br"),s("span",{staticClass:"line-number"},[e._v("28")]),s("br"),s("span",{staticClass:"line-number"},[e._v("29")]),s("br"),s("span",{staticClass:"line-number"},[e._v("30")]),s("br"),s("span",{staticClass:"line-number"},[e._v("31")]),s("br"),s("span",{staticClass:"line-number"},[e._v("32")]),s("br"),s("span",{staticClass:"line-number"},[e._v("33")]),s("br"),s("span",{staticClass:"line-number"},[e._v("34")]),s("br"),s("span",{staticClass:"line-number"},[e._v("35")]),s("br"),s("span",{staticClass:"line-number"},[e._v("36")]),s("br"),s("span",{staticClass:"line-number"},[e._v("37")]),s("br"),s("span",{staticClass:"line-number"},[e._v("38")]),s("br"),s("span",{staticClass:"line-number"},[e._v("39")]),s("br"),s("span",{staticClass:"line-number"},[e._v("40")]),s("br"),s("span",{staticClass:"line-number"},[e._v("41")]),s("br"),s("span",{staticClass:"line-number"},[e._v("42")]),s("br"),s("span",{staticClass:"line-number"},[e._v("43")]),s("br"),s("span",{staticClass:"line-number"},[e._v("44")]),s("br"),s("span",{staticClass:"line-number"},[e._v("45")]),s("br"),s("span",{staticClass:"line-number"},[e._v("46")]),s("br"),s("span",{staticClass:"line-number"},[e._v("47")]),s("br"),s("span",{staticClass:"line-number"},[e._v("48")]),s("br"),s("span",{staticClass:"line-number"},[e._v("49")]),s("br"),s("span",{staticClass:"line-number"},[e._v("50")]),s("br"),s("span",{staticClass:"line-number"},[e._v("51")]),s("br"),s("span",{staticClass:"line-number"},[e._v("52")]),s("br"),s("span",{staticClass:"line-number"},[e._v("53")]),s("br"),s("span",{staticClass:"line-number"},[e._v("54")]),s("br"),s("span",{staticClass:"line-number"},[e._v("55")]),s("br"),s("span",{staticClass:"line-number"},[e._v("56")]),s("br"),s("span",{staticClass:"line-number"},[e._v("57")]),s("br"),s("span",{staticClass:"line-number"},[e._v("58")]),s("br"),s("span",{staticClass:"line-number"},[e._v("59")]),s("br"),s("span",{staticClass:"line-number"},[e._v("60")]),s("br"),s("span",{staticClass:"line-number"},[e._v("61")]),s("br"),s("span",{staticClass:"line-number"},[e._v("62")]),s("br"),s("span",{staticClass:"line-number"},[e._v("63")]),s("br"),s("span",{staticClass:"line-number"},[e._v("64")]),s("br"),s("span",{staticClass:"line-number"},[e._v("65")]),s("br"),s("span",{staticClass:"line-number"},[e._v("66")]),s("br"),s("span",{staticClass:"line-number"},[e._v("67")]),s("br"),s("span",{staticClass:"line-number"},[e._v("68")]),s("br"),s("span",{staticClass:"line-number"},[e._v("69")]),s("br"),s("span",{staticClass:"line-number"},[e._v("70")]),s("br"),s("span",{staticClass:"line-number"},[e._v("71")]),s("br"),s("span",{staticClass:"line-number"},[e._v("72")]),s("br"),s("span",{staticClass:"line-number"},[e._v("73")]),s("br"),s("span",{staticClass:"line-number"},[e._v("74")]),s("br"),s("span",{staticClass:"line-number"},[e._v("75")]),s("br"),s("span",{staticClass:"line-number"},[e._v("76")]),s("br"),s("span",{staticClass:"line-number"},[e._v("77")]),s("br"),s("span",{staticClass:"line-number"},[e._v("78")]),s("br"),s("span",{staticClass:"line-number"},[e._v("79")]),s("br"),s("span",{staticClass:"line-number"},[e._v("80")]),s("br"),s("span",{staticClass:"line-number"},[e._v("81")]),s("br"),s("span",{staticClass:"line-number"},[e._v("82")]),s("br"),s("span",{staticClass:"line-number"},[e._v("83")]),s("br"),s("span",{staticClass:"line-number"},[e._v("84")]),s("br"),s("span",{staticClass:"line-number"},[e._v("85")]),s("br"),s("span",{staticClass:"line-number"},[e._v("86")]),s("br")])]),s("h2",{attrs:{id:"配置-kubectl"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-kubectl"}},[e._v("#")]),e._v(" 配置 kubectl")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("    # 配置 kubectl\n    mkdir -p $HOME/.kube\n    cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n    chown $(id -u):$(id -g) $HOME/.kube/config\n    \n    # 验证是否成功\n    kubectl get node\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br")])]),s("h2",{attrs:{id:"下载-calico-配置文件并修改"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#下载-calico-配置文件并修改"}},[e._v("#")]),e._v(" 下载 Calico 配置文件并修改")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("    wget https://docs.projectcalico.org/v3.7/manifests/calico.yaml\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("    vi calico.yaml\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("修改第 611 行，将 "),s("code",[e._v("192.168.0.0/16")]),e._v(" 修改为 "),s("code",[e._v("10.244.0.0/16")]),e._v("，可以通过如下命令快速查找")]),e._v(" "),s("ul",[s("li",[e._v("显示行号："),s("code",[e._v(":set number")])]),e._v(" "),s("li",[e._v("查找字符："),s("code",[e._v("/要查找的字符")]),e._v("，输入小写 "),s("code",[e._v("n")]),e._v(" 下一个匹配项，输入大写 "),s("code",[e._v("N")]),e._v(" 上一个匹配项")])]),e._v(" "),s("p",[s("img",{attrs:{src:"/img/20190604022029.png",alt:""}})]),e._v(" "),s("h2",{attrs:{id:"安装-calico"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装-calico"}},[e._v("#")]),e._v(" 安装 Calico")]),e._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("    kubectl apply -f calico.yaml\n    \n    # 输出如下\n    configmap/calico-config created\n    customresourcedefinition.apiextensions.k8s.io/felixconfigurations.crd.projectcalico.org created\n    customresourcedefinition.apiextensions.k8s.io/ipamblocks.crd.projectcalico.org created\n    customresourcedefinition.apiextensions.k8s.io/blockaffinities.crd.projectcalico.org created\n    customresourcedefinition.apiextensions.k8s.io/ipamhandles.crd.projectcalico.org created\n    customresourcedefinition.apiextensions.k8s.io/ipamconfigs.crd.projectcalico.org created\n    customresourcedefinition.apiextensions.k8s.io/bgppeers.crd.projectcalico.org created\n    customresourcedefinition.apiextensions.k8s.io/bgpconfigurations.crd.projectcalico.org created\n    customresourcedefinition.apiextensions.k8s.io/ippools.crd.projectcalico.org created\n    customresourcedefinition.apiextensions.k8s.io/hostendpoints.crd.projectcalico.org created\n    customresourcedefinition.apiextensions.k8s.io/clusterinformations.crd.projectcalico.org created\n    customresourcedefinition.apiextensions.k8s.io/globalnetworkpolicies.crd.projectcalico.org created\n    customresourcedefinition.apiextensions.k8s.io/globalnetworksets.crd.projectcalico.org created\n    customresourcedefinition.apiextensions.k8s.io/networkpolicies.crd.projectcalico.org created\n    customresourcedefinition.apiextensions.k8s.io/networksets.crd.projectcalico.org created\n    clusterrole.rbac.authorization.k8s.io/calico-kube-controllers created\n    clusterrolebinding.rbac.authorization.k8s.io/calico-kube-controllers created\n    clusterrole.rbac.authorization.k8s.io/calico-node created\n    clusterrolebinding.rbac.authorization.k8s.io/calico-node created\n    daemonset.extensions/calico-node created\n    serviceaccount/calico-node created\n    deployment.extensions/calico-kube-controllers created\n    serviceaccount/calico-kube-controllers created\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br"),s("span",{staticClass:"line-number"},[e._v("18")]),s("br"),s("span",{staticClass:"line-number"},[e._v("19")]),s("br"),s("span",{staticClass:"line-number"},[e._v("20")]),s("br"),s("span",{staticClass:"line-number"},[e._v("21")]),s("br"),s("span",{staticClass:"line-number"},[e._v("22")]),s("br"),s("span",{staticClass:"line-number"},[e._v("23")]),s("br"),s("span",{staticClass:"line-number"},[e._v("24")]),s("br"),s("span",{staticClass:"line-number"},[e._v("25")]),s("br"),s("span",{staticClass:"line-number"},[e._v("26")]),s("br")])]),s("h2",{attrs:{id:"加入-master-节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#加入-master-节点"}},[e._v("#")]),e._v(" 加入 Master 节点")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v('# 示例如下，别忘记两个备用节点都要加入哦\nkubeadm join 192.168.141.200:6444 --token abcdef.0123456789abcdef \\\n    --discovery-token-ca-cert-hash sha256:2ea8c138021fb1e184a24ed2a81c16c92f9f25c635c73918b1402df98f9c8aad \\\n    --experimental-control-plane --certificate-key a662b8364666f82c93cc5cd4fb4fabb623bbe9afdb182da353ac40f1752dfa4a\n\n# 输出如下\n[preflight] Running pre-flight checks\n        [WARNING IsDockerSystemdCheck]: detected "cgroupfs" as the Docker cgroup driver. The recommended driver is "systemd". Please follow the guide at https://kubernetes.io/docs/setup/cri/\n[preflight] Reading configuration from the cluster...\n[preflight] FYI: You can look at this config file with \'kubectl -n kube-system get cm kubeadm-config -oyaml\'\n[preflight] Running pre-flight checks before initializing the new control plane instance\n[preflight] Pulling images required for setting up a Kubernetes cluster\n[preflight] This might take a minute or two, depending on the speed of your internet connection\n[preflight] You can also perform this action in beforehand using \'kubeadm config images pull\'\n[download-certs] Downloading the certificates in Secret "kubeadm-certs" in the "kube-system" Namespace\n[certs] Using certificateDir folder "/etc/kubernetes/pki"\n[certs] Generating "apiserver" certificate and key\n[certs] apiserver serving cert is signed for DNS names [kubernetes-master-02 kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 192.168.141.151 192.168.141.200]\n[certs] Generating "apiserver-kubelet-client" certificate and key\n[certs] Generating "front-proxy-client" certificate and key\n[certs] Generating "etcd/server" certificate and key\n[certs] etcd/server serving cert is signed for DNS names [kubernetes-master-02 localhost] and IPs [192.168.141.151 127.0.0.1 ::1]\n[certs] Generating "etcd/peer" certificate and key\n[certs] etcd/peer serving cert is signed for DNS names [kubernetes-master-02 localhost] and IPs [192.168.141.151 127.0.0.1 ::1]\n[certs] Generating "etcd/healthcheck-client" certificate and key\n[certs] Generating "apiserver-etcd-client" certificate and key\n[certs] Valid certificates and keys now exist in "/etc/kubernetes/pki"\n[certs] Using the existing "sa" key\n[kubeconfig] Generating kubeconfig files\n[kubeconfig] Using kubeconfig folder "/etc/kubernetes"\n[endpoint] WARNING: port specified in controlPlaneEndpoint overrides bindPort in the controlplane address\n[kubeconfig] Writing "admin.conf" kubeconfig file\n[kubeconfig] Writing "controller-manager.conf" kubeconfig file\n[kubeconfig] Writing "scheduler.conf" kubeconfig file\n[control-plane] Using manifest folder "/etc/kubernetes/manifests"\n[control-plane] Creating static Pod manifest for "kube-apiserver"\n[control-plane] Creating static Pod manifest for "kube-controller-manager"\n[control-plane] Creating static Pod manifest for "kube-scheduler"\n[check-etcd] Checking that the etcd cluster is healthy\n[kubelet-start] Downloading configuration for the kubelet from the "kubelet-config-1.14" ConfigMap in the kube-system namespace\n[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"\n[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"\n[kubelet-start] Activating the kubelet service\n[kubelet-start] Waiting for the kubelet to perform the TLS Bootstrap...\n[etcd] Announced new etcd member joining to the existing etcd cluster\n[etcd] Wrote Static Pod manifest for a local etcd member to "/etc/kubernetes/manifests/etcd.yaml"\n[etcd] Waiting for the new etcd member to join the cluster. This can take up to 40s\n[upload-config] storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace\n[mark-control-plane] Marking the node kubernetes-master-02 as control-plane by adding the label "node-role.kubernetes.io/master=\'\'"\n[mark-control-plane] Marking the node kubernetes-master-02 as control-plane by adding the taints [node-role.kubernetes.io/master:NoSchedule]\n\nThis node has joined the cluster and a new control plane instance was created:\n\n* Certificate signing request was sent to apiserver and approval was received.\n* The Kubelet was informed of the new secure connection details.\n* Control plane (master) label and taint were applied to the new node.\n* The Kubernetes control plane instances scaled up.\n* A new etcd member was added to the local/stacked etcd cluster.\n\nTo start administering your cluster from this node, you need to run the following as a regular user:\n\n        mkdir -p $HOME/.kube\n        sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config\n        sudo chown $(id -u):$(id -g) $HOME/.kube/config\n\nRun \'kubectl get nodes\' to see this node join the cluster.\n')])])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("\n## 加入 Node 节点\n\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v('# 示例如下\nkubeadm join 192.168.141.200:6444 --token abcdef.0123456789abcdef \\\n    --discovery-token-ca-cert-hash sha256:2ea8c138021fb1e184a24ed2a81c16c92f9f25c635c73918b1402df98f9c8aad\n\n# 输出如下\n>     --discovery-token-ca-cert-hash sha256:2ea8c138021fb1e184a24ed2a81c16c92f9f25c635c73918b1402df98f9c8aad \n[preflight] Running pre-flight checks\n        [WARNING IsDockerSystemdCheck]: detected "cgroupfs" as the Docker cgroup driver. The recommended driver is "systemd". Please follow the guide at https://kubernetes.io/docs/setup/cri/\n[preflight] Reading configuration from the cluster...\n[preflight] FYI: You can look at this config file with \'kubectl -n kube-system get cm kubeadm-config -oyaml\'\n[kubelet-start] Downloading configuration for the kubelet from the "kubelet-config-1.14" ConfigMap in the kube-system namespace\n[kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"\n[kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"\n[kubelet-start] Activating the kubelet service\n[kubelet-start] Waiting for the kubelet to perform the TLS Bootstrap...\n\nThis node has joined the cluster:\n* Certificate signing request was sent to apiserver and a response was received.\n* The Kubelet was informed of the new secure connection details.\n\nRun \'kubectl get nodes\' on the control-plane to see this node join the cluster.\n')])])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("\n## 验证是否可用\n\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("kubectl get node\n\n# 输出如下，我们可以看到 Node 节点已经成功上线 ━━(￣ー￣*|||━━\nNAME                   STATUS   ROLES    AGE     VERSION\nkubernetes-master-01   Ready    master   19m     v1.14.2\nkubernetes-master-02   Ready    master   4m46s   v1.14.2\nkubernetes-master-03   Ready    master   3m23s   v1.14.2\nkubernetes-node-01     Ready    <none>   74s     v1.14.2\n")])])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[e._v("watch kubectl get pods --all-namespaces\n\n# 输出如下，coredns 也正常运行了\nEvery 2.0s: kubectl get pods --all-namespaces                                                                                                 kubernetes-master-01: Tue Jun  4 02:31:43 2019\n\nNAMESPACE     NAME                                           READY   STATUS    RESTARTS   AGE\nkube-system   calico-kube-controllers-8646dd497f-hz5xp       1/1     Running   0          9m9s\nkube-system   calico-node-2z892                              1/1     Running   0          9m9s\nkube-system   calico-node-fljxv                              1/1     Running   0          6m39s\nkube-system   calico-node-vprlw                              1/1     Running   0          5m16s\nkube-system   calico-node-xvqcx                              1/1     Running   0          3m7s\nkube-system   coredns-8686dcc4fd-5ndjm                       1/1     Running   0          21m\nkube-system   coredns-8686dcc4fd-zxtql                       1/1     Running   0          21m\nkube-system   etcd-kubernetes-master-01                      1/1     Running   0          20m\nkube-system   etcd-kubernetes-master-02                      1/1     Running   0          6m37s\nkube-system   etcd-kubernetes-master-03                      1/1     Running   0          5m14s\nkube-system   kube-apiserver-kubernetes-master-01            1/1     Running   0          20m\nkube-system   kube-apiserver-kubernetes-master-02            1/1     Running   0          6m37s\nkube-system   kube-apiserver-kubernetes-master-03            1/1     Running   0          5m14s\nkube-system   kube-controller-manager-kubernetes-master-01   1/1     Running   1          20m\nkube-system   kube-controller-manager-kubernetes-master-02   1/1     Running   0          6m37s\nkube-system   kube-controller-manager-kubernetes-master-03   1/1     Running   0          5m14s\nkube-system   kube-proxy-68jqr                               1/1     Running   0          3m7s\nkube-system   kube-proxy-69bnn                               1/1     Running   0          6m39s\nkube-system   kube-proxy-vvhp5                               1/1     Running   0          5m16s\nkube-system   kube-proxy-ws6wx                               1/1     Running   0          21m\nkube-system   kube-scheduler-kubernetes-master-01            1/1     Running   1          20m\nkube-system   kube-scheduler-kubernetes-master-02            1/1     Running   0          6m37s\nkube-system   kube-scheduler-kubernetes-master-03            1/1     Running   0          5m14s\n")])])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("\n**至此，Kubernetes 高可用集群算是彻底部署成功，撒花撒花 (゜-゜)つロ 干杯**")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])])])}),[],!1,null,null,null);n.default=a.exports}}]);