(window.webpackJsonp=window.webpackJsonp||[]).push([[512],{1208:function(e,s,a){"use strict";a.r(s);var n=a(5),t=Object(n.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"docker-进入容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-进入容器"}},[e._v("#")]),e._v(" Docker 进入容器")]),e._v(" "),a("p",[e._v("在使用 "),a("code",[e._v("-d")]),e._v(" 参数时，容器启动后会进入后台。")]),e._v(" "),a("p",[e._v("某些时候需要进入容器进行操作，包括使用 "),a("code",[e._v("docker attach")]),e._v(" 命令或 "),a("code",[e._v("docker exec")]),e._v(" 命令，推荐大家使用 "),a("code",[e._v("docker exec")]),e._v(" 命令，原因会在下面说明。")]),e._v(" "),a("h2",{attrs:{id:"attach-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#attach-命令"}},[e._v("#")]),e._v(" "),a("code",[e._v("attach")]),e._v(" 命令")]),e._v(" "),a("p",[a("code",[e._v("docker attach")]),e._v(" 是 Docker 自带的命令。下面示例如何使用该命令。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('    $ docker run -dit ubuntu\n    243c32535da7d142fb0e6df616a3c3ada0b8ab417937c853a9e1c251f499f550\n    \n    $ docker container ls\n    CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\n    243c32535da7        ubuntu:latest       "/bin/bash"         18 seconds ago      Up 17 seconds                           nostalgic_hypatia\n    \n    $ docker attach 243c\n    root@243c32535da7:/#\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br")])]),a("p",[a("em",[e._v("注意：")]),e._v(" 如果从这个 stdin 中 exit，会导致容器的停止。")]),e._v(" "),a("h2",{attrs:{id:"exec-命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exec-命令"}},[e._v("#")]),e._v(" "),a("code",[e._v("exec")]),e._v(" 命令")]),e._v(" "),a("h3",{attrs:{id:"i-t-参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#i-t-参数"}},[e._v("#")]),e._v(" -i -t 参数")]),e._v(" "),a("p",[a("code",[e._v("docker exec")]),e._v(" 后边可以跟多个参数，这里主要说明 "),a("code",[e._v("-i")]),e._v(" "),a("code",[e._v("-t")]),e._v(" 参数。")]),e._v(" "),a("p",[e._v("只用 "),a("code",[e._v("-i")]),e._v(" 参数时，由于没有分配伪终端，界面没有我们熟悉的 Linux 命令提示符，但命令执行结果仍然可以返回。")]),e._v(" "),a("p",[e._v("当 "),a("code",[e._v("-i")]),e._v(" "),a("code",[e._v("-t")]),e._v(" 参数一起使用时，则可以看到我们熟悉的 Linux 命令提示符。")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('    $ docker run -dit ubuntu\n    69d137adef7a8a689cbcb059e94da5489d3cddd240ff675c640c8d96e84fe1f6\n    \n    $ docker container ls\n    CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\n    69d137adef7a        ubuntu:latest       "/bin/bash"         18 seconds ago      Up 17 seconds                           zealous_swirles\n    \n    $ docker exec -i 69d1 bash\n    ls\n    bin\n    boot\n    dev\n    ...\n    \n    $ docker exec -it 69d1 bash\n    root@69d137adef7a:/#\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br")])]),a("p",[e._v("如果从这个 stdin 中 exit，不会导致容器的停止。这就是为什么推荐大家使用 "),a("code",[e._v("docker exec")]),e._v(" 的原因。")]),e._v(" "),a("p",[e._v("更多参数说明请使用 "),a("code",[e._v("docker exec --help")]),e._v(" 查看。")])])}),[],!1,null,null,null);s.default=t.exports}}]);