(window.webpackJsonp=window.webpackJsonp||[]).push([[666],{1363:function(e,t,s){"use strict";s.r(t);var v=s(5),_=Object(v.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"equals-与-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#equals-与-的区别"}},[e._v("#")]),e._v(" equals 与 == 的区别")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("==")]),e._v(" 与"),s("code",[e._v("equals")]),e._v(" 的主要区别是："),s("code",[e._v("==")]),e._v(" 常用于比较原生类型，而 "),s("code",[e._v("equals()")]),e._v(" 方法用于检查对象的相等性。")]),e._v(" "),s("li",[e._v("另一个不同的点是：如果 "),s("code",[e._v("==")]),e._v(" 和 "),s("code",[e._v("equals()")]),e._v(" 用于比较对象，当两个引用地址相同，"),s("code",[e._v("==")]),e._v(" 返回 true。而 "),s("code",[e._v("equals()")]),e._v(" 可以返回 true 或者 false 主要取决于重写实现。最常见的一个例子，字符串的比较，不同情况 "),s("code",[e._v("==")]),e._v(" 和 "),s("code",[e._v("equals()")]),e._v(" 返回不同的结果。")])])])}),[],!1,null,null,null);t.default=_.exports}}]);