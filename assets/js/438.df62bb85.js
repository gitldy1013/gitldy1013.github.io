(window.webpackJsonp=window.webpackJsonp||[]).push([[438],{1133:function(s,e,a){"use strict";a.r(e);var n=a(5),t=Object(n.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"数据卷"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据卷"}},[s._v("#")]),s._v(" 数据卷")]),s._v(" "),a("h2",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[s._v("#")]),s._v(" 概述")]),s._v(" "),a("p",[a("code",[s._v("数据卷")]),s._v(" 是一个可供一个或多个容器使用的特殊目录，它绕过 UFS，可以提供很多有用的特性：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("数据卷")]),s._v(" 可以在容器之间共享和重用")]),s._v(" "),a("li",[s._v("对 "),a("code",[s._v("数据卷")]),s._v(" 的修改会立马生效")]),s._v(" "),a("li",[s._v("对 "),a("code",[s._v("数据卷")]),s._v(" 的更新，不会影响镜像")]),s._v(" "),a("li",[a("code",[s._v("数据卷")]),s._v(" 默认会一直存在，即使容器被删除")])]),s._v(" "),a("blockquote",[a("p",[s._v("注意："),a("code",[s._v("数据卷")]),s._v(" 的使用，类似于 Linux 下对目录或文件进行 mount，镜像中的被指定为挂载点的目录中的文件会隐藏掉，能显示看的是挂载的 "),a("code",[s._v("数据卷")]),s._v("。")])]),s._v(" "),a("h2",{attrs:{id:"选择-v-还是-mount-参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选择-v-还是-mount-参数"}},[s._v("#")]),s._v(" 选择 -v 还是 -–mount 参数")]),s._v(" "),a("p",[s._v("Docker 新用户应该选择 "),a("code",[s._v("--mount")]),s._v(" 参数，经验丰富的 Docker 使用者对 "),a("code",[s._v("-v")]),s._v(" 或者 "),a("code",[s._v("--volume")]),s._v(" 已经很熟悉了，但是推荐使用 "),a("code",[s._v("--mount")]),s._v(" 参数。")]),s._v(" "),a("h2",{attrs:{id:"创建一个数据卷"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建一个数据卷"}},[s._v("#")]),s._v(" 创建一个数据卷")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    $ docker volume create my-vol\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("查看所有的 "),a("code",[s._v("数据卷")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    $ docker volume ls\n    \n    local               my-vol\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("在主机里使用以下命令可以查看指定 "),a("code",[s._v("数据卷")]),s._v(" 的信息")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('    $ docker volume inspect my-vol\n    [\n        {\n            "Driver": "local",\n            "Labels": {},\n            "Mountpoint": "/var/lib/docker/volumes/my-vol/_data",\n            "Name": "my-vol",\n            "Options": {},\n            "Scope": "local"\n        }\n    ]\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h2",{attrs:{id:"启动一个挂载数据卷的容器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动一个挂载数据卷的容器"}},[s._v("#")]),s._v(" 启动一个挂载数据卷的容器")]),s._v(" "),a("p",[s._v("在用 "),a("code",[s._v("docker run")]),s._v(" 命令的时候，使用 "),a("code",[s._v("--mount")]),s._v(" 标记来将 "),a("code",[s._v("数据卷")]),s._v(" 挂载到容器里。在一次 "),a("code",[s._v("docker run")]),s._v(" 中可以挂载多个 "),a("code",[s._v("数据卷")]),s._v("。")]),s._v(" "),a("p",[s._v("下面创建一个名为 "),a("code",[s._v("web")]),s._v(" 的容器，并加载一个 "),a("code",[s._v("数据卷")]),s._v(" 到容器的 "),a("code",[s._v("/webapp")]),s._v(" 目录。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    $ docker run -d -P \\\n        --name web \\\n        # -v my-vol:/wepapp \\\n        --mount source=my-vol,target=/webapp \\\n        training/webapp \\\n        python app.py\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"查看数据卷的具体信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看数据卷的具体信息"}},[s._v("#")]),s._v(" 查看数据卷的具体信息")]),s._v(" "),a("p",[s._v("在主机里使用以下命令可以查看 "),a("code",[s._v("web")]),s._v(" 容器的信息")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    $ docker inspect web\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("code",[s._v("数据卷")]),s._v(' 信息在 "Mounts" Key 下面')]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('    "Mounts": [\n        {\n            "Type": "volume",\n            "Name": "my-vol",\n            "Source": "/var/lib/docker/volumes/my-vol/_data",\n            "Destination": "/app",\n            "Driver": "local",\n            "Mode": "",\n            "RW": true,\n            "Propagation": ""\n        }\n    ],\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h2",{attrs:{id:"删除数据卷"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除数据卷"}},[s._v("#")]),s._v(" 删除数据卷")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    $ docker volume rm my-vol\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("code",[s._v("数据卷")]),s._v(" 是被设计用来持久化数据的，它的生命周期独立于容器，Docker 不会在容器被删除后自动删除 "),a("code",[s._v("数据卷")]),s._v("，并且也不存在垃圾回收这样的机制来处理没有任何容器引用的 "),a("code",[s._v("数据卷")]),s._v("。如果需要在删除容器的同时移除数据卷。可以在删除容器的时候使用 "),a("code",[s._v("docker rm -v")]),s._v(" 这个命令。")]),s._v(" "),a("p",[s._v("无主的数据卷可能会占据很多空间，要清理请使用以下命令")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    $ docker volume prune\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])}),[],!1,null,null,null);e.default=t.exports}}]);