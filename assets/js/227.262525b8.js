(window.webpackJsonp=window.webpackJsonp||[]).push([[227],{924:function(s,a,n){"use strict";n.r(a);var t=n(5),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"栈的压入弹出序列"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#栈的压入弹出序列"}},[s._v("#")]),s._v(" 栈的压入弹出序列")]),s._v(" "),n("h2",{attrs:{id:"题目描述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#题目描述"}},[s._v("#")]),s._v(" 题目描述")]),s._v(" "),n("p",[s._v("输入两个整数序列，第一个序列表示栈的压入顺序，请判断第二个序列是否可能为该栈的弹出顺序。假设压入栈的所有数字均不相等。例如序列1,2,3,4,5是某栈的压入顺序，序列4,5,3,2,1是该压栈序列对应的一个弹出序列，但4,3,5,1,2就不可能是该压栈序列的弹出序列。（注意：这两个序列的长度是相等的）")]),s._v(" "),n("h2",{attrs:{id:"思路"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#思路"}},[s._v("#")]),s._v(" 思路")]),s._v(" "),n("p",[s._v("我们以：1 2 3 4 5  进行压入，下面的：2 4 5 3 1 是弹出序列")]),s._v(" "),n("p",[n("img",{attrs:{src:"/images/image-20200424111056735.png",alt:"image-20200424111056735"}})]),s._v(" "),n("ul",[n("li",[s._v("首先我们需要有一个栈，列表")]),s._v(" "),n("li",[s._v("按照pushV的方式压入栈")]),s._v(" "),n("li",[s._v("弹出的时候，需要循环判断是否需要弹出")]),s._v(" "),n("li",[s._v("判断是否需要弹出的时机，刚刚压入过后就弹")]),s._v(" "),n("li",[s._v("判断需要弹出的情况的条件，压入栈的顶部 和 弹出栈的顶部数据相等")]),s._v(" "),n("li",[s._v("然后我们还需要循环比较")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Solution:\n\n    def IsPopOrder(self, pushV, popV):\n        # 首先我们需要有一个栈\n        if pushV == [] or len(pushV) != len(popV):\n            return None\n        stack = []\n        index = 0\n        for item in pushV:\n            # 压栈\n            stack.append(item)\n            # 判断是否需要弹出，也就是插入的值，等于popV的第一个。这里需要循环判断\n            while stack != [] and stack[-1] == popV[index]:\n                stack.pop()\n                index += 1\n        # 判断 stack 中是否有元素，如果有，代表着False\n        return len(stack) == 0\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);