(window.webpackJsonp=window.webpackJsonp||[]).push([[382],{1078:function(s,a,n){"use strict";n.r(a);var r=n(5),e=Object(r.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"dubbo-hystrix-实现服务熔断"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dubbo-hystrix-实现服务熔断"}},[s._v("#")]),s._v(" Dubbo + Hystrix 实现服务熔断")]),s._v(" "),n("h2",{attrs:{id:"熔断器简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#熔断器简介"}},[s._v("#")]),s._v(" 熔断器简介")]),s._v(" "),n("p",[s._v("在微服务架构中，根据业务来拆分成一个个的服务，服务与服务之间可以通过 "),n("code",[s._v("RPC")]),s._v(" 相互调用。为了保证其高可用，单个服务通常会集群部署。由于网络原因或者自身的原因，服务并不能保证 100% 可用，如果单个服务出现问题，调用这个服务就会出现线程阻塞，此时若有大量的请求涌入，"),n("code",[s._v("Servlet")]),s._v(" 容器的线程资源会被消耗完毕，导致服务瘫痪。服务与服务之间的依赖性，故障会传播，会对整个微服务系统造成灾难性的严重后果，这就是服务故障的 "),n("strong",[s._v("“雪崩”")]),s._v(" 效应。")]),s._v(" "),n("p",[s._v("为了解决这个问题，业界提出了熔断器模型。")]),s._v(" "),n("p",[s._v("Netflix 开源了 Hystrix 组件，实现了熔断器模式，Spring Cloud 对这一组件进行了整合。在微服务架构中，一个请求需要调用多个服务是非常常见的，如下图：")]),s._v(" "),n("p",[n("img",{attrs:{src:"/img/201805292246007.png",alt:""}})]),s._v(" "),n("p",[s._v("较底层的服务如果出现故障，会导致连锁故障。当对特定的服务的调用的不可用达到一个阀值（Hystrix 是 "),n("strong",[s._v("5 秒 20 次")]),s._v("） 熔断器将会被打开。")]),s._v(" "),n("p",[n("img",{attrs:{src:"/img/201805292246008.png",alt:""}})]),s._v(" "),n("p",[s._v("熔断器打开后，为了避免连锁故障，通过 "),n("code",[s._v("fallback")]),s._v(" 方法可以直接返回一个固定值。")]),s._v(" "),n("h2",{attrs:{id:"dubbo-provider-中使用熔断器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dubbo-provider-中使用熔断器"}},[s._v("#")]),s._v(" Dubbo Provider 中使用熔断器")]),s._v(" "),n("h3",{attrs:{id:"在-pom-xml-中增加依赖"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#在-pom-xml-中增加依赖"}},[s._v("#")]),s._v(" 在 "),n("code",[s._v("pom.xml")]),s._v(" 中增加依赖")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>\n        <version>2.0.1.RELEASE</version>\n    </dependency>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"在-application-中增加-enablehystrix-注解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#在-application-中增加-enablehystrix-注解"}},[s._v("#")]),s._v(" 在 Application 中增加 "),n("code",[s._v("@EnableHystrix")]),s._v(" 注解")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    package com.cmcc.hello.dubbo.service.user.provider;\n    \n    import com.alibaba.dubbo.container.Main;\n    import org.springframework.boot.SpringApplication;\n    import org.springframework.boot.autoconfigure.SpringBootApplication;\n    import org.springframework.cloud.netflix.hystrix.EnableHystrix;\n    \n    @EnableHystrix\n    @SpringBootApplication\n    public class HelloDubboServiceUserProviderApplication {\n        public static void main(String[] args) {\n            SpringApplication.run(HelloDubboServiceUserProviderApplication.class, args);\n            Main.main(args);\n        }\n    }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("h3",{attrs:{id:"在-service-中增加-hystrixcommand-注解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#在-service-中增加-hystrixcommand-注解"}},[s._v("#")]),s._v(" 在 Service 中增加 "),n("code",[s._v("@HystrixCommand")]),s._v(" 注解")]),s._v(" "),n("p",[s._v("在调用方法上增加 "),n("code",[s._v("@HystrixCommand")]),s._v(" 配置，此时调用会经过 Hystrix 代理")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    package com.cmcc.hello.dubbo.service.user.provider.api.impl;\n    \n    import com.alibaba.dubbo.config.annotation.Service;\n    import com.cmcc.hello.dubbo.service.user.api.UserService;\n    import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;\n    import com.netflix.hystrix.contrib.javanica.annotation.HystrixProperty;\n    import org.springframework.beans.factory.annotation.Value;\n    \n    @Service(version = "${user.service.version}")\n    public class UserServiceImpl implements UserService {\n    \n        @Value("${dubbo.protocol.port}")\n        private String port;\n    \n        @HystrixCommand(commandProperties = {\n                @HystrixProperty(name = "circuitBreaker.requestVolumeThreshold", value = "10"),\n                @HystrixProperty(name = "execution.isolation.thread.timeoutInMilliseconds", value = "2000")\n        })\n        @Override\n        public String sayHi() {\n    //        return "Hello Dubbo, i am from port:" + port;\n            throw new RuntimeException("Exception to show hystrix enabled.");\n        }\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("h3",{attrs:{id:"测试熔断器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#测试熔断器"}},[s._v("#")]),s._v(" 测试熔断器")]),s._v(" "),n("p",[s._v("此时我们再次请求服务提供者，浏览器会报 500 异常")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    Exception to show hystrix enabled.\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h2",{attrs:{id:"dubbo-consumer-中使用熔断器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dubbo-consumer-中使用熔断器"}},[s._v("#")]),s._v(" Dubbo Consumer 中使用熔断器")]),s._v(" "),n("h3",{attrs:{id:"在-pom-xml-中增加依赖-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#在-pom-xml-中增加依赖-2"}},[s._v("#")]),s._v(" 在 "),n("code",[s._v("pom.xml")]),s._v(" 中增加依赖")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>\n        <version>2.0.1.RELEASE</version>\n    </dependency>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"在-application-中增加-enablehystrix-注解-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#在-application-中增加-enablehystrix-注解-2"}},[s._v("#")]),s._v(" 在 Application 中增加 "),n("code",[s._v("@EnableHystrix")]),s._v(" 注解")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    package com.cmcc.hello.dubbo.service.user.consumer;\n    \n    import org.springframework.boot.SpringApplication;\n    import org.springframework.boot.autoconfigure.SpringBootApplication;\n    import org.springframework.cloud.netflix.hystrix.EnableHystrix;\n    \n    @EnableHystrix\n    @SpringBootApplication\n    public class HelloDubboServiceUserConsumerApplication {\n        public static void main(String[] args) {\n            SpringApplication.run(HelloDubboServiceUserConsumerApplication.class, args);\n        }\n    }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("h3",{attrs:{id:"在调用方法上增加-hystrixcommand-注解-并指定-fallbackmethod-方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#在调用方法上增加-hystrixcommand-注解-并指定-fallbackmethod-方法"}},[s._v("#")]),s._v(" 在调用方法上增加 "),n("code",[s._v("@HystrixCommand")]),s._v(" 注解，并指定 "),n("code",[s._v("fallbackMethod")]),s._v(" 方法")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    package com.cmcc.hello.dubbo.service.user.consumer.controller;\n    \n    import com.alibaba.dubbo.config.annotation.Reference;\n    import com.cmcc.hello.dubbo.service.user.api.UserService;\n    import com.netflix.hystrix.contrib.javanica.annotation.HystrixCommand;\n    import org.springframework.web.bind.annotation.RequestMapping;\n    import org.springframework.web.bind.annotation.RestController;\n    \n    @RestController\n    public class UserController {\n    \n        @Reference(version = "${user.service.version}")\n        private UserService userService;\n    \n        @HystrixCommand(fallbackMethod = "hiError")\n        @RequestMapping(value = "hi")\n        public String sayHi() {\n            return userService.sayHi();\n        }\n    \n        public String hiError() {\n            return "Hystrix fallback";\n        }\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("h3",{attrs:{id:"测试熔断器-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#测试熔断器-2"}},[s._v("#")]),s._v(" 测试熔断器")]),s._v(" "),n("p",[s._v("此时我们再次请求服务提供者，浏览器会显示：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    Hystrix fallback\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("至此，Dubbo + Hystrix 配置完成")])])}),[],!1,null,null,null);a.default=e.exports}}]);