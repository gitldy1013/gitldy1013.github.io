(window.webpackJsonp=window.webpackJsonp||[]).push([[186],{883:function(s,a,n){"use strict";n.r(a);var t=n(5),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"消息总线springcloudbus"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#消息总线springcloudbus"}},[s._v("#")]),s._v(" 消息总线SpringCloudBUS")]),s._v(" "),n("p",[s._v("消息总线一般是配合SpringCloudConfig一起使用的")]),s._v(" "),n("h2",{attrs:{id:"概述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[s._v("#")]),s._v(" 概述")]),s._v(" "),n("p",[s._v("分布式自动刷新配置功能，SpringCloudBus配合SpringCloudConfig使用可以实现配置的动态刷新")]),s._v(" "),n("p",[s._v("Bus支持两种消息代理：RabbitMQ和Kafka")]),s._v(" "),n("p",[n("img",{attrs:{src:"/images/image-20200413234036665.png",alt:"image-20200413234036665"}})]),s._v(" "),n("p",[s._v("SpringCloudBus是用来将分布式系统的节点与轻量级消息系统链接起来的框架，它整合了Java的事件处理机制和消息中间件的功能。")]),s._v(" "),n("p",[s._v("SpringCloudBus能管理和传播分布式系统的消息，就像一个分布式执行器，可用于广播状态更改，事件推送等，也可以当做微服务的通信通道。")]),s._v(" "),n("p",[n("img",{attrs:{src:"/images/image-20200413234506046.png",alt:"image-20200413234506046"}})]),s._v(" "),n("h3",{attrs:{id:"什么是总线"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是总线"}},[s._v("#")]),s._v(" 什么是总线")]),s._v(" "),n("p",[s._v("在微服务架构的系统中，通常会使用轻量级的消息代理来构建一个共用的消息主题，并让系统中所有微服务实例都连接上来。由于该主题中产生的消息会被所有实例监听和消费，所以被称为消息总线。在总线上的各个实例，都可以方便的广播一些需要让其它连接在该主题上的实例都知道的消息。")]),s._v(" "),n("h3",{attrs:{id:"基本原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本原理"}},[s._v("#")]),s._v(" 基本原理")]),s._v(" "),n("p",[s._v("ConfigClient实例都监听MQ中同一个topic（默认是SpringCloudBus），但一个服务刷新数据的时候，它会被这个消息放到Topic中，这样其它监听同一个Topic的服务就能够得到通知，然后去更新自身的配置")]),s._v(" "),n("p",[n("img",{attrs:{src:"/images/image-20200414085203534.png",alt:"image-20200414085203534"}})]),s._v(" "),n("p",[s._v("通过topic进行广播通知")]),s._v(" "),n("h2",{attrs:{id:"rabbitmq环境配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq环境配置"}},[s._v("#")]),s._v(" RabbitMQ环境配置")]),s._v(" "),n("p",[n("a",{attrs:{href:"http://moguit.cn/#/info?blogUid=995e0fccd2b240aabd56a10a688e42d4",target:"_blank",rel:"noopener noreferrer"}},[s._v("蘑菇博客配置RabbitMQ"),n("OutboundLink")],1)]),s._v(" "),n("h2",{attrs:{id:"springcloudbus动态刷新全局广播"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#springcloudbus动态刷新全局广播"}},[s._v("#")]),s._v(" SpringCloudBus动态刷新全局广播")]),s._v(" "),n("h3",{attrs:{id:"配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[s._v("#")]),s._v(" 配置")]),s._v(" "),n("p",[s._v("首先需要搭建好rabbitmq环境")]),s._v(" "),n("p",[s._v("然后引入RabbitMQ依赖")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\x3c!--添加消息总线Rabbitmq支持--\x3e\n<dependency>\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-starter-bus-amqp</artifactId>\n</dependency>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("增加yml中的rabbitmq配置")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("spring:\n  application:\n    name: config-client\n  cloud:\n    config:\n      label: master #分支名称\n      name: config #配置文件名称\n      profile: dev #读取后缀文件名，即 master分支config-dev.yml\n      uri: http://localhost:3344 #配置中心地址\n  rabbitmq: #mq相关配置\n    host: localhost\n    port: 5672\n    username: guest\n    password: guest\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("h3",{attrs:{id:"设计思想"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#设计思想"}},[s._v("#")]),s._v(" 设计思想")]),s._v(" "),n("ul",[n("li",[s._v("利用消息总线触发一个客户端/bus/refresh，而刷新所有客户端配置")])]),s._v(" "),n("p",[n("img",{attrs:{src:"/images/image-20200413235715876.png",alt:"image-20200413235715876"}})]),s._v(" "),n("ul",[n("li",[s._v("利用消息总线出发一个服务端ConfigServer的/bus/refresh断点，而刷新所有客户端的配置")])]),s._v(" "),n("p",[n("img",{attrs:{src:"/images/image-20200413235736633.png",alt:"image-20200413235736633"}})]),s._v(" "),n("ul",[n("li",[s._v("图二的架构更加适合，图一不适合的原因有\n"),n("ul",[n("li",[s._v("图一打破了微服务的职责单一性，因为微服务本身是业务模块，他不应该承担配置刷新的之职责")]),s._v(" "),n("li",[s._v("打破了微服务各节点的对等性")]),s._v(" "),n("li",[s._v("有一定的局限性，例如，微服务在迁移时，它的网络地址常常发生变化，此时如果想要做到自动刷新，那就会增加更多的修改。")])])])]),s._v(" "),n("h2",{attrs:{id:"服务端添加消息总线"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#服务端添加消息总线"}},[s._v("#")]),s._v(" 服务端添加消息总线")]),s._v(" "),n("h3",{attrs:{id:"引入依赖"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#引入依赖"}},[s._v("#")]),s._v(" 引入依赖")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("        \x3c!--添加消息总线Rabbitmq支持--\x3e\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-bus-amqp</artifactId>\n        </dependency>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"增加配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#增加配置"}},[s._v("#")]),s._v(" 增加配置")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("spring:\n  application:\n    name: cloud-config-center\n  cloud:\n    config:\n      server:\n        git:\n          uri: https://github.com/boytian/springcloud-config.git\n          search-paths:\n            - springcloud-config\n      label: master\n  rabbitmq: #mq相关配置\n    host: localhost\n    port: 5672\n    username: guest\n    password: guest\n    \n# rabbitmq相关配置，暴露bus刷新点\nmanagement:\n  endpoints: #暴露bus刷新配置的端点\n    web:\n      exposure:\n        include: 'bus-refresh'    \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br")])]),n("p",[s._v("注意，上面的 "),n("code",[s._v("bus-refresh")]),s._v(" 就是actuator的刷新机制，相当于提供了一个  /bus-refresh的post方法，当我们调用的时候，会刷新配置，然后一次发送，处处生效。")]),s._v(" "),n("h2",{attrs:{id:"客户端引入消息总线支持"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#客户端引入消息总线支持"}},[s._v("#")]),s._v(" 客户端引入消息总线支持")]),s._v(" "),n("h3",{attrs:{id:"引入依赖-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#引入依赖-2"}},[s._v("#")]),s._v(" 引入依赖")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\x3c!--添加消息总线Rabbitmq支持--\x3e\n<dependency>\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-starter-bus-amqp</artifactId>\n</dependency>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"修改yml"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#修改yml"}},[s._v("#")]),s._v(" 修改yml")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('spring:\n  application:\n    name: config-client\n  cloud:\n    config:\n      label: master #分支名称\n      name: config #配置文件名称\n      profile: dev #读取后缀文件名，即 master分支config-dev.yml\n      uri: http://localhost:3344 #配置中心地址\n  rabbitmq: #mq相关配置\n    host: localhost\n    port: 5672\n    username: guest\n    password: guest\n\n#暴露监控端点\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: "*"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("p",[s._v("这里的暴露端点和上面的不太一样")]),s._v(" "),n("h2",{attrs:{id:"测试"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[s._v("#")]),s._v(" 测试")]),s._v(" "),n("p",[s._v("当我们的服务端配置中心 和 客户端都增加完上述配置后，我们需要做的就是手动发送一个POST请求到服务端")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('curl -X POST "http://localhsot:33444/actuator/bus-refresh"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("执行完成后，配置中心会通过BUS消息总线，发送到所有的客户端，并完成配置的刷新操作。")]),s._v(" "),n("p",[s._v("完成了一次修改，广播通知，处处生效的效果")]),s._v(" "),n("h2",{attrs:{id:"springcloudbus动态刷新定点通知"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#springcloudbus动态刷新定点通知"}},[s._v("#")]),s._v(" SpringCloudBus动态刷新定点通知")]),s._v(" "),n("p",[s._v("就是我想通知的目标是有差异化，有些客户端需要通过，有些不通知，也就是10个客户端，我只通知1个")]),s._v(" "),n("p",[s._v("简单一句话，就是指定某一个实例生效而不是全部")]),s._v(" "),n("p",[s._v("公式："),n("code",[s._v("http://localhost:配置中心端口/actuator/bus-refresh/{destination}")])]),s._v(" "),n("p",[n("code",[s._v("/bus/refresh")]),s._v("请求不再发送到具体的服务实例上，而是发送给config server并通过destination参数类指定需要更新配置的服务或实例。")]),s._v(" "),n("h3",{attrs:{id:"案例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#案例"}},[s._v("#")]),s._v(" 案例")]),s._v(" "),n("p",[s._v("以刷新运行在3355端口上的config-client为例，只通知3355，不通知3366，可以使用下面命令")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('curl -X POST "http://localhsot:33444/actuator/bus-refresh/config-client:3355"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[n("img",{attrs:{src:"/images/image-20200414085924123.png",alt:"image-20200414085924123"}})])])}),[],!1,null,null,null);a.default=e.exports}}]);