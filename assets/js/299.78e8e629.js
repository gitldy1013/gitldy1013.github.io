(window.webpackJsonp=window.webpackJsonp||[]).push([[299],{996:function(a,t,s){"use strict";s.r(t);var e=s(5),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"java锁之公平锁和非公平锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java锁之公平锁和非公平锁"}},[a._v("#")]),a._v(" Java锁之公平锁和非公平锁")]),a._v(" "),s("h2",{attrs:{id:"概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[a._v("#")]),a._v(" 概念")]),a._v(" "),s("h3",{attrs:{id:"公平锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#公平锁"}},[a._v("#")]),a._v(" 公平锁")]),a._v(" "),s("p",[a._v("是指多个线程按照申请锁的顺序来获取锁，类似于排队买饭，先来后到，先来先服务，就是公平的，也就是队列")]),a._v(" "),s("h3",{attrs:{id:"非公平锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#非公平锁"}},[a._v("#")]),a._v(" 非公平锁")]),a._v(" "),s("p",[a._v("是指多个线程获取锁的顺序，并不是按照申请锁的顺序，有可能申请的线程比先申请的线程优先获取锁，在高并发环境下，有可能造成优先级翻转，或者饥饿的线程（也就是某个线程一直得不到锁）")]),a._v(" "),s("h2",{attrs:{id:"如何创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如何创建"}},[a._v("#")]),a._v(" 如何创建")]),a._v(" "),s("p",[a._v("并发包中ReentrantLock的创建可以指定析构函数的boolean类型来得到公平锁或者非公平锁，默认是非公平锁")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("/**\n* 创建一个可重入锁，true 表示公平锁，false 表示非公平锁。默认非公平锁\n*/\nLock lock = new ReentrantLock(true);\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h2",{attrs:{id:"两者区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#两者区别"}},[a._v("#")]),a._v(" 两者区别")]),a._v(" "),s("p",[s("strong",[a._v("公平锁")]),a._v("：就是很公平，在并发环境中，每个线程在获取锁时会先查看此锁维护的等待队列，如果为空，或者当前线程是等待队列中的第一个，就占用锁，否者就会加入到等待队列中，以后安装FIFO的规则从队列中取到自己")]),a._v(" "),s("p",[s("strong",[a._v("非公平锁：")]),a._v(" 非公平锁比较粗鲁，上来就直接尝试占有锁，如果尝试失败，就再采用类似公平锁那种方式。")]),a._v(" "),s("h2",{attrs:{id:"题外话"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#题外话"}},[a._v("#")]),a._v(" 题外话")]),a._v(" "),s("p",[a._v("Java ReenttrantLock通过构造函数指定该锁是否公平，默认是非公平锁，因为非公平锁的优点在于吞吐量比公平锁大，"),s("code",[a._v("对于synchronized而言，也是一种非公平锁")])])])}),[],!1,null,null,null);t.default=r.exports}}]);