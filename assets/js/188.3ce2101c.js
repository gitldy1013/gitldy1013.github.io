(window.webpackJsonp=window.webpackJsonp||[]).push([[188],{885:function(s,a,t){"use strict";t.r(a);var n=t(5),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"使用zipkin搭建蘑菇博客链路追踪"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用zipkin搭建蘑菇博客链路追踪"}},[s._v("#")]),s._v(" 使用Zipkin搭建蘑菇博客链路追踪")]),s._v(" "),t("h2",{attrs:{id:"前言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[s._v("#")]),s._v(" 前言")]),s._v(" "),t("p",[s._v("Zipkin是一个开源的分布式的链路追踪系统，每个微服务都会向zipkin报告计时数据，聚合各业务系统调用延迟数据，达到链路调用监控跟踪。\n"),t("img",{attrs:{src:"http://ww3.sinaimg.cn/large/005HgCsWgy1gcyevgqgm3j30n60bjdj9.jpg",alt:"image-20200206123422800"}})]),s._v(" "),t("p",[s._v("如图，在复杂的调用链路中假设存在一条调用链路响应缓慢，如何定位其中延迟高的服务呢？")]),s._v(" "),t("ul",[t("li",[s._v("日志： 通过分析调用链路上的每个服务日志得到结果")]),s._v(" "),t("li",[s._v("zipkin：使用"),t("code",[s._v("zipkin")]),s._v("的"),t("code",[s._v("web UI")]),s._v("可以一眼看出延迟高的服务")])]),s._v(" "),t("p",[t("img",{attrs:{src:"http://ww3.sinaimg.cn/large/005HgCsWgy1gcyevh2wpyj30j70g0t9d.jpg",alt:"image-20200206123502226"}})]),s._v(" "),t("p",[s._v("如图所示，各业务系统在彼此调用时，将特定的跟踪消息传递至"),t("code",[s._v("zipkin")]),s._v(",zipkin在收集到跟踪信息后将其聚合处理、存储、展示等，用户可通过"),t("code",[s._v("web UI")]),s._v("方便获得网络延迟、调用链路、系统依赖等等。")]),s._v(" "),t("p",[s._v("同时zipkin会根据调用关系通过zipkin ui生成依赖关系图，下面是我搭建成功后，蘑菇博客链路追踪的依赖图。")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://ww3.sinaimg.cn/large/005HgCsWgy1gcyevha5o9j30wd0ifgmh.jpg",alt:"image-20200206103258522"}})]),s._v(" "),t("p",[s._v("tip：在使用zipkin链路追踪的时候，需要提前启动zipkin服务，然后在启动我们的蘑菇博客项目，这样才能够正常的将服务调用的信息注册到zipkin中")]),s._v(" "),t("h2",{attrs:{id:"安装zipkin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装zipkin"}},[s._v("#")]),s._v(" 安装Zipkin")]),s._v(" "),t("h3",{attrs:{id:"安装须知"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装须知"}},[s._v("#")]),s._v(" 安装须知")]),s._v(" "),t("p",[s._v("在 SpringBoot 2.x 版本后就不推荐自定义 zipkin server 了，推荐使用官网下载的 jar 包方式")]),s._v(" "),t("p",[s._v("也就是说我们不需要编写一个mogu-zipkin服务了，而改成直接启动jar包即可")]),s._v(" "),t("h3",{attrs:{id:"下载地址"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#下载地址"}},[s._v("#")]),s._v(" 下载地址")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("https://search.maven.org/remote_content?g=io.zipkin.java&a=zipkin-server&v=LATEST&c=exec\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"运行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运行"}},[s._v("#")]),s._v(" 运行")]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("java -jar zipkin-server-2.12.5-exec.jar\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 或集成RabbitMQ")]),s._v("\n\njava -jar zipkin-server-2.12.5-exec.jar --zipkin.collector.rabbitmq.addresses"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("这样zipkin就是以内存存储的方式进行启动了")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://ww3.sinaimg.cn/large/005HgCsWgy1gcyevhmkp6j30q309dq5o.jpg",alt:"image-20200206124625792"}})]),s._v(" "),t("h3",{attrs:{id:"日志存储方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#日志存储方式"}},[s._v("#")]),s._v(" 日志存储方式")]),s._v(" "),t("p",[s._v("目前zipkin收集的信息能够以三种方式进行存储")]),s._v(" "),t("ul",[t("li",[s._v("内存（默认）")]),s._v(" "),t("li",[s._v("Mysql")]),s._v(" "),t("li",[s._v("ElasticSearch")])]),s._v(" "),t("p",[s._v("这里我们尝试的是以mysql的方式进行存储，如果不想以mysql进行存储的话，可以忽略这一步")]),s._v(" "),t("ul",[t("li",[s._v("初始化mysql数据库")])]),s._v(" "),t("p",[s._v("首先我们需要在mogu_blog数据库中，执行下面的官方SQL脚本，创建对应的表")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/openzipkin/zipkin/blob/master/zipkin-storage/mysql-v1/src/main/resources/mysql.sql",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方脚本传送门"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("如果上述地址过期，请执行下面的SQL脚本，在之前，需要创建一个数据库，叫zipkin")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("\n--\n-- Copyright 2015-2019 The OpenZipkin Authors\n--\n-- Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n-- in compliance with the License. You may obtain a copy of the License at\n--\n-- http://www.apache.org/licenses/LICENSE-2.0\n--\n-- Unless required by applicable law or agreed to in writing, software distributed under the License\n-- is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n-- or implied. See the License for the specific language governing permissions and limitations under\n-- the License.\n--\n\nCREATE TABLE IF NOT EXISTS zipkin_spans (\n  `trace_id_high` BIGINT NOT NULL DEFAULT 0 COMMENT 'If non zero, this means the trace uses 128 bit traceIds instead of 64 bit',\n  `trace_id` BIGINT NOT NULL,\n  `id` BIGINT NOT NULL,\n  `name` VARCHAR(255) NOT NULL,\n  `remote_service_name` VARCHAR(255),\n  `parent_id` BIGINT,\n  `debug` BIT(1),\n  `start_ts` BIGINT COMMENT 'Span.timestamp(): epoch micros used for endTs query and to implement TTL',\n  `duration` BIGINT COMMENT 'Span.duration(): micros used for minDuration and maxDuration query',\n  PRIMARY KEY (`trace_id_high`, `trace_id`, `id`)\n) ENGINE=InnoDB ROW_FORMAT=COMPRESSED CHARACTER SET=utf8 COLLATE utf8_general_ci;\n\nALTER TABLE zipkin_spans ADD INDEX(`trace_id_high`, `trace_id`) COMMENT 'for getTracesByIds';\nALTER TABLE zipkin_spans ADD INDEX(`name`) COMMENT 'for getTraces and getSpanNames';\nALTER TABLE zipkin_spans ADD INDEX(`remote_service_name`) COMMENT 'for getTraces and getRemoteServiceNames';\nALTER TABLE zipkin_spans ADD INDEX(`start_ts`) COMMENT 'for getTraces ordering and range';\n\nCREATE TABLE IF NOT EXISTS zipkin_annotations (\n  `trace_id_high` BIGINT NOT NULL DEFAULT 0 COMMENT 'If non zero, this means the trace uses 128 bit traceIds instead of 64 bit',\n  `trace_id` BIGINT NOT NULL COMMENT 'coincides with zipkin_spans.trace_id',\n  `span_id` BIGINT NOT NULL COMMENT 'coincides with zipkin_spans.id',\n  `a_key` VARCHAR(255) NOT NULL COMMENT 'BinaryAnnotation.key or Annotation.value if type == -1',\n  `a_value` BLOB COMMENT 'BinaryAnnotation.value(), which must be smaller than 64KB',\n  `a_type` INT NOT NULL COMMENT 'BinaryAnnotation.type() or -1 if Annotation',\n  `a_timestamp` BIGINT COMMENT 'Used to implement TTL; Annotation.timestamp or zipkin_spans.timestamp',\n  `endpoint_ipv4` INT COMMENT 'Null when Binary/Annotation.endpoint is null',\n  `endpoint_ipv6` BINARY(16) COMMENT 'Null when Binary/Annotation.endpoint is null, or no IPv6 address',\n  `endpoint_port` SMALLINT COMMENT 'Null when Binary/Annotation.endpoint is null',\n  `endpoint_service_name` VARCHAR(255) COMMENT 'Null when Binary/Annotation.endpoint is null'\n) ENGINE=InnoDB ROW_FORMAT=COMPRESSED CHARACTER SET=utf8 COLLATE utf8_general_ci;\n\nALTER TABLE zipkin_annotations ADD UNIQUE KEY(`trace_id_high`, `trace_id`, `span_id`, `a_key`, `a_timestamp`) COMMENT 'Ignore insert on duplicate';\nALTER TABLE zipkin_annotations ADD INDEX(`trace_id_high`, `trace_id`, `span_id`) COMMENT 'for joining with zipkin_spans';\nALTER TABLE zipkin_annotations ADD INDEX(`trace_id_high`, `trace_id`) COMMENT 'for getTraces/ByIds';\nALTER TABLE zipkin_annotations ADD INDEX(`endpoint_service_name`) COMMENT 'for getTraces and getServiceNames';\nALTER TABLE zipkin_annotations ADD INDEX(`a_type`) COMMENT 'for getTraces and autocomplete values';\nALTER TABLE zipkin_annotations ADD INDEX(`a_key`) COMMENT 'for getTraces and autocomplete values';\nALTER TABLE zipkin_annotations ADD INDEX(`trace_id`, `span_id`, `a_key`) COMMENT 'for dependencies job';\n\nCREATE TABLE IF NOT EXISTS zipkin_dependencies (\n  `day` DATE NOT NULL,\n  `parent` VARCHAR(255) NOT NULL,\n  `child` VARCHAR(255) NOT NULL,\n  `call_count` BIGINT,\n  `error_count` BIGINT,\n  PRIMARY KEY (`day`, `parent`, `child`)\n) ENGINE=InnoDB ROW_FORMAT=COMPRESSED CHARACTER SET=utf8 COLLATE utf8_general_ci;\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br")])]),t("p",[s._v("执行完成后，我们将会得到下面的三个表")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://ww3.sinaimg.cn/large/005HgCsWgy1gcyevhte5bj306x04ywec.jpg",alt:"image-20200206130303873"}})]),s._v(" "),t("p",[s._v("其中")]),s._v(" "),t("ul",[t("li",[s._v("zipkin_spans：存放基本工作单元，也就是一次链路调用的信息")]),s._v(" "),t("li",[s._v("zipkin_dependencies：存放的依赖信息")]),s._v(" "),t("li",[s._v("zipkin_annotations：用来记录请求特定事件相关信息（例如时间）")])]),s._v(" "),t("p",[s._v("然后在安装下面的方式进行启动")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("java -jar zipkin.jar --STORAGE_TYPE=mysql --MYSQL_DB=zipkin --MYSQL_USER=root --MYSQL_PASS=root --MYSQL_HOST=localhost --MYSQL_TCP_PORT=3306\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("启动完成后，我们在运行我们的服务，在打开数据库就能看到信息存储在mysql中了")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://ww3.sinaimg.cn/large/005HgCsWgy1gcyevi1l98j31hb0fsgog.jpg",alt:"image-20200206194458065"}})]),s._v(" "),t("h2",{attrs:{id:"项目中集成zipkin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#项目中集成zipkin"}},[s._v("#")]),s._v(" 项目中集成Zipkin")]),s._v(" "),t("p",[s._v("安装完成后，我们需要引入 sleuth  和 zipkin的依赖")]),s._v(" "),t("div",{staticClass:"language-xml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-xml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("\x3c!-- sleuth --\x3e")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("org.springframework.cloud"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("spring-cloud-starter-sleuth"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("\x3c!-- zipkin链路追踪 --\x3e")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("org.springframework.cloud"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("groupId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("spring-cloud-starter-zipkin"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("artifactId")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("dependency")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[s._v("然后在业务服务的application.yml增加下面的配置，其中蘑菇博客的业务服务主要是：mogu-web，mogu-admin，mogu-sms，mogu-picture，mogu-search")]),s._v(" "),t("div",{staticClass:"language-yml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#spring")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spring")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sleuth 配置")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("sleuth")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("web")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("client")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("enabled")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean important"}},[s._v("true")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("sampler")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("probability")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 采样比例为: 0.1(即10%),设置的值介于0.0到1.0之间，1.0则表示全部采集。")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# zipkin 配置")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("zipkin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("base-url")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" http"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("//localhost"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9411")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定了Zipkin服务器的地址")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("p",[s._v("然后浏览器输入下面的地址：http://localhost:9411 ，如果出现下面的画面，那么代表我们zipkin服务配置成功了")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://ww3.sinaimg.cn/large/005HgCsWgy1gcyevibv3pj31ai0p7jsr.jpg",alt:"image-20200206112551615"}})]),s._v(" "),t("h2",{attrs:{id:"sleuth"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sleuth"}},[s._v("#")]),s._v(" Sleuth")]),s._v(" "),t("h3",{attrs:{id:"定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定义"}},[s._v("#")]),s._v(" 定义")]),s._v(" "),t("p",[s._v("spring-cloud-starter-sleuth: 英文名是侦探，它的功能是在项目中自动为日志加入Tag与序列号")]),s._v(" "),t("p",[s._v("源码：https://github.com/spring-cloud/spring-cloud-sleuth")]),s._v(" "),t("h3",{attrs:{id:"原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[s._v("#")]),s._v(" 原理")]),s._v(" "),t("p",[s._v("调用侧请求中加入额外的Span序列号等上下文信息放入Header中(通过注入Feign定制Client实现)，被调用侧通过全局Filter模拟AOP记录执行情况，计算执行情况与耗时，并存入定制的ByteBoundedQueue队列中，然后通过HTTP等将信息异步发送到Zipkin收集器中，Zipkin收集器通过UI显示调用详情")]),s._v(" "),t("p",[s._v("其中添加了如下组件")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("TraceFeignClient： 请求端注入的FeignClient，为Request的Header添加SpanID, TraceID等信息")])]),s._v(" "),t("li",[t("p",[s._v("TraceFilter： 接收端注入的定制Filter，它将解析Request中的Header，执行业务，计算耗时，最终算出一个完整的JSON格式的Span，通过队列异步发送到收集器ZipKin中")])]),s._v(" "),t("li",[t("p",[s._v("ZipKin：日志收集器，读取JSON格式的SPAN信息，并存储与展示")])])]),s._v(" "),t("h3",{attrs:{id:"采样率"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#采样率"}},[s._v("#")]),s._v(" 采样率")]),s._v(" "),t("p",[s._v("如果使用spring-cloud-sleuth-zipkin或spring-cloud-sleuth-stream，PercentageBasedSampler是默认的（默认值是0.1），你可以使用spring.sleuth.sampler.percentage配置输出")]),s._v(" "),t("h3",{attrs:{id:"附加信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#附加信息"}},[s._v("#")]),s._v(" 附加信息")]),s._v(" "),t("p",[s._v("用户可以使用span tags定制关键字，为了限制span数据量，一般一个HTTP请求只会被少数元数据标记，例如status code、host以及URL，用户可以通过配置spring.sleuth.keys.http.headers(一系列头名称)添加request headers")]),s._v(" "),t("h2",{attrs:{id:"zipkin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zipkin"}},[s._v("#")]),s._v(" Zipkin")]),s._v(" "),t("h3",{attrs:{id:"定义-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定义-2"}},[s._v("#")]),s._v(" 定义")]),s._v(" "),t("p",[s._v("来自Twitte的分布式日志收集工具，分为上传端(spring-cloud-starter-zipkin，集成到项目中)与服务端(独立部署，默认将数据存到内存中)")]),s._v(" "),t("p",[s._v("注意: Zipkin仅对RPC通信过程进行记录，注意它与业务代码日志是无关的，如果你希望找到一款LogAppender来分析所有Log4j留下的日志，那么建议还是使用Kakfa+ELK这种传统的方法来实现。")]),s._v(" "),t("h3",{attrs:{id:"源码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#源码"}},[s._v("#")]),s._v(" 源码")]),s._v(" "),t("p",[s._v("https://github.com/apache/incubator-zipkin")]),s._v(" "),t("h3",{attrs:{id:"概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[s._v("#")]),s._v(" 概念")]),s._v(" "),t("p",[s._v("使用zipkin涉及到以下几个概念")]),s._v(" "),t("ul",[t("li",[s._v("Span：基本工作单元，一次链路调用(可以是RPC，DB等没有特定的限制)创建一个span，通过一个64位ID标识它，span通过还有其他的数据，例如描述信息，时间戳，key-value对的(Annotation)tag信息，parent-id等,其中parent-id可以表示span调用链路来源，通俗的理解span就是一次请求信息")]),s._v(" "),t("li",[s._v("Trace：类似于树结构的Span集合，表示一条调用链路，存在唯一标识")]),s._v(" "),t("li",[s._v("Annotation：注解，用来记录请求特定事件相关信息（例如时间），通常包含四个注解信息\n"),t("ul",[t("li",[s._v("cs： Client Start,表示客户端发起请求")]),s._v(" "),t("li",[s._v("sr：Server Receive,表示服务端收到请求")]),s._v(" "),t("li",[s._v("ss：Server Send,表示服务端完成处理，并将结果发送给客户端")]),s._v(" "),t("li",[s._v("cr：Client Received,表示客户端获取到服务端返回信息")])])]),s._v(" "),t("li",[s._v("BinaryAnnotation：提供一些额外信息，一般已key-value对出现")])]),s._v(" "),t("h3",{attrs:{id:"完整的调用链路图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#完整的调用链路图"}},[s._v("#")]),s._v(" 完整的调用链路图")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://ww3.sinaimg.cn/large/005HgCsWgy1gcyevil1kkj30ow0dlwgk.jpg",alt:"image-20200206124108256"}})]),s._v(" "),t("p",[s._v("上图表示一请求链路，一条链路通过"),t("code",[s._v("Trace Id")]),s._v("唯一标识，"),t("code",[s._v("Span")]),s._v("标识发起的请求信息，各"),t("code",[s._v("span")]),s._v("通过"),t("code",[s._v("parent id")]),s._v(" 关联起来，如图")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://ww3.sinaimg.cn/large/005HgCsWgy1gcyevirn9bj30ix06kq33.jpg",alt:"image-20200206124142798"}})]),s._v(" "),t("p",[s._v("整个链路的依赖关系如下:")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://ww3.sinaimg.cn/large/005HgCsWgy1gcyevizirjj30qj05gjrm.jpg",alt:"image-20200206124156502"}})]),s._v(" "),t("p",[s._v("完成链路调用的记录后，如何来计算调用的延迟呢，这就需要利用"),t("code",[s._v("Annotation")]),s._v("信息")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://ww3.sinaimg.cn/large/005HgCsWgy1gcyevjdkn4j30gw06fdg6.jpg",alt:"image-20200206124208350"}})]),s._v(" "),t("p",[s._v("sr-cs 得到请求发出延迟")]),s._v(" "),t("p",[s._v("ss-sr 得到服务端处理延迟")]),s._v(" "),t("p",[s._v("cr-cs 得到整个链路完成延迟")]),s._v(" "),t("h3",{attrs:{id:"zipkin-server"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zipkin-server"}},[s._v("#")]),s._v(" Zipkin Server")]),s._v(" "),t("p",[s._v("Zipkin Server主要包括四个模块：")]),s._v(" "),t("ul",[t("li",[s._v("Collector 接收或收集各应用传输的数据")]),s._v(" "),t("li",[s._v("Storage 存储接受或收集过来的数据，当前支持Memory，MySQL，Cassandra，ElasticSearch等，默认存储在内存中")]),s._v(" "),t("li",[s._v("API（Query） 负责查询Storage中存储的数据，提供简单的JSON API获取数据，主要提供给web UI使用")]),s._v(" "),t("li",[s._v("Web 提供简单的web界面")])]),s._v(" "),t("h2",{attrs:{id:"缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#缺点"}},[s._v("#")]),s._v(" 缺点")]),s._v(" "),t("ul",[t("li",[s._v("在springcloud中强依赖与spring-cloud-starter-zipkin")]),s._v(" "),t("li",[s._v("zipkin只能统计接口级别的信息")])]),s._v(" "),t("h2",{attrs:{id:"sleuth-和-zipkin-ui界面介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sleuth-和-zipkin-ui界面介绍"}},[s._v("#")]),s._v(" Sleuth 和 Zipkin ui界面介绍")]),s._v(" "),t("h3",{attrs:{id:"首页"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#首页"}},[s._v("#")]),s._v(" 首页")]),s._v(" "),t("p",[s._v("首页里面主要承载了trace的查询功能，根据不同的条件，搜索数据")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://ww3.sinaimg.cn/large/005HgCsWgy1gcyevjo5eoj30za0l7q65.jpg",alt:"image-20200206112747752"}})]),s._v(" "),t("h3",{attrs:{id:"trace详情"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#trace详情"}},[s._v("#")]),s._v(" trace详情")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://ww3.sinaimg.cn/large/005HgCsWgy1gcyevjzpzlj31580cjwk6.jpg",alt:"image-20200206113151796"}})]),s._v(" "),t("h3",{attrs:{id:"span详情"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#span详情"}},[s._v("#")]),s._v(" span详情")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://ww3.sinaimg.cn/large/005HgCsWgy1gcyevk9vynj30qs0ew77a.jpg",alt:"image-20200206114035194"}})]),s._v(" "),t("p",[s._v("这个图中，需要注意的是相对时间和调用行为")]),s._v(" "),t("p",[s._v("调用行为分如下四种：")]),s._v(" "),t("p",[s._v("cs - Client Send : 客户端已经提出了请求。这就设置了跨度的开始。")]),s._v(" "),t("p",[s._v("sr - Server Receive: 服务器已收到请求并将开始处理它。这与CS之间的差异将是网络延迟和时钟抖动的组合。")]),s._v(" "),t("p",[s._v("ss - Server Send: 服务器已完成处理，并将请求发送回客户端。这与SR之间的差异将是服务器处理请求所花费的时间")]),s._v(" "),t("p",[s._v("cr - Client Receive : 客户端已经收到来自服务器的响应。这就设置了跨度的终点。当记录注释时，RPC被认为是完整的。")]),s._v(" "),t("p",[s._v("相对时间：")]),s._v(" "),t("p",[s._v("表示在调用链开始到现在的时间，比如\n"),t("img",{attrs:{src:"http://ww3.sinaimg.cn/large/005HgCsWgy1gcyevkim2tj30oa06hdg7.jpg",alt:"image-20200206114610081"}})]),s._v(" "),t("p",[s._v("从trace生成到现在，")]),s._v(" "),t("p",[s._v("17ms的时候，Client Send bas-ms这个应用发出了调用")]),s._v(" "),t("p",[s._v("19ms的时候，Server Receive ems-ms收到了bas-ms的调用。 这个说明，从bas-ms到ems-ms中间的网络耗时花费了2ms.")]),s._v(" "),t("p",[s._v("34ms的时候，Server Send ems-ms的方法执行完毕，准备返回响应结果给bas-ms , 这说明ems-ms处理请求花费了34-19 = 15ms")]),s._v(" "),t("p",[s._v("34ms的时候，Client Receive bas-ms收到了返回结果")]),s._v(" "),t("p",[s._v("界面显示的时候，是根据相对时间来排序的，所以Client Receive排在了第三位，因为他和Server Send的时间是一样的。")]),s._v(" "),t("h3",{attrs:{id:"全局依赖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全局依赖"}},[s._v("#")]),s._v(" 全局依赖")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://ww3.sinaimg.cn/large/005HgCsWgy1gcyevld3bbj30r3051jrl.jpg",alt:"image-20200206114642063"}})]),s._v(" "),t("p",[s._v("点击服务名，弹出如下框，显示出了调用关系")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://ww3.sinaimg.cn/large/005HgCsWgy1gcyevljr4rj30r409ht8x.jpg",alt:"image-20200206114831472"}})]),s._v(" "),t("p",[s._v("点击具体的服务名，出现如下界面")]),s._v(" "),t("p",[t("img",{attrs:{src:"http://ww3.sinaimg.cn/large/005HgCsWgy1gcyevmbq7qj30h007mgll.jpg",alt:"image-20200206115433974"}})]),s._v(" "),t("ul",[t("li",[s._v("Number of calls ： 总的调用数（除去异常的）")]),s._v(" "),t("li",[s._v("Number of errors：调用异常的次数")])]),s._v(" "),t("h2",{attrs:{id:"参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),t("ul",[t("li",[s._v("https://blog.csdn.net/singgel/article/details/89853346")]),s._v(" "),t("li",[s._v("https://blog.csdn.net/u012394095/article/details/82585863")])])])}),[],!1,null,null,null);a.default=e.exports}}]);