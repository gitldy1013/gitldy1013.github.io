(window.webpackJsonp=window.webpackJsonp||[]).push([[608],{1305:function(e,t,r){"use strict";r.r(t);var s=r(5),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"服务网格化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#服务网格化"}},[e._v("#")]),e._v(" 服务网格化")]),e._v(" "),r("h2",{attrs:{id:"概述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[e._v("#")]),e._v(" 概述")]),e._v(" "),r("p",[e._v("服务网格(Service Mesh)，最早使用由开发 Linkerd 的 Buoyant 公司提出，并在内部使用。2016 年 9 月 29 日第一次公开使用这个术语。2017 年的时候随着 Linkerd 的传入，Service Mesh 进入国内技术社区的视野。")]),e._v(" "),r("p",[e._v("服务网格是一个基础设施层，功能在于处理服务间通信，职责是负责实现请求的可靠传递。在实践中，服务网格通常实现为轻量级网络代理，通常与应用程序部署在一起，但是对应用程序透明。")]),e._v(" "),r("p",[e._v("服务网格称之为下一代微服务架构标准，按照我给出的三套微服务架构解决方案（Apache Dubbo Zookeeper、Spring Cloud Netflix、Spring Cloud Alibaba）不难看出都是在使用各种组件组合成为我们期望的微服务架构的样子。这就直接导致了咱们目前使用的微服务架构模型都是七拼八凑的并没有一个有效的标准去界定这到底算不算微服务。")]),e._v(" "),r("p",[e._v("于是由 Google、IBM 和 Lyft 联合打造的 "),r("strong",[e._v("Istio")]),e._v(" 应运而生，他是 Service Mesh 的集大成者。为了实现真正的微服务架构学习 Istio 是必须的。而它又与 Kubernetes 一脉相承，所以咱们服务网格化的第一课是 Kubernetes。")]),e._v(" "),r("h2",{attrs:{id:"kubernetes"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes"}},[e._v("#")]),e._v(" Kubernetes")]),e._v(" "),r("p",[e._v("Kubernetes 是 "),r("strong",[e._v("Google 2014 年创建管理的")]),e._v("，是 Google 10 多年大规模容器管理技术 Borg 的开源版本。是容器集群管理系统，是一个开源的平台，可以实现容器集群的自动化部署、自动扩缩容、维护等功能。其目标是促进完善组件和工具的生态系统，以减轻应用程序在公有云或私有云中运行的负担。")]),e._v(" "),r("p",[r("RouterLink",{attrs:{to:"/zh/service-mesh-kubernetes/"}},[r("strong",[e._v("资料")])])],1)])}),[],!1,null,null,null);t.default=a.exports}}]);