(window.webpackJsonp=window.webpackJsonp||[]).push([[294],{991:function(n,s,e){"use strict";e.r(s);var a=e(5),t=Object(a.a)({},(function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"volatile的应用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#volatile的应用"}},[n._v("#")]),n._v(" Volatile的应用")]),n._v(" "),e("h2",{attrs:{id:"单例模式dcl代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#单例模式dcl代码"}},[n._v("#")]),n._v(" 单例模式DCL代码")]),n._v(" "),e("p",[n._v("首先回顾一下，单线程下的单例模式代码")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('/**\n * SingletonDemo（单例模式）\n *\n * @author: 陌溪\n * @create: 2020-03-10-16:40\n */\npublic class SingletonDemo {\n\n    private static SingletonDemo instance = null;\n\n    private SingletonDemo () {\n        System.out.println(Thread.currentThread().getName() + "\\t 我是构造方法SingletonDemo");\n    }\n\n    public static SingletonDemo getInstance() {\n        if(instance == null) {\n            instance = new SingletonDemo();\n        }\n        return instance;\n    }\n\n    public static void main(String[] args) {\n        // 这里的 == 是比较内存地址\n        System.out.println(SingletonDemo.getInstance() == SingletonDemo.getInstance());\n        System.out.println(SingletonDemo.getInstance() == SingletonDemo.getInstance());\n        System.out.println(SingletonDemo.getInstance() == SingletonDemo.getInstance());\n        System.out.println(SingletonDemo.getInstance() == SingletonDemo.getInstance());\n    }\n}\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br")])]),e("p",[n._v("最后输出的结果")]),n._v(" "),e("p",[e("img",{attrs:{src:"/images/image-20200310164513408.png",alt:"image-20200310164513408"}})]),n._v(" "),e("p",[n._v("但是在多线程的环境下，我们的单例模式是否还是同一个对象了")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('/**\n * SingletonDemo（单例模式）\n *\n * @author: 陌溪\n * @create: 2020-03-10-16:40\n */\npublic class SingletonDemo {\n\n    private static SingletonDemo instance = null;\n\n    private SingletonDemo () {\n        System.out.println(Thread.currentThread().getName() + "\\t 我是构造方法SingletonDemo");\n    }\n\n    public static SingletonDemo getInstance() {\n        if(instance == null) {\n            instance = new SingletonDemo();\n        }\n        return instance;\n    }\n\n    public static void main(String[] args) {\n        for (int i = 0; i < 10; i++) {\n            new Thread(() -> {\n                SingletonDemo.getInstance();\n            }, String.valueOf(i)).start();\n        }\n    }\n}\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br")])]),e("p",[n._v("从下面的结果我们可以看出，我们通过SingletonDemo.getInstance() 获取到的对象，并不是同一个，而是被下面几个线程都进行了创建，那么在多线程环境下，单例模式如何保证呢？")]),n._v(" "),e("p",[e("img",{attrs:{src:"/images/image-20200310164720940.png",alt:"image-20200310164720940"}})]),n._v(" "),e("h3",{attrs:{id:"解决方法1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决方法1"}},[n._v("#")]),n._v(" 解决方法1")]),n._v(" "),e("p",[n._v("引入synchronized关键字")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("    public synchronized static SingletonDemo getInstance() {\n        if(instance == null) {\n            instance = new SingletonDemo();\n        }\n        return instance;\n    }\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br")])]),e("p",[n._v("输出结果")]),n._v(" "),e("p",[e("img",{attrs:{src:"/images/image-20200310164946940.png",alt:"image-20200310164946940"}})]),n._v(" "),e("p",[n._v("我们能够发现，通过引入Synchronized关键字，能够解决高并发环境下的单例模式问题")]),n._v(" "),e("p",[n._v("但是synchronized属于重量级的同步机制，它只允许一个线程同时访问获取实例的方法，但是为了保证数据一致性，而减低了并发性，因此采用的比较少")]),n._v(" "),e("h3",{attrs:{id:"解决方法2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#解决方法2"}},[n._v("#")]),n._v(" 解决方法2")]),n._v(" "),e("p",[n._v("通过引入DCL   Double Check Lock   双端检锁机制")]),n._v(" "),e("p",[n._v("就是在进来和出去的时候，进行检测")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("    public static SingletonDemo getInstance() {\n        if(instance == null) {\n            // 同步代码段的时候，进行检测\n            synchronized (SingletonDemo.class) {\n                if(instance == null) {\n                    instance = new SingletonDemo();\n                }\n            }\n        }\n        return instance;\n    }\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br")])]),e("p",[n._v("最后输出的结果为：")]),n._v(" "),e("p",[e("img",{attrs:{src:"/images/image-20200310165703190.png",alt:"image-20200310165703190"}})]),n._v(" "),e("p",[n._v("从输出结果来看，确实能够保证单例模式的正确性，但是上面的方法还是存在问题的")]),n._v(" "),e("p",[n._v("DCL（双端检锁）机制不一定是线程安全的，原因是有指令重排的存在，加入volatile可以禁止指令重排")]),n._v(" "),e("p",[n._v("原因是在某一个线程执行到第一次检测的时候，读取到 instance 不为null，instance的引用对象可能没有完成实例化。因为 instance = new SingletonDemo()；可以分为以下三步进行完成：")]),n._v(" "),e("ul",[e("li",[n._v("memory = allocate();   // 1、分配对象内存空间")]),n._v(" "),e("li",[n._v("instance(memory);   // 2、初始化对象")]),n._v(" "),e("li",[n._v("instance = memory;  // 3、设置instance指向刚刚分配的内存地址，此时instance != null")])]),n._v(" "),e("p",[n._v("但是我们通过上面的三个步骤，能够发现，步骤2 和 步骤3之间不存在 数据依赖关系，而且无论重排前 还是重排后，程序的执行结果在单线程中并没有改变，因此这种重排优化是允许的。")]),n._v(" "),e("ul",[e("li",[n._v("memory = allocate();   // 1、分配对象内存空间")]),n._v(" "),e("li",[n._v("instance = memory;  // 3、设置instance指向刚刚分配的内存地址，此时instance != null，但是对象还没有初始化完成")]),n._v(" "),e("li",[n._v("instance(memory);   // 2、初始化对象")])]),n._v(" "),e("p",[n._v("这样就会造成什么问题呢？")]),n._v(" "),e("p",[n._v("也就是当我们执行到重排后的步骤2，试图获取instance的时候，会得到null，因为对象的初始化还没有完成，而是在重排后的步骤3才完成，因此执行单例模式的代码时候，就会重新在创建一个instance实例")]),n._v(" "),e("p",[e("code",[n._v("指令重排只会保证串行语义的执行一致性（单线程），但并不会关系多线程间的语义一致性")])]),n._v(" "),e("p",[n._v("所以当一条线程访问instance不为null时，由于instance实例未必已初始化完成，这就造成了线程安全的问题")]),n._v(" "),e("p",[n._v("所以需要引入volatile，来保证出现指令重排的问题，从而保证单例模式的线程安全性")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("private static volatile SingletonDemo instance = null;\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br")])]),e("h3",{attrs:{id:"最终代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#最终代码"}},[n._v("#")]),n._v(" 最终代码")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('/**\n * SingletonDemo（单例模式）\n *\n * @author: 陌溪\n * @create: 2020-03-10-16:40\n */\npublic class SingletonDemo {\n\n    private static volatile SingletonDemo instance = null;\n\n    private SingletonDemo () {\n        System.out.println(Thread.currentThread().getName() + "\\t 我是构造方法SingletonDemo");\n    }\n\n    public static SingletonDemo getInstance() {\n        if(instance == null) {\n            // a 双重检查加锁多线程情况下会出现某个线程虽然这里已经为空，但是另外一个线程已经执行到d处\n            synchronized (SingletonDemo.class) //b\n            { \n           //c不加volitale关键字的话有可能会出现尚未完全初始化就获取到的情况。原因是内存模型允许无序写入\n                if(instance == null) { \n                \t// d 此时才开始初始化\n                    instance = new SingletonDemo();\n                }\n            }\n        }\n        return instance;\n    }\n\n    public static void main(String[] args) {\n//        // 这里的 == 是比较内存地址\n//        System.out.println(SingletonDemo.getInstance() == SingletonDemo.getInstance());\n//        System.out.println(SingletonDemo.getInstance() == SingletonDemo.getInstance());\n//        System.out.println(SingletonDemo.getInstance() == SingletonDemo.getInstance());\n//        System.out.println(SingletonDemo.getInstance() == SingletonDemo.getInstance());\n\n        for (int i = 0; i < 10; i++) {\n            new Thread(() -> {\n                SingletonDemo.getInstance();\n            }, String.valueOf(i)).start();\n        }\n    }\n}\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br"),e("span",{staticClass:"line-number"},[n._v("37")]),e("br"),e("span",{staticClass:"line-number"},[n._v("38")]),e("br"),e("span",{staticClass:"line-number"},[n._v("39")]),e("br"),e("span",{staticClass:"line-number"},[n._v("40")]),e("br"),e("span",{staticClass:"line-number"},[n._v("41")]),e("br"),e("span",{staticClass:"line-number"},[n._v("42")]),e("br"),e("span",{staticClass:"line-number"},[n._v("43")]),e("br")])])])}),[],!1,null,null,null);s.default=t.exports}}]);