(window.webpackJsonp=window.webpackJsonp||[]).push([[231],{928:function(s,n,a){"use strict";a.r(n);var e=a(5),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"合并两个排序的链表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#合并两个排序的链表"}},[s._v("#")]),s._v(" 合并两个排序的链表")]),s._v(" "),a("h2",{attrs:{id:"描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#描述"}},[s._v("#")]),s._v(" 描述")]),s._v(" "),a("p",[s._v("来源：https://www.nowcoder.com/practice/d8b6b4358f774294a89de2a6ac4d9337")]),s._v(" "),a("p",[s._v("输入两个单调递增的链表，输出两个链表合成后的链表，当然我们需要合成后的链表满足单调不减规则。")]),s._v(" "),a("h2",{attrs:{id:"思考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#思考"}},[s._v("#")]),s._v(" 思考")]),s._v(" "),a("p",[s._v("先有两个单调递增的链表")]),s._v(" "),a("p",[a("img",{attrs:{src:"/images/image-20200425211851737.png",alt:"image-20200425211851737"}})]),s._v(" "),a("p",[s._v("合并后")]),s._v(" "),a("p",[a("img",{attrs:{src:"/images/image-20200425211958540.png",alt:"image-20200425211958540"}})]),s._v(" "),a("p",[s._v("从上图发现，我们一共需要4个指针，第一个是头指针，第二个和第三个分别是控制两个链表的移动的指针，第四个指针是最小值的指针（前面的指针）。")]),s._v(" "),a("h2",{attrs:{id:"代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码"}},[s._v("#")]),s._v(" 代码")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("\nclass Solution:\n    # 返回合并后列表\n    def Merge(self, pHead1, pHead2):\n\n        if pHead1 == None:\n            return pHead2\n        if pHead2 == None:\n            return pHead1\n\n        # 得到最小的一个头结点\n        newHead = pHead1 if pHead1.val < pHead2.val else pHead2\n        # 链表1上的指针 和 链表2上的指针\n        pTmp1 = pHead1\n        pTmp2 = pHead2\n        if newHead == pTmp1:\n            pTmp1 = pTmp1.next\n        if newHead == pTmp2:\n            pTmp2 = pTmp2.next\n\n        # 前面的指针\n        previousPointer = newHead\n\n        # 链表1 和 链表2 都不为空的时候，开始合并\n        while pTmp1 and pTmp2:\n            # 找出最小值，放在previousPointer指针后面\n            if pTmp1.val < pTmp2.val:\n                previousPointer.next = pTmp1\n                previousPointer = pTmp1\n                pTmp1 = pTmp1.next\n            else:\n                previousPointer.next = pTmp2\n                previousPointer = pTmp2\n                pTmp2 = pTmp2.next\n\n        if pTmp1 == None:\n            previousPointer.next = pTmp2\n        if pTmp2 == None:\n            previousPointer.next = pTmp1\n\n        return newHead\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);