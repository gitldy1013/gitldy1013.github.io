(window.webpackJsonp=window.webpackJsonp||[]).push([[322],{1019:function(s,n,a){"use strict";a.r(n);var e=a(5),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"分布式锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式锁"}},[s._v("#")]),s._v(" 分布式锁")]),s._v(" "),a("h2",{attrs:{id:"集群环境下保证id不重复"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集群环境下保证id不重复"}},[s._v("#")]),s._v(" 集群环境下保证ID不重复")]),s._v(" "),a("p",[s._v("原来的Synchronized + Lock只能锁单机，也就是只能在一个JVM环境下")]),s._v(" "),a("p",[a("img",{attrs:{src:"/images/image-20200403221837957.png",alt:"image-20200403221837957"}})]),s._v(" "),a("p",[s._v("而在分布式+集群的环境下，变成了N对N的关系，在并发的环境下，如果使用UUID或者自增ID，就可能出现ID重复的问题，因此在集群下的环境下，对JVM进行加锁，这就是分布式锁。")]),s._v(" "),a("p",[a("img",{attrs:{src:"/images/image-20200403222011539.png",alt:"image-20200403222011539"}})]),s._v(" "),a("p",[s._v("在小厂的解决方案：也就是QPS < 2000的公司，有以下三种方案")]),s._v(" "),a("ul",[a("li",[s._v("mysql数据库的乐观锁实现")]),s._v(" "),a("li",[s._v("redis：redission")]),s._v(" "),a("li",[s._v("zookeeper：（服务治理 和 服务注册）")])]),s._v(" "),a("h2",{attrs:{id:"zookeeper实现分布式锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper实现分布式锁"}},[s._v("#")]),s._v(" Zookeeper实现分布式锁")]),s._v(" "),a("p",[s._v("因为Zookeeper在创建节点的时候，需要保证节点的唯一性，也就是实现原理就是，每次一个线程获取到了锁，那就在Zookeeper上创建一个临时节点，但用完锁之后，在把这个节点删除掉")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("create /node v0410  # 创建一个持久节点\ncrate -e /node v0410 # 创建一个临时节点\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("对于单进程的并发场景，我们可以使用synchronized关键字和Reentrantlock等")]),s._v(" "),a("p",[s._v("对于 分布式场景，我们可以使用分布式锁。")]),s._v(" "),a("h3",{attrs:{id:"创建锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建锁"}},[s._v("#")]),s._v(" 创建锁")]),s._v(" "),a("p",[s._v("多个JVM服务器之间，同时在zookeeper上创建相同一个临时节点，因为临时节点路径是保证唯一，只要谁能创建节点成功，谁就能获取到锁。")]),s._v(" "),a("p",[s._v("没有创建成功节点，只能注册个监听器监听这个锁并进行等待，当释放锁的时候，采用事件通知给其它客户端重新获取锁的资源。")]),s._v(" "),a("p",[s._v("这时候客户端使用事件监听，如果该临时节点被删除的话，重新进入获取锁的步骤。")]),s._v(" "),a("h3",{attrs:{id:"释放锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#释放锁"}},[s._v("#")]),s._v(" 释放锁")]),s._v(" "),a("p",[s._v("Zookeeper使用直接关闭临时节点session会话连接，因为临时节点生命周期与session会话绑定在一块，如果session会话连接关闭，该临时节点也会被删除，这时候客户端使用事件监听，如果该临时节点被删除的话，重新进入到获取锁的步骤。")]),s._v(" "),a("h2",{attrs:{id:"单机环境下的锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单机环境下的锁"}},[s._v("#")]),s._v(" 单机环境下的锁")]),s._v(" "),a("p",[s._v("假设我们现在有一个订单ID生成的工具类")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('/**\n * @author: 陌溪\n * @create: 2020-04-03-22:46\n */\npublic class OrderNumberCreateUtil {\n    private static int num = 0;\n\n    public String getOrderNumber() {\n        return "\\t 生成订单号：" + (++num);\n    }\n\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("然后有一个OrderService服务类")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/**\n * 订单业务逻辑\n *\n * @author: 陌溪\n * @create: 2020-04-03-22:47\n */\npublic class OrderService {\n    private OrderNumberCreateUtil orderNumberCreateUtil = new OrderNumberCreateUtil();\n\n    public String getOrderNumber() {\n        return orderNumberCreateUtil.getOrderNumber();\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("当我们客户端有50个线程进行访问获取订单号的时候")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/**\n * 客户端\n *\n * @author: 陌溪\n * @create: 2020-04-03-22:48\n */\npublic class Client {\n    public static void main(String[] args) {\n        OrderService orderService = new OrderService();\n\n        for (int i = 0; i < 50; i++) {\n            new Thread(() -> {\n                String str = orderService.getOrderNumber();\n                System.out.println(str);\n            }, String.valueOf(i)).start();\n        }\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("p",[s._v("我们能够发现。订单号1出现了两次，这就是我们在并发访问的时候，会出现问题")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("\t 生成订单号：1\n\t 生成订单号：3\n\t 生成订单号：2\n\t 生成订单号：4\n\t 生成订单号：5\n\t 生成订单号：1\n\t 生成订单号：6\n\t 生成订单号：7\n\t 生成订单号：8\n\t 生成订单号：9\n\t 生成订单号：10\n\t 生成订单号：11\n\t 生成订单号：12\n\t 生成订单号：13\n\t 生成订单号：14\n\t 生成订单号：15\n\t 生成订单号：16\n\t 生成订单号：17\n\t 生成订单号：18\n\t 生成订单号：20\n\t 生成订单号：21\n\t 生成订单号：19\n\t 生成订单号：22\n\t 生成订单号：23\n\t 生成订单号：24\n\t 生成订单号：25\n\t 生成订单号：26\n\t 生成订单号：27\n\t 生成订单号：28\n\t 生成订单号：30\n\t 生成订单号：31\n\t 生成订单号：29\n\t 生成订单号：32\n\t 生成订单号：33\n\t 生成订单号：34\n\t 生成订单号：35\n\t 生成订单号：36\n\t 生成订单号：37\n\t 生成订单号：38\n\t 生成订单号：40\n\t 生成订单号：39\n\t 生成订单号：41\n\t 生成订单号：42\n\t 生成订单号：43\n\t 生成订单号：44\n\t 生成订单号：49\n\t 生成订单号：48\n\t 生成订单号：47\n\t 生成订单号：46\n\t 生成订单号：45\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br")])]),a("p",[s._v("解决方案是，在Service下，加锁解决")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    public String getOrderNumber() {\n        Lock lock = new ReentrantLock();\n        lock.lock();\n        try {\n            return orderNumberCreateUtil.getOrderNumber();\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            lock.unlock();\n        }\n       return null;\n    }\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h2",{attrs:{id:"分布式环境下的锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式环境下的锁"}},[s._v("#")]),s._v(" 分布式环境下的锁")]),s._v(" "),a("h3",{attrs:{id:"模板模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#模板模式"}},[s._v("#")]),s._v(" 模板模式")]),s._v(" "),a("h4",{attrs:{id:"概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[s._v("#")]),s._v(" 概念")]),s._v(" "),a("p",[s._v("在模板模式（Template Pattern）设计模式中，用一个抽象类公开定义了执行它的方法的方式、模板。它的子类可以按需要重写方法实现，但调用将以抽象类中定义的方式进行")]),s._v(" "),a("p",[s._v("意图：定义一个操作中的算法的骨架，而将一些步骤延迟到子类中。模板方法使得子类可以不改变一个算法的结构，即可重定义该算法的某些特定步骤：")]),s._v(" "),a("p",[s._v("主要解决：一些方法通用，却在每个子类都重新写了这一方法")]),s._v(" "),a("p",[s._v("何时使用：在一些通用的方法")]),s._v(" "),a("p",[s._v("如何解决：将这些通用算法抽象出来")]),s._v(" "),a("p",[s._v("关键代码：在抽象父类中实现通用方法，其它步骤下放到子类中实现")]),s._v(" "),a("h4",{attrs:{id:"应用实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#应用实例"}},[s._v("#")]),s._v(" 应用实例")]),s._v(" "),a("ul",[a("li",[s._v("西游记里面菩萨定义好了81难，不管是女儿国，或者蜘蛛精，只需要有81劫难，这就是一个顶层的逻辑骨架")]),s._v(" "),a("li",[s._v("spring中对Hibernate的支持，将一些定好的方法封装起来，比如开启事务，获取Session，关闭Session，程序要不需要重复写那些已经规范好的代码，直接丢一个实体就可以保存。")])]),s._v(" "),a("h4",{attrs:{id:"优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优缺点"}},[s._v("#")]),s._v(" 优缺点")]),s._v(" "),a("ul",[a("li",[s._v("封装不变部分，扩展可变部分")]),s._v(" "),a("li",[s._v("提取公共代码，便于维护")]),s._v(" "),a("li",[s._v("行为由父类控制，子类实现")]),s._v(" "),a("li",[s._v("缺点是：每一个不同的实现，都需要一个子类来实现，导致类的个数增加，使得系统变庞大")])]),s._v(" "),a("h4",{attrs:{id:"使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[s._v("#")]),s._v(" 使用场景")]),s._v(" "),a("ul",[a("li",[s._v("有很多子类共有的方法，且逻辑相同")]),s._v(" "),a("li",[s._v("重要的、复杂的方法，可以考虑模板方法")])]),s._v(" "),a("h3",{attrs:{id:"代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码"}},[s._v("#")]),s._v(" 代码")]),s._v(" "),a("p",[s._v("例如，我们首先定义一个zkLock的接口")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/**\n * ZkLock\n *\n * @author: 陌溪\n * @create: 2020-04-03-23:05\n */\npublic interface ZkLock {\n\n    public void zkLock();\n\n    public void zkUnlock();\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("然后在抽象类中继承该接口，同时实现zkLock 和 zkUnLock的方法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('/**\n * ZkLock抽象类\n * 这就是模板设计模式\n *\n * @author: 陌溪\n * @create: 2020-04-03-23:06\n */\npublic abstract class ZkAbstractTemplateLock implements ZkLock{\n\n    @Override\n    public void zkLock() {\n        // 尝试获取锁\n        if(tryLock()) {\n            System.out.println(Thread.currentThread().getName() + "\\t 占用锁成功");\n        } else {\n            // 等待锁\n            waitZkLock();\n            // 重新调用获取锁的方法\n            zkLock();\n        }\n    }\n\n    /**\n     * 定义两个抽象方法，一个是尝试锁，一个是等待锁\n     * @return\n     */\n    public abstract boolean tryLock();\n\n    public abstract void waitZkLock();\n\n    @Override\n    public void zkUnlock() {\n\n    }\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br")])]),a("p",[s._v("同时我们在抽象类里，又定义了两个抽象方法，zkWaitLock()  和 tryLock")]),s._v(" "),a("p",[s._v("最后我们是具体的实现方法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/**\n * 分布式锁\n *\n * @author: 陌溪\n * @create: 2020-04-03-23:21\n */\npublic class ZkDistributedLock extends ZkAbstractTemplateLock{\n    @Override\n    public boolean tryLock() {\n        // 判断节点是否存在，如果存在则返回false，否者返回true\n        return false;\n    }\n\n    @Override\n    public void waitZkLock() throws InterruptedException {\n        // 等待锁的时候，需要加监控，查询这个lock是否释放\n\n        CountDownLatch countDownLatch = new CountDownLatch(1);\n\n        countDownLatch.await();\n\n        // 解除监听\n    }\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("p",[s._v("然后我们通过ZkDistributedLock进行加锁")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("/**\n * 订单业务逻辑\n *\n * @author: 陌溪\n * @create: 2020-04-03-22:47\n */\npublic class OrderService {\n    private OrderNumberCreateUtil orderNumberCreateUtil = new OrderNumberCreateUtil();\n\n    public void getOrderNumber() {\n        ZkLock zkLock = new ZkDistributedLock();\n        zkLock.zkLock();\n        try {\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            zkLock.zkUnlock();\n        }\n        System.out.println(orderNumberCreateUtil.getOrderNumber());\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("p",[s._v("然后在使用多个线程进行操作，而且是在线程里面实例化对象，来进行创建，最终保证每个对象再获取订单的时候，都是唯一的")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("\n/**\n * 客户端\n *\n * @author: 陌溪\n * @create: 2020-04-03-22:48\n */\npublic class Client {\n    public static void main(String[] args) {\n        for (int i = 0; i < 50; i++) {\n            new Thread(() -> {\n                new OrderService().getOrderNumber();\n                System.out.println(str);\n            }, String.valueOf(i)).start();\n        }\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);