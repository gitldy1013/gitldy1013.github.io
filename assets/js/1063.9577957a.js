(window.webpackJsonp=window.webpackJsonp||[]).push([[1063],{1759:function(t,r,e){"use strict";e.r(r);var d=e(5),i=Object(d.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"fiddler-简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fiddler-简介"}},[t._v("#")]),t._v(" Fiddler 简介")]),t._v(" "),e("h2",{attrs:{id:"什么是-fiddler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是-fiddler"}},[t._v("#")]),t._v(" 什么是 Fiddler")]),t._v(" "),e("p",[t._v("Fiddler 是一个 http 协议调试代理工具，它能够记录并检查所有你的电脑和互联网之间的 http 通讯，设置断点，查看所有的进出 Fiddler 的数据。 Fiddler 要比其他的网络调试器要更加简单，因为它不仅仅暴露 http 通讯还提供了一个用户友好的格式。")]),t._v(" "),e("h2",{attrs:{id:"为什么使用-fiddler"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么使用-fiddler"}},[t._v("#")]),t._v(" 为什么使用 Fiddler")]),t._v(" "),e("ul",[e("li",[t._v("FireBug：虽然可以抓包，但是对于分析 http 请求的详细信息，不够强大。模拟 http 请求的功能也不够，且 firebug 常常是需要“无刷新修改”，如果刷新了页面，所有的修改都不会保存。")]),t._v(" "),e("li",[t._v("WireShark：是通用的抓包工具，但是比较庞大，对于只需要抓取 http 请求的应用来说，似乎有些大材小用。")]),t._v(" "),e("li",[t._v("HttpWatch：也是比较常用的 http 抓包工具，但是只支持 IE 和 firefox 浏览器(其他浏览器可能会有相应的插件)，对于想要调试 chrome 浏览器的 http 请求，似乎稍显无力，而 Fiddler 是一个使用本地 127.0.0.1:8888 的 HTTP 代理，任何能够设置 HTTP 代理为 127.0.0.1:8888 的浏览器和应用程序都可以使用 Fiddler。")])]),t._v(" "),e("h2",{attrs:{id:"fiddler-简介-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fiddler-简介-2"}},[t._v("#")]),t._v(" Fiddler 简介")]),t._v(" "),e("p",[t._v("Fiddler 是位于客户端和服务器端的 HTTP 代理，也是目前最常用的 http 抓包工具之一，它能够记录客户端和服务器之间的所有 HTTP 请求，可以针对特定的 HTTP 请求，分析请求数据、设置断点、调试web应用、修改请求的数据，甚至可以修改服务器返回的数据，功能非常强大，是 web 调试的利器。")]),t._v(" "),e("p",[t._v("既然是代理，也就是说：客户端的所有请求都要先经过 Fiddler，然后转发到相应的服务器，反之，服务器端的所有响应，也都会先经过 Fiddler 然后发送到客户端，基于这个原因，Fiddler支持所有可以设置 http 代理为 127.0.0.1:8888 的浏览器和应用程序。使用了 Fiddler 之后，web 客户端和服务器的请求如下所示：")]),t._v(" "),e("p",[e("img",{attrs:{src:"/img/77215620170609120423684397552650.png",alt:""}})])])}),[],!1,null,null,null);r.default=i.exports}}]);