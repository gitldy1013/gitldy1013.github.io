(window.webpackJsonp=window.webpackJsonp||[]).push([[778],{1475:function(t,s,a){"use strict";a.r(s);var n=a(5),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"junit-断言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#junit-断言"}},[t._v("#")]),t._v(" JUnit 断言")]),t._v(" "),a("h2",{attrs:{id:"什么是断言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是断言"}},[t._v("#")]),t._v(" 什么是断言")]),t._v(" "),a("blockquote",[a("p",[t._v("断言是编程术语，表示为一些布尔表达式，程序员相信在程序中的某个特定点该表达式值为真，可以在任何时候启用和禁用断言验证，因此可以在测试时启用断言而在部署时禁用断言。同样，程序投入运行后，最终用户在遇到问题时可以重新启用断言。")])]),t._v(" "),a("p",[t._v("使用断言可以创建更稳定、品质更好且 不易于出错的代码。当需要在一个值为 "),a("code",[t._v("false")]),t._v(" 时中断当前操作的话，可以使用断言。单元测试必须使用断言（Junit/JunitX）。")]),t._v(" "),a("h2",{attrs:{id:"常用断言方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用断言方法"}},[t._v("#")]),t._v(" 常用断言方法")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("断言")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("void assertEquals([String message], expected value, actual value)")]),t._v(" "),a("td",[t._v("断言两个值相等。值可能是类型有 int, short, long, byte, char or java.lang.Object. 第一个参数是一个可选的字符串消息")])]),t._v(" "),a("tr",[a("td",[t._v("void assertTrue([String message], boolean condition)")]),t._v(" "),a("td",[t._v("断言一个条件为真")])]),t._v(" "),a("tr",[a("td",[t._v("void assertFalse([String message],boolean condition)")]),t._v(" "),a("td",[t._v("断言一个条件为假")])]),t._v(" "),a("tr",[a("td",[t._v("void assertNotNull([String message], java.lang.Object object)")]),t._v(" "),a("td",[t._v("断言一个对象不为空(null)")])]),t._v(" "),a("tr",[a("td",[t._v("void assertNull([String message], java.lang.Object object)")]),t._v(" "),a("td",[t._v("断言一个对象为空(null)")])]),t._v(" "),a("tr",[a("td",[t._v("void assertSame([String message], java.lang.Object expected, java.lang.Object actual)")]),t._v(" "),a("td",[t._v("断言，两个对象引用相同的对象")])]),t._v(" "),a("tr",[a("td",[t._v("void assertNotSame([String message], java.lang.Object unexpected, java.lang.Object actual)")]),t._v(" "),a("td",[t._v("断言，两个对象不是引用同一个对象")])]),t._v(" "),a("tr",[a("td",[t._v("void assertArrayEquals([String message], expectedArray, resultArray)")]),t._v(" "),a("td",[t._v("断言预期数组和结果数组相等。数组的类型可能是 int, long, short, char, byte or java.lang.Object.")])])])]),t._v(" "),a("h2",{attrs:{id:"测试断言效果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试断言效果"}},[t._v("#")]),t._v(" 测试断言效果")]),t._v(" "),a("p",[t._v("在之前的单元测试类中创建一个名为 "),a("code",[t._v("testAssert")]),t._v(" 方法来查看断言效果")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('    /**\n     * 测试断言\n     */\n    @Test\n    public void testAssert() {\n        String obj1 = "junit";\n        String obj2 = "junit";\n        String obj3 = "test";\n        String obj4 = "test";\n        String obj5 = null;\n        int var1 = 1;\n        int var2 = 2;\n        int[] arithmetic1 = {1, 2, 3};\n        int[] arithmetic2 = {1, 2, 3};\n    \n        assertEquals(obj1, obj2);\n    \n        assertSame(obj3, obj4);\n    \n        assertNotSame(obj2, obj4);\n    \n        assertNotNull(obj1);\n    \n        assertNull(obj5);\n    \n        assertTrue("为真", var1 == var2);\n    \n        assertArrayEquals(arithmetic1, arithmetic2);\n    }\n')])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);