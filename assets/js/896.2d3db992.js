(window.webpackJsonp=window.webpackJsonp||[]).push([[896],{1593:function(n,e,s){"use strict";s.r(e);var a=s(5),r=Object(a.a)({},(function(){var n=this,e=n.$createElement,s=n._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h1",{attrs:{id:"创建核心代码模块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建核心代码模块"}},[n._v("#")]),n._v(" 创建核心代码模块")]),n._v(" "),s("h2",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[n._v("#")]),n._v(" 概述")]),n._v(" "),s("p",[n._v("本模块依托于 Spring Boot 提供的 Spring Factories 扩展机制，该机制为 Spring Boot Starter 实现的基础，需要额外讲解。因与主线无关此处不做额外扩展。")]),n._v(" "),s("h2",{attrs:{id:"pom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pom"}},[n._v("#")]),n._v(" POM")]),n._v(" "),s("p",[n._v("创建一个名为 "),s("code",[n._v("spring-cloud-alibaba-dubbo-core")]),n._v(" 的模块，其父工程为我们的工程项目 "),s("code",[n._v("spring-cloud-alibaba-dubbo-parent")])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('    <?xml version="1.0" encoding="UTF-8"?>\n    <project xmlns="http://maven.apache.org/POM/4.0.0"\n             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n             xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\n        <modelVersion>4.0.0</modelVersion>\n        <parent>\n            <groupId>com.cmcc</groupId>\n            <artifactId>spring-cloud-alibaba-dubbo-parent</artifactId>\n            <version>1.0.0-SNAPSHOT</version>\n        </parent>\n    \n        <artifactId>spring-cloud-alibaba-dubbo-core</artifactId>\n        <url>http://www.cmcc.com</url>\n    \n        <dependencies>\n            \x3c!-- Spring Cloud --\x3e\n            <dependency>\n                <groupId>org.springframework.cloud</groupId>\n                <artifactId>spring-cloud-starter-openfeign</artifactId>\n                <scope>provided</scope>\n            </dependency>\n    \n            \x3c!-- Dubbo --\x3e\n            <dependency>\n                <groupId>com.alibaba</groupId>\n                <artifactId>dubbo</artifactId>\n                <scope>provided</scope>\n            </dependency>\n            <dependency>\n                <groupId>com.alibaba.boot</groupId>\n                <artifactId>dubbo-spring-boot-starter</artifactId>\n                <scope>provided</scope>\n            </dependency>\n        </dependencies>\n    </project>\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br")])]),s("h2",{attrs:{id:"创建核心工具类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建核心工具类"}},[n._v("#")]),n._v(" 创建核心工具类")]),n._v(" "),s("p",[n._v("在 "),s("code",[n._v("com.alibaba.dubbo.config.spring.beans.factory.annotation")]),n._v(" 包下创建一个名为 "),s("code",[n._v("FeignClientToDubboProviderBeanPostProcessor")]),n._v(" 的工具类")]),n._v(" "),s("p",[s("strong",[n._v("注：包名不可修改，注释中已有详细说明")])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('    package com.alibaba.dubbo.config.spring.beans.factory.annotation;\n    \n    import com.alibaba.dubbo.common.logger.Logger;\n    import com.alibaba.dubbo.common.logger.LoggerFactory;\n    import com.alibaba.dubbo.config.annotation.Service;\n    import com.alibaba.dubbo.config.spring.ServiceBean;\n    import com.alibaba.dubbo.config.spring.context.annotation.DubboClassPathBeanDefinitionScanner;\n    import org.springframework.beans.BeansException;\n    import org.springframework.beans.MutablePropertyValues;\n    import org.springframework.beans.factory.BeanClassLoaderAware;\n    import org.springframework.beans.factory.config.BeanDefinition;\n    import org.springframework.beans.factory.config.BeanDefinitionHolder;\n    import org.springframework.beans.factory.config.ConfigurableListableBeanFactory;\n    import org.springframework.beans.factory.config.RuntimeBeanReference;\n    import org.springframework.beans.factory.config.SingletonBeanRegistry;\n    import org.springframework.beans.factory.support.AbstractBeanDefinition;\n    import org.springframework.beans.factory.support.BeanDefinitionBuilder;\n    import org.springframework.beans.factory.support.BeanDefinitionRegistry;\n    import org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor;\n    import org.springframework.beans.factory.support.BeanNameGenerator;\n    import org.springframework.beans.factory.support.ManagedList;\n    import org.springframework.cloud.openfeign.FeignClient;\n    import org.springframework.context.EnvironmentAware;\n    import org.springframework.context.ResourceLoaderAware;\n    import org.springframework.context.annotation.AnnotationBeanNameGenerator;\n    import org.springframework.context.annotation.AnnotationConfigUtils;\n    import org.springframework.context.annotation.ClassPathBeanDefinitionScanner;\n    import org.springframework.context.annotation.ConfigurationClassPostProcessor;\n    import org.springframework.core.env.Environment;\n    import org.springframework.core.io.ResourceLoader;\n    import org.springframework.core.type.filter.AnnotationTypeFilter;\n    import org.springframework.util.Assert;\n    import org.springframework.util.ClassUtils;\n    import org.springframework.util.CollectionUtils;\n    import org.springframework.util.ObjectUtils;\n    import org.springframework.util.StringUtils;\n    \n    import java.util.Arrays;\n    import java.util.Collection;\n    import java.util.LinkedHashSet;\n    import java.util.List;\n    import java.util.Set;\n    \n    import static com.alibaba.dubbo.config.spring.util.ObjectUtils.of;\n    import static org.springframework.beans.factory.support.BeanDefinitionBuilder.rootBeanDefinition;\n    import static org.springframework.context.annotation.AnnotationConfigUtils.CONFIGURATION_BEAN_NAME_GENERATOR;\n    import static org.springframework.core.annotation.AnnotationUtils.findAnnotation;\n    import static org.springframework.util.ClassUtils.resolveClassName;\n    \n    /**\n     * 不要自定义该类所在包名，本项目依赖的是 Dubbo 2.6.6 版本，截止代码创建日期 2019/3/12 ，Dubbo 的最新版本为 2.7.0\n     * 但由于 2.7.0 版本的 Dubbo 有个配置与 Eureka 的端点检查配置注入时冲突，暂时无法解决（按照官方 issues 做了，也没啥卵用，故降级到当前版本），该 Bug 官方说法是在 2.7.1 版本中修复\n     * 自 Dubbo 2.7.0 版本开始，所有包名更改为 org.apache.dubbo.* ，原 com.alibaba.dubbo.* 包下的代码官方应该会停止维护了\n     * 升级到 Dubbo 2.7.0 以上版本则当前包名也需要同步修改为 org.apache.dubbo.*\n     * <p>Title: FeignClientToDubboProviderBeanPostProcessor</p>\n     * <p>Description: </p>\n     *\n     * @author cmcc\n     * @version 1.0.0\n     * @date 2019/3/12 12:13\n     */\n    public class FeignClientToDubboProviderBeanPostProcessor implements BeanDefinitionRegistryPostProcessor, EnvironmentAware,\n            ResourceLoaderAware, BeanClassLoaderAware {\n    \n        private static final String SEPARATOR = ":";\n    \n        private final Logger logger = LoggerFactory.getLogger(getClass());\n    \n        private final Set<String> packagesToScan;\n    \n        private Environment environment;\n    \n        private ResourceLoader resourceLoader;\n    \n        private ClassLoader classLoader;\n    \n        private Service defaultService;\n    \n        public FeignClientToDubboProviderBeanPostProcessor(String... packagesToScan) {\n            this(Arrays.asList(packagesToScan));\n        }\n    \n        public FeignClientToDubboProviderBeanPostProcessor(Collection<String> packagesToScan) {\n            this(new LinkedHashSet<String>(packagesToScan));\n        }\n    \n        public FeignClientToDubboProviderBeanPostProcessor(Set<String> packagesToScan) {\n            this.packagesToScan = packagesToScan;\n            @Service\n            final class DefaultServiceClass {\n            }\n            ;\n            this.defaultService = DefaultServiceClass.class.getAnnotation(Service.class);\n        }\n    \n        @Override\n        public void postProcessBeanDefinitionRegistry(BeanDefinitionRegistry registry) throws BeansException {\n    \n            Set<String> resolvedPackagesToScan = resolvePackagesToScan(packagesToScan);\n    \n            if (!CollectionUtils.isEmpty(resolvedPackagesToScan)) {\n                registerServiceBeans(resolvedPackagesToScan, registry);\n            } else {\n                if (logger.isWarnEnabled()) {\n                    logger.warn("packagesToScan is empty , ServiceBean registry will be ignored!");\n                }\n            }\n    \n        }\n    \n    \n        /**\n         * Registers Beans whose classes was annotated {@link FeignClient}\n         *\n         * @param packagesToScan The base packages to scan\n         * @param registry       {@link BeanDefinitionRegistry}\n         */\n        private void registerServiceBeans(Set<String> packagesToScan, BeanDefinitionRegistry registry) {\n    \n            DubboClassPathBeanDefinitionScanner scanner =\n                    new DubboClassPathBeanDefinitionScanner(registry, environment, resourceLoader);\n    \n            BeanNameGenerator beanNameGenerator = resolveBeanNameGenerator(registry);\n    \n            scanner.setBeanNameGenerator(beanNameGenerator);\n    \n            scanner.addIncludeFilter(new AnnotationTypeFilter(FeignClient.class, true, true));\n    \n            for (String packageToScan : packagesToScan) {\n    \n                // Registers @Service Bean first\n                scanner.scan(packageToScan);\n    \n                // Finds all BeanDefinitionHolders of @Service whether @ComponentScan scans or not.\n                Set<BeanDefinitionHolder> beanDefinitionHolders =\n                        findServiceBeanDefinitionHolders(scanner, packageToScan, registry, beanNameGenerator);\n    \n                if (!CollectionUtils.isEmpty(beanDefinitionHolders)) {\n    \n                    for (BeanDefinitionHolder beanDefinitionHolder : beanDefinitionHolders) {\n                        registerServiceBean(beanDefinitionHolder, registry, scanner);\n                    }\n    \n                    if (logger.isInfoEnabled()) {\n                        logger.info(beanDefinitionHolders.size() + " annotated Dubbo\'s @Service Components { " +\n                                beanDefinitionHolders +\n                                " } were scanned under package[" + packageToScan + "]");\n                    }\n    \n                } else {\n    \n                    if (logger.isWarnEnabled()) {\n                        logger.warn("No Spring Bean annotating Dubbo\'s @Service was found under package["\n                                + packageToScan + "]");\n                    }\n    \n                }\n    \n            }\n    \n        }\n    \n        /**\n         * It\'d better to use BeanNameGenerator instance that should reference\n         * {@link ConfigurationClassPostProcessor#componentScanBeanNameGenerator},\n         * thus it maybe a potential problem on bean name generation.\n         *\n         * @param registry {@link BeanDefinitionRegistry}\n         * @return {@link BeanNameGenerator} instance\n         * @see SingletonBeanRegistry\n         * @see AnnotationConfigUtils#CONFIGURATION_BEAN_NAME_GENERATOR\n         * @see ConfigurationClassPostProcessor#processConfigBeanDefinitions\n         * @since 2.5.8\n         */\n        private BeanNameGenerator resolveBeanNameGenerator(BeanDefinitionRegistry registry) {\n    \n            BeanNameGenerator beanNameGenerator = null;\n    \n            if (registry instanceof SingletonBeanRegistry) {\n                SingletonBeanRegistry singletonBeanRegistry = SingletonBeanRegistry.class.cast(registry);\n                beanNameGenerator = (BeanNameGenerator) singletonBeanRegistry.getSingleton(CONFIGURATION_BEAN_NAME_GENERATOR);\n            }\n    \n            if (beanNameGenerator == null) {\n    \n                if (logger.isInfoEnabled()) {\n    \n                    logger.info("BeanNameGenerator bean can\'t be found in BeanFactory with name ["\n                            + CONFIGURATION_BEAN_NAME_GENERATOR + "]");\n                    logger.info("BeanNameGenerator will be a instance of " +\n                            AnnotationBeanNameGenerator.class.getName() +\n                            " , it maybe a potential problem on bean name generation.");\n                }\n    \n                beanNameGenerator = new AnnotationBeanNameGenerator();\n    \n            }\n    \n            return beanNameGenerator;\n    \n        }\n    \n        /**\n         * Finds a {@link Set} of {@link BeanDefinitionHolder BeanDefinitionHolders} whose bean type annotated\n         * {@link Service} Annotation.\n         *\n         * @param scanner       {@link ClassPathBeanDefinitionScanner}\n         * @param packageToScan pachage to scan\n         * @param registry      {@link BeanDefinitionRegistry}\n         * @return non-null\n         * @since 2.5.8\n         */\n        private Set<BeanDefinitionHolder> findServiceBeanDefinitionHolders(\n                ClassPathBeanDefinitionScanner scanner, String packageToScan, BeanDefinitionRegistry registry,\n                BeanNameGenerator beanNameGenerator) {\n    \n            Set<BeanDefinition> beanDefinitions = scanner.findCandidateComponents(packageToScan);\n    \n            Set<BeanDefinitionHolder> beanDefinitionHolders = new LinkedHashSet<BeanDefinitionHolder>(beanDefinitions.size());\n    \n            for (BeanDefinition beanDefinition : beanDefinitions) {\n    \n                String beanName = beanNameGenerator.generateBeanName(beanDefinition, registry);\n                BeanDefinitionHolder beanDefinitionHolder = new BeanDefinitionHolder(beanDefinition, beanName);\n                beanDefinitionHolders.add(beanDefinitionHolder);\n    \n            }\n    \n            return beanDefinitionHolders;\n    \n        }\n    \n        /**\n         * Registers {@link ServiceBean} from new annotated {@link Service} {@link BeanDefinition}\n         *\n         * @param beanDefinitionHolder\n         * @param registry\n         * @param scanner\n         * @see ServiceBean\n         * @see BeanDefinition\n         */\n        private void registerServiceBean(BeanDefinitionHolder beanDefinitionHolder, BeanDefinitionRegistry registry,\n                                         DubboClassPathBeanDefinitionScanner scanner) {\n    \n            Class<?> beanClass = resolveClass(beanDefinitionHolder);\n    \n            Service service = findAnnotation(beanClass, Service.class);\n            if (null == service) {\n                service = this.defaultService;\n            }\n    \n            Class<?> interfaceClass = resolveServiceInterfaceClass(beanClass, service);\n    \n            String annotatedServiceBeanName = beanDefinitionHolder.getBeanName();\n    \n            AbstractBeanDefinition serviceBeanDefinition =\n                    buildServiceBeanDefinition(service, interfaceClass, annotatedServiceBeanName);\n    \n            // ServiceBean Bean name\n            String beanName = generateServiceBeanName(service, interfaceClass, annotatedServiceBeanName);\n    \n            if (scanner.checkCandidate(beanName, serviceBeanDefinition)) { // check duplicated candidate bean\n                registry.registerBeanDefinition(beanName, serviceBeanDefinition);\n    \n                if (logger.isInfoEnabled()) {\n                    logger.warn("The BeanDefinition[" + serviceBeanDefinition +\n                            "] of ServiceBean has been registered with name : " + beanName);\n                }\n    \n            } else {\n    \n                if (logger.isWarnEnabled()) {\n                    logger.warn("The Duplicated BeanDefinition[" + serviceBeanDefinition +\n                            "] of ServiceBean[ bean name : " + beanName +\n                            "] was be found , Did @DubboComponentScan scan to same package in many times?");\n                }\n    \n            }\n    \n        }\n    \n        /**\n         * Generates the bean name of {@link ServiceBean}\n         *\n         * @param service\n         * @param interfaceClass           the class of interface annotated {@link Service}\n         * @param annotatedServiceBeanName the bean name of annotated {@link Service}\n         * @return ServiceBean@interfaceClassName#annotatedServiceBeanName\n         * @since 2.5.9\n         */\n        private String generateServiceBeanName(Service service, Class<?> interfaceClass, String annotatedServiceBeanName) {\n    \n            StringBuilder beanNameBuilder = new StringBuilder(ServiceBean.class.getSimpleName());\n    \n            beanNameBuilder.append(SEPARATOR).append(annotatedServiceBeanName);\n    \n            String interfaceClassName = interfaceClass.getName();\n    \n            beanNameBuilder.append(SEPARATOR).append(interfaceClassName);\n    \n            String version = service.version();\n    \n            if (StringUtils.hasText(version)) {\n                beanNameBuilder.append(SEPARATOR).append(version);\n            }\n    \n            String group = service.group();\n    \n            if (StringUtils.hasText(group)) {\n                beanNameBuilder.append(SEPARATOR).append(group);\n            }\n    \n            return beanNameBuilder.toString();\n    \n        }\n    \n        private Class<?> resolveServiceInterfaceClass(Class<?> annotatedServiceBeanClass, Service service) {\n    \n            Class<?> interfaceClass = service.interfaceClass();\n    \n            if (void.class.equals(interfaceClass)) {\n    \n                interfaceClass = null;\n    \n                String interfaceClassName = service.interfaceName();\n    \n                if (StringUtils.hasText(interfaceClassName)) {\n                    if (ClassUtils.isPresent(interfaceClassName, classLoader)) {\n                        interfaceClass = resolveClassName(interfaceClassName, classLoader);\n                    }\n                }\n    \n            }\n    \n            if (interfaceClass == null) {\n    \n                Class<?>[] allInterfaces = annotatedServiceBeanClass.getInterfaces();\n    \n                if (allInterfaces.length > 0) {\n                    interfaceClass = allInterfaces[0];\n                }\n    \n            }\n    \n            Assert.notNull(interfaceClass,\n                    "@Service interfaceClass() or interfaceName() or interface class must be present!");\n    \n            Assert.isTrue(interfaceClass.isInterface(),\n                    "The type that was annotated @Service is not an interface!");\n    \n            return interfaceClass;\n        }\n    \n        private Class<?> resolveClass(BeanDefinitionHolder beanDefinitionHolder) {\n    \n            BeanDefinition beanDefinition = beanDefinitionHolder.getBeanDefinition();\n    \n            return resolveClass(beanDefinition);\n    \n        }\n    \n        private Class<?> resolveClass(BeanDefinition beanDefinition) {\n    \n            String beanClassName = beanDefinition.getBeanClassName();\n    \n            return resolveClassName(beanClassName, classLoader);\n    \n        }\n    \n        private Set<String> resolvePackagesToScan(Set<String> packagesToScan) {\n            Set<String> resolvedPackagesToScan = new LinkedHashSet<String>(packagesToScan.size());\n            for (String packageToScan : packagesToScan) {\n                if (StringUtils.hasText(packageToScan)) {\n                    String resolvedPackageToScan = environment.resolvePlaceholders(packageToScan.trim());\n                    resolvedPackagesToScan.add(resolvedPackageToScan);\n                }\n            }\n            return resolvedPackagesToScan;\n        }\n    \n        private AbstractBeanDefinition buildServiceBeanDefinition(Service service, Class<?> interfaceClass,\n                                                                  String annotatedServiceBeanName) {\n    \n            BeanDefinitionBuilder builder = rootBeanDefinition(ServiceBean.class);\n    \n            AbstractBeanDefinition beanDefinition = builder.getBeanDefinition();\n    \n            MutablePropertyValues propertyValues = beanDefinition.getPropertyValues();\n    \n            String[] ignoreAttributeNames = of("provider", "monitor", "application", "module", "registry", "protocol", "interface");\n    \n            propertyValues.addPropertyValues(new AnnotationPropertyValuesAdapter(service, environment, ignoreAttributeNames));\n    \n            // References "ref" property to annotated-@Service Bean\n            addPropertyReference(builder, "ref", annotatedServiceBeanName);\n            // Set interface\n            builder.addPropertyValue("interface", interfaceClass.getName());\n    \n            /**\n             * Add {@link com.alibaba.dubbo.config.ProviderConfig} Bean reference\n             */\n            String providerConfigBeanName = service.provider();\n            if (StringUtils.hasText(providerConfigBeanName)) {\n                addPropertyReference(builder, "provider", providerConfigBeanName);\n            }\n    \n            /**\n             * Add {@link com.alibaba.dubbo.config.MonitorConfig} Bean reference\n             */\n            String monitorConfigBeanName = service.monitor();\n            if (StringUtils.hasText(monitorConfigBeanName)) {\n                addPropertyReference(builder, "monitor", monitorConfigBeanName);\n            }\n    \n            /**\n             * Add {@link com.alibaba.dubbo.config.ApplicationConfig} Bean reference\n             */\n            String applicationConfigBeanName = service.application();\n            if (StringUtils.hasText(applicationConfigBeanName)) {\n                addPropertyReference(builder, "application", applicationConfigBeanName);\n            }\n    \n            /**\n             * Add {@link com.alibaba.dubbo.config.ModuleConfig} Bean reference\n             */\n            String moduleConfigBeanName = service.module();\n            if (StringUtils.hasText(moduleConfigBeanName)) {\n                addPropertyReference(builder, "module", moduleConfigBeanName);\n            }\n    \n    \n            /**\n             * Add {@link com.alibaba.dubbo.config.RegistryConfig} Bean reference\n             */\n            String[] registryConfigBeanNames = service.registry();\n    \n            List<RuntimeBeanReference> registryRuntimeBeanReferences = toRuntimeBeanReferences(registryConfigBeanNames);\n    \n            if (!registryRuntimeBeanReferences.isEmpty()) {\n                builder.addPropertyValue("registries", registryRuntimeBeanReferences);\n            }\n    \n            /**\n             * Add {@link com.alibaba.dubbo.config.ProtocolConfig} Bean reference\n             */\n            String[] protocolConfigBeanNames = service.protocol();\n    \n            List<RuntimeBeanReference> protocolRuntimeBeanReferences = toRuntimeBeanReferences(protocolConfigBeanNames);\n    \n            if (!protocolRuntimeBeanReferences.isEmpty()) {\n                builder.addPropertyValue("protocols", protocolRuntimeBeanReferences);\n            }\n    \n            return builder.getBeanDefinition();\n    \n        }\n    \n    \n        private ManagedList<RuntimeBeanReference> toRuntimeBeanReferences(String... beanNames) {\n    \n            ManagedList<RuntimeBeanReference> runtimeBeanReferences = new ManagedList<RuntimeBeanReference>();\n    \n            if (!ObjectUtils.isEmpty(beanNames)) {\n    \n                for (String beanName : beanNames) {\n    \n                    String resolvedBeanName = environment.resolvePlaceholders(beanName);\n    \n                    runtimeBeanReferences.add(new RuntimeBeanReference(resolvedBeanName));\n                }\n    \n            }\n    \n            return runtimeBeanReferences;\n    \n        }\n    \n        private void addPropertyReference(BeanDefinitionBuilder builder, String propertyName, String beanName) {\n            String resolvedBeanName = environment.resolvePlaceholders(beanName);\n            builder.addPropertyReference(propertyName, resolvedBeanName);\n        }\n    \n    \n        @Override\n        public void postProcessBeanFactory(ConfigurableListableBeanFactory beanFactory) throws BeansException {\n    \n        }\n    \n        @Override\n        public void setEnvironment(Environment environment) {\n            this.environment = environment;\n        }\n    \n        @Override\n        public void setResourceLoader(ResourceLoader resourceLoader) {\n            this.resourceLoader = resourceLoader;\n        }\n    \n        @Override\n        public void setBeanClassLoader(ClassLoader classLoader) {\n            this.classLoader = classLoader;\n        }\n    \n    }\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br"),s("span",{staticClass:"line-number"},[n._v("46")]),s("br"),s("span",{staticClass:"line-number"},[n._v("47")]),s("br"),s("span",{staticClass:"line-number"},[n._v("48")]),s("br"),s("span",{staticClass:"line-number"},[n._v("49")]),s("br"),s("span",{staticClass:"line-number"},[n._v("50")]),s("br"),s("span",{staticClass:"line-number"},[n._v("51")]),s("br"),s("span",{staticClass:"line-number"},[n._v("52")]),s("br"),s("span",{staticClass:"line-number"},[n._v("53")]),s("br"),s("span",{staticClass:"line-number"},[n._v("54")]),s("br"),s("span",{staticClass:"line-number"},[n._v("55")]),s("br"),s("span",{staticClass:"line-number"},[n._v("56")]),s("br"),s("span",{staticClass:"line-number"},[n._v("57")]),s("br"),s("span",{staticClass:"line-number"},[n._v("58")]),s("br"),s("span",{staticClass:"line-number"},[n._v("59")]),s("br"),s("span",{staticClass:"line-number"},[n._v("60")]),s("br"),s("span",{staticClass:"line-number"},[n._v("61")]),s("br"),s("span",{staticClass:"line-number"},[n._v("62")]),s("br"),s("span",{staticClass:"line-number"},[n._v("63")]),s("br"),s("span",{staticClass:"line-number"},[n._v("64")]),s("br"),s("span",{staticClass:"line-number"},[n._v("65")]),s("br"),s("span",{staticClass:"line-number"},[n._v("66")]),s("br"),s("span",{staticClass:"line-number"},[n._v("67")]),s("br"),s("span",{staticClass:"line-number"},[n._v("68")]),s("br"),s("span",{staticClass:"line-number"},[n._v("69")]),s("br"),s("span",{staticClass:"line-number"},[n._v("70")]),s("br"),s("span",{staticClass:"line-number"},[n._v("71")]),s("br"),s("span",{staticClass:"line-number"},[n._v("72")]),s("br"),s("span",{staticClass:"line-number"},[n._v("73")]),s("br"),s("span",{staticClass:"line-number"},[n._v("74")]),s("br"),s("span",{staticClass:"line-number"},[n._v("75")]),s("br"),s("span",{staticClass:"line-number"},[n._v("76")]),s("br"),s("span",{staticClass:"line-number"},[n._v("77")]),s("br"),s("span",{staticClass:"line-number"},[n._v("78")]),s("br"),s("span",{staticClass:"line-number"},[n._v("79")]),s("br"),s("span",{staticClass:"line-number"},[n._v("80")]),s("br"),s("span",{staticClass:"line-number"},[n._v("81")]),s("br"),s("span",{staticClass:"line-number"},[n._v("82")]),s("br"),s("span",{staticClass:"line-number"},[n._v("83")]),s("br"),s("span",{staticClass:"line-number"},[n._v("84")]),s("br"),s("span",{staticClass:"line-number"},[n._v("85")]),s("br"),s("span",{staticClass:"line-number"},[n._v("86")]),s("br"),s("span",{staticClass:"line-number"},[n._v("87")]),s("br"),s("span",{staticClass:"line-number"},[n._v("88")]),s("br"),s("span",{staticClass:"line-number"},[n._v("89")]),s("br"),s("span",{staticClass:"line-number"},[n._v("90")]),s("br"),s("span",{staticClass:"line-number"},[n._v("91")]),s("br"),s("span",{staticClass:"line-number"},[n._v("92")]),s("br"),s("span",{staticClass:"line-number"},[n._v("93")]),s("br"),s("span",{staticClass:"line-number"},[n._v("94")]),s("br"),s("span",{staticClass:"line-number"},[n._v("95")]),s("br"),s("span",{staticClass:"line-number"},[n._v("96")]),s("br"),s("span",{staticClass:"line-number"},[n._v("97")]),s("br"),s("span",{staticClass:"line-number"},[n._v("98")]),s("br"),s("span",{staticClass:"line-number"},[n._v("99")]),s("br"),s("span",{staticClass:"line-number"},[n._v("100")]),s("br"),s("span",{staticClass:"line-number"},[n._v("101")]),s("br"),s("span",{staticClass:"line-number"},[n._v("102")]),s("br"),s("span",{staticClass:"line-number"},[n._v("103")]),s("br"),s("span",{staticClass:"line-number"},[n._v("104")]),s("br"),s("span",{staticClass:"line-number"},[n._v("105")]),s("br"),s("span",{staticClass:"line-number"},[n._v("106")]),s("br"),s("span",{staticClass:"line-number"},[n._v("107")]),s("br"),s("span",{staticClass:"line-number"},[n._v("108")]),s("br"),s("span",{staticClass:"line-number"},[n._v("109")]),s("br"),s("span",{staticClass:"line-number"},[n._v("110")]),s("br"),s("span",{staticClass:"line-number"},[n._v("111")]),s("br"),s("span",{staticClass:"line-number"},[n._v("112")]),s("br"),s("span",{staticClass:"line-number"},[n._v("113")]),s("br"),s("span",{staticClass:"line-number"},[n._v("114")]),s("br"),s("span",{staticClass:"line-number"},[n._v("115")]),s("br"),s("span",{staticClass:"line-number"},[n._v("116")]),s("br"),s("span",{staticClass:"line-number"},[n._v("117")]),s("br"),s("span",{staticClass:"line-number"},[n._v("118")]),s("br"),s("span",{staticClass:"line-number"},[n._v("119")]),s("br"),s("span",{staticClass:"line-number"},[n._v("120")]),s("br"),s("span",{staticClass:"line-number"},[n._v("121")]),s("br"),s("span",{staticClass:"line-number"},[n._v("122")]),s("br"),s("span",{staticClass:"line-number"},[n._v("123")]),s("br"),s("span",{staticClass:"line-number"},[n._v("124")]),s("br"),s("span",{staticClass:"line-number"},[n._v("125")]),s("br"),s("span",{staticClass:"line-number"},[n._v("126")]),s("br"),s("span",{staticClass:"line-number"},[n._v("127")]),s("br"),s("span",{staticClass:"line-number"},[n._v("128")]),s("br"),s("span",{staticClass:"line-number"},[n._v("129")]),s("br"),s("span",{staticClass:"line-number"},[n._v("130")]),s("br"),s("span",{staticClass:"line-number"},[n._v("131")]),s("br"),s("span",{staticClass:"line-number"},[n._v("132")]),s("br"),s("span",{staticClass:"line-number"},[n._v("133")]),s("br"),s("span",{staticClass:"line-number"},[n._v("134")]),s("br"),s("span",{staticClass:"line-number"},[n._v("135")]),s("br"),s("span",{staticClass:"line-number"},[n._v("136")]),s("br"),s("span",{staticClass:"line-number"},[n._v("137")]),s("br"),s("span",{staticClass:"line-number"},[n._v("138")]),s("br"),s("span",{staticClass:"line-number"},[n._v("139")]),s("br"),s("span",{staticClass:"line-number"},[n._v("140")]),s("br"),s("span",{staticClass:"line-number"},[n._v("141")]),s("br"),s("span",{staticClass:"line-number"},[n._v("142")]),s("br"),s("span",{staticClass:"line-number"},[n._v("143")]),s("br"),s("span",{staticClass:"line-number"},[n._v("144")]),s("br"),s("span",{staticClass:"line-number"},[n._v("145")]),s("br"),s("span",{staticClass:"line-number"},[n._v("146")]),s("br"),s("span",{staticClass:"line-number"},[n._v("147")]),s("br"),s("span",{staticClass:"line-number"},[n._v("148")]),s("br"),s("span",{staticClass:"line-number"},[n._v("149")]),s("br"),s("span",{staticClass:"line-number"},[n._v("150")]),s("br"),s("span",{staticClass:"line-number"},[n._v("151")]),s("br"),s("span",{staticClass:"line-number"},[n._v("152")]),s("br"),s("span",{staticClass:"line-number"},[n._v("153")]),s("br"),s("span",{staticClass:"line-number"},[n._v("154")]),s("br"),s("span",{staticClass:"line-number"},[n._v("155")]),s("br"),s("span",{staticClass:"line-number"},[n._v("156")]),s("br"),s("span",{staticClass:"line-number"},[n._v("157")]),s("br"),s("span",{staticClass:"line-number"},[n._v("158")]),s("br"),s("span",{staticClass:"line-number"},[n._v("159")]),s("br"),s("span",{staticClass:"line-number"},[n._v("160")]),s("br"),s("span",{staticClass:"line-number"},[n._v("161")]),s("br"),s("span",{staticClass:"line-number"},[n._v("162")]),s("br"),s("span",{staticClass:"line-number"},[n._v("163")]),s("br"),s("span",{staticClass:"line-number"},[n._v("164")]),s("br"),s("span",{staticClass:"line-number"},[n._v("165")]),s("br"),s("span",{staticClass:"line-number"},[n._v("166")]),s("br"),s("span",{staticClass:"line-number"},[n._v("167")]),s("br"),s("span",{staticClass:"line-number"},[n._v("168")]),s("br"),s("span",{staticClass:"line-number"},[n._v("169")]),s("br"),s("span",{staticClass:"line-number"},[n._v("170")]),s("br"),s("span",{staticClass:"line-number"},[n._v("171")]),s("br"),s("span",{staticClass:"line-number"},[n._v("172")]),s("br"),s("span",{staticClass:"line-number"},[n._v("173")]),s("br"),s("span",{staticClass:"line-number"},[n._v("174")]),s("br"),s("span",{staticClass:"line-number"},[n._v("175")]),s("br"),s("span",{staticClass:"line-number"},[n._v("176")]),s("br"),s("span",{staticClass:"line-number"},[n._v("177")]),s("br"),s("span",{staticClass:"line-number"},[n._v("178")]),s("br"),s("span",{staticClass:"line-number"},[n._v("179")]),s("br"),s("span",{staticClass:"line-number"},[n._v("180")]),s("br"),s("span",{staticClass:"line-number"},[n._v("181")]),s("br"),s("span",{staticClass:"line-number"},[n._v("182")]),s("br"),s("span",{staticClass:"line-number"},[n._v("183")]),s("br"),s("span",{staticClass:"line-number"},[n._v("184")]),s("br"),s("span",{staticClass:"line-number"},[n._v("185")]),s("br"),s("span",{staticClass:"line-number"},[n._v("186")]),s("br"),s("span",{staticClass:"line-number"},[n._v("187")]),s("br"),s("span",{staticClass:"line-number"},[n._v("188")]),s("br"),s("span",{staticClass:"line-number"},[n._v("189")]),s("br"),s("span",{staticClass:"line-number"},[n._v("190")]),s("br"),s("span",{staticClass:"line-number"},[n._v("191")]),s("br"),s("span",{staticClass:"line-number"},[n._v("192")]),s("br"),s("span",{staticClass:"line-number"},[n._v("193")]),s("br"),s("span",{staticClass:"line-number"},[n._v("194")]),s("br"),s("span",{staticClass:"line-number"},[n._v("195")]),s("br"),s("span",{staticClass:"line-number"},[n._v("196")]),s("br"),s("span",{staticClass:"line-number"},[n._v("197")]),s("br"),s("span",{staticClass:"line-number"},[n._v("198")]),s("br"),s("span",{staticClass:"line-number"},[n._v("199")]),s("br"),s("span",{staticClass:"line-number"},[n._v("200")]),s("br"),s("span",{staticClass:"line-number"},[n._v("201")]),s("br"),s("span",{staticClass:"line-number"},[n._v("202")]),s("br"),s("span",{staticClass:"line-number"},[n._v("203")]),s("br"),s("span",{staticClass:"line-number"},[n._v("204")]),s("br"),s("span",{staticClass:"line-number"},[n._v("205")]),s("br"),s("span",{staticClass:"line-number"},[n._v("206")]),s("br"),s("span",{staticClass:"line-number"},[n._v("207")]),s("br"),s("span",{staticClass:"line-number"},[n._v("208")]),s("br"),s("span",{staticClass:"line-number"},[n._v("209")]),s("br"),s("span",{staticClass:"line-number"},[n._v("210")]),s("br"),s("span",{staticClass:"line-number"},[n._v("211")]),s("br"),s("span",{staticClass:"line-number"},[n._v("212")]),s("br"),s("span",{staticClass:"line-number"},[n._v("213")]),s("br"),s("span",{staticClass:"line-number"},[n._v("214")]),s("br"),s("span",{staticClass:"line-number"},[n._v("215")]),s("br"),s("span",{staticClass:"line-number"},[n._v("216")]),s("br"),s("span",{staticClass:"line-number"},[n._v("217")]),s("br"),s("span",{staticClass:"line-number"},[n._v("218")]),s("br"),s("span",{staticClass:"line-number"},[n._v("219")]),s("br"),s("span",{staticClass:"line-number"},[n._v("220")]),s("br"),s("span",{staticClass:"line-number"},[n._v("221")]),s("br"),s("span",{staticClass:"line-number"},[n._v("222")]),s("br"),s("span",{staticClass:"line-number"},[n._v("223")]),s("br"),s("span",{staticClass:"line-number"},[n._v("224")]),s("br"),s("span",{staticClass:"line-number"},[n._v("225")]),s("br"),s("span",{staticClass:"line-number"},[n._v("226")]),s("br"),s("span",{staticClass:"line-number"},[n._v("227")]),s("br"),s("span",{staticClass:"line-number"},[n._v("228")]),s("br"),s("span",{staticClass:"line-number"},[n._v("229")]),s("br"),s("span",{staticClass:"line-number"},[n._v("230")]),s("br"),s("span",{staticClass:"line-number"},[n._v("231")]),s("br"),s("span",{staticClass:"line-number"},[n._v("232")]),s("br"),s("span",{staticClass:"line-number"},[n._v("233")]),s("br"),s("span",{staticClass:"line-number"},[n._v("234")]),s("br"),s("span",{staticClass:"line-number"},[n._v("235")]),s("br"),s("span",{staticClass:"line-number"},[n._v("236")]),s("br"),s("span",{staticClass:"line-number"},[n._v("237")]),s("br"),s("span",{staticClass:"line-number"},[n._v("238")]),s("br"),s("span",{staticClass:"line-number"},[n._v("239")]),s("br"),s("span",{staticClass:"line-number"},[n._v("240")]),s("br"),s("span",{staticClass:"line-number"},[n._v("241")]),s("br"),s("span",{staticClass:"line-number"},[n._v("242")]),s("br"),s("span",{staticClass:"line-number"},[n._v("243")]),s("br"),s("span",{staticClass:"line-number"},[n._v("244")]),s("br"),s("span",{staticClass:"line-number"},[n._v("245")]),s("br"),s("span",{staticClass:"line-number"},[n._v("246")]),s("br"),s("span",{staticClass:"line-number"},[n._v("247")]),s("br"),s("span",{staticClass:"line-number"},[n._v("248")]),s("br"),s("span",{staticClass:"line-number"},[n._v("249")]),s("br"),s("span",{staticClass:"line-number"},[n._v("250")]),s("br"),s("span",{staticClass:"line-number"},[n._v("251")]),s("br"),s("span",{staticClass:"line-number"},[n._v("252")]),s("br"),s("span",{staticClass:"line-number"},[n._v("253")]),s("br"),s("span",{staticClass:"line-number"},[n._v("254")]),s("br"),s("span",{staticClass:"line-number"},[n._v("255")]),s("br"),s("span",{staticClass:"line-number"},[n._v("256")]),s("br"),s("span",{staticClass:"line-number"},[n._v("257")]),s("br"),s("span",{staticClass:"line-number"},[n._v("258")]),s("br"),s("span",{staticClass:"line-number"},[n._v("259")]),s("br"),s("span",{staticClass:"line-number"},[n._v("260")]),s("br"),s("span",{staticClass:"line-number"},[n._v("261")]),s("br"),s("span",{staticClass:"line-number"},[n._v("262")]),s("br"),s("span",{staticClass:"line-number"},[n._v("263")]),s("br"),s("span",{staticClass:"line-number"},[n._v("264")]),s("br"),s("span",{staticClass:"line-number"},[n._v("265")]),s("br"),s("span",{staticClass:"line-number"},[n._v("266")]),s("br"),s("span",{staticClass:"line-number"},[n._v("267")]),s("br"),s("span",{staticClass:"line-number"},[n._v("268")]),s("br"),s("span",{staticClass:"line-number"},[n._v("269")]),s("br"),s("span",{staticClass:"line-number"},[n._v("270")]),s("br"),s("span",{staticClass:"line-number"},[n._v("271")]),s("br"),s("span",{staticClass:"line-number"},[n._v("272")]),s("br"),s("span",{staticClass:"line-number"},[n._v("273")]),s("br"),s("span",{staticClass:"line-number"},[n._v("274")]),s("br"),s("span",{staticClass:"line-number"},[n._v("275")]),s("br"),s("span",{staticClass:"line-number"},[n._v("276")]),s("br"),s("span",{staticClass:"line-number"},[n._v("277")]),s("br"),s("span",{staticClass:"line-number"},[n._v("278")]),s("br"),s("span",{staticClass:"line-number"},[n._v("279")]),s("br"),s("span",{staticClass:"line-number"},[n._v("280")]),s("br"),s("span",{staticClass:"line-number"},[n._v("281")]),s("br"),s("span",{staticClass:"line-number"},[n._v("282")]),s("br"),s("span",{staticClass:"line-number"},[n._v("283")]),s("br"),s("span",{staticClass:"line-number"},[n._v("284")]),s("br"),s("span",{staticClass:"line-number"},[n._v("285")]),s("br"),s("span",{staticClass:"line-number"},[n._v("286")]),s("br"),s("span",{staticClass:"line-number"},[n._v("287")]),s("br"),s("span",{staticClass:"line-number"},[n._v("288")]),s("br"),s("span",{staticClass:"line-number"},[n._v("289")]),s("br"),s("span",{staticClass:"line-number"},[n._v("290")]),s("br"),s("span",{staticClass:"line-number"},[n._v("291")]),s("br"),s("span",{staticClass:"line-number"},[n._v("292")]),s("br"),s("span",{staticClass:"line-number"},[n._v("293")]),s("br"),s("span",{staticClass:"line-number"},[n._v("294")]),s("br"),s("span",{staticClass:"line-number"},[n._v("295")]),s("br"),s("span",{staticClass:"line-number"},[n._v("296")]),s("br"),s("span",{staticClass:"line-number"},[n._v("297")]),s("br"),s("span",{staticClass:"line-number"},[n._v("298")]),s("br"),s("span",{staticClass:"line-number"},[n._v("299")]),s("br"),s("span",{staticClass:"line-number"},[n._v("300")]),s("br"),s("span",{staticClass:"line-number"},[n._v("301")]),s("br"),s("span",{staticClass:"line-number"},[n._v("302")]),s("br"),s("span",{staticClass:"line-number"},[n._v("303")]),s("br"),s("span",{staticClass:"line-number"},[n._v("304")]),s("br"),s("span",{staticClass:"line-number"},[n._v("305")]),s("br"),s("span",{staticClass:"line-number"},[n._v("306")]),s("br"),s("span",{staticClass:"line-number"},[n._v("307")]),s("br"),s("span",{staticClass:"line-number"},[n._v("308")]),s("br"),s("span",{staticClass:"line-number"},[n._v("309")]),s("br"),s("span",{staticClass:"line-number"},[n._v("310")]),s("br"),s("span",{staticClass:"line-number"},[n._v("311")]),s("br"),s("span",{staticClass:"line-number"},[n._v("312")]),s("br"),s("span",{staticClass:"line-number"},[n._v("313")]),s("br"),s("span",{staticClass:"line-number"},[n._v("314")]),s("br"),s("span",{staticClass:"line-number"},[n._v("315")]),s("br"),s("span",{staticClass:"line-number"},[n._v("316")]),s("br"),s("span",{staticClass:"line-number"},[n._v("317")]),s("br"),s("span",{staticClass:"line-number"},[n._v("318")]),s("br"),s("span",{staticClass:"line-number"},[n._v("319")]),s("br"),s("span",{staticClass:"line-number"},[n._v("320")]),s("br"),s("span",{staticClass:"line-number"},[n._v("321")]),s("br"),s("span",{staticClass:"line-number"},[n._v("322")]),s("br"),s("span",{staticClass:"line-number"},[n._v("323")]),s("br"),s("span",{staticClass:"line-number"},[n._v("324")]),s("br"),s("span",{staticClass:"line-number"},[n._v("325")]),s("br"),s("span",{staticClass:"line-number"},[n._v("326")]),s("br"),s("span",{staticClass:"line-number"},[n._v("327")]),s("br"),s("span",{staticClass:"line-number"},[n._v("328")]),s("br"),s("span",{staticClass:"line-number"},[n._v("329")]),s("br"),s("span",{staticClass:"line-number"},[n._v("330")]),s("br"),s("span",{staticClass:"line-number"},[n._v("331")]),s("br"),s("span",{staticClass:"line-number"},[n._v("332")]),s("br"),s("span",{staticClass:"line-number"},[n._v("333")]),s("br"),s("span",{staticClass:"line-number"},[n._v("334")]),s("br"),s("span",{staticClass:"line-number"},[n._v("335")]),s("br"),s("span",{staticClass:"line-number"},[n._v("336")]),s("br"),s("span",{staticClass:"line-number"},[n._v("337")]),s("br"),s("span",{staticClass:"line-number"},[n._v("338")]),s("br"),s("span",{staticClass:"line-number"},[n._v("339")]),s("br"),s("span",{staticClass:"line-number"},[n._v("340")]),s("br"),s("span",{staticClass:"line-number"},[n._v("341")]),s("br"),s("span",{staticClass:"line-number"},[n._v("342")]),s("br"),s("span",{staticClass:"line-number"},[n._v("343")]),s("br"),s("span",{staticClass:"line-number"},[n._v("344")]),s("br"),s("span",{staticClass:"line-number"},[n._v("345")]),s("br"),s("span",{staticClass:"line-number"},[n._v("346")]),s("br"),s("span",{staticClass:"line-number"},[n._v("347")]),s("br"),s("span",{staticClass:"line-number"},[n._v("348")]),s("br"),s("span",{staticClass:"line-number"},[n._v("349")]),s("br"),s("span",{staticClass:"line-number"},[n._v("350")]),s("br"),s("span",{staticClass:"line-number"},[n._v("351")]),s("br"),s("span",{staticClass:"line-number"},[n._v("352")]),s("br"),s("span",{staticClass:"line-number"},[n._v("353")]),s("br"),s("span",{staticClass:"line-number"},[n._v("354")]),s("br"),s("span",{staticClass:"line-number"},[n._v("355")]),s("br"),s("span",{staticClass:"line-number"},[n._v("356")]),s("br"),s("span",{staticClass:"line-number"},[n._v("357")]),s("br"),s("span",{staticClass:"line-number"},[n._v("358")]),s("br"),s("span",{staticClass:"line-number"},[n._v("359")]),s("br"),s("span",{staticClass:"line-number"},[n._v("360")]),s("br"),s("span",{staticClass:"line-number"},[n._v("361")]),s("br"),s("span",{staticClass:"line-number"},[n._v("362")]),s("br"),s("span",{staticClass:"line-number"},[n._v("363")]),s("br"),s("span",{staticClass:"line-number"},[n._v("364")]),s("br"),s("span",{staticClass:"line-number"},[n._v("365")]),s("br"),s("span",{staticClass:"line-number"},[n._v("366")]),s("br"),s("span",{staticClass:"line-number"},[n._v("367")]),s("br"),s("span",{staticClass:"line-number"},[n._v("368")]),s("br"),s("span",{staticClass:"line-number"},[n._v("369")]),s("br"),s("span",{staticClass:"line-number"},[n._v("370")]),s("br"),s("span",{staticClass:"line-number"},[n._v("371")]),s("br"),s("span",{staticClass:"line-number"},[n._v("372")]),s("br"),s("span",{staticClass:"line-number"},[n._v("373")]),s("br"),s("span",{staticClass:"line-number"},[n._v("374")]),s("br"),s("span",{staticClass:"line-number"},[n._v("375")]),s("br"),s("span",{staticClass:"line-number"},[n._v("376")]),s("br"),s("span",{staticClass:"line-number"},[n._v("377")]),s("br"),s("span",{staticClass:"line-number"},[n._v("378")]),s("br"),s("span",{staticClass:"line-number"},[n._v("379")]),s("br"),s("span",{staticClass:"line-number"},[n._v("380")]),s("br"),s("span",{staticClass:"line-number"},[n._v("381")]),s("br"),s("span",{staticClass:"line-number"},[n._v("382")]),s("br"),s("span",{staticClass:"line-number"},[n._v("383")]),s("br"),s("span",{staticClass:"line-number"},[n._v("384")]),s("br"),s("span",{staticClass:"line-number"},[n._v("385")]),s("br"),s("span",{staticClass:"line-number"},[n._v("386")]),s("br"),s("span",{staticClass:"line-number"},[n._v("387")]),s("br"),s("span",{staticClass:"line-number"},[n._v("388")]),s("br"),s("span",{staticClass:"line-number"},[n._v("389")]),s("br"),s("span",{staticClass:"line-number"},[n._v("390")]),s("br"),s("span",{staticClass:"line-number"},[n._v("391")]),s("br"),s("span",{staticClass:"line-number"},[n._v("392")]),s("br"),s("span",{staticClass:"line-number"},[n._v("393")]),s("br"),s("span",{staticClass:"line-number"},[n._v("394")]),s("br"),s("span",{staticClass:"line-number"},[n._v("395")]),s("br"),s("span",{staticClass:"line-number"},[n._v("396")]),s("br"),s("span",{staticClass:"line-number"},[n._v("397")]),s("br"),s("span",{staticClass:"line-number"},[n._v("398")]),s("br"),s("span",{staticClass:"line-number"},[n._v("399")]),s("br"),s("span",{staticClass:"line-number"},[n._v("400")]),s("br"),s("span",{staticClass:"line-number"},[n._v("401")]),s("br"),s("span",{staticClass:"line-number"},[n._v("402")]),s("br"),s("span",{staticClass:"line-number"},[n._v("403")]),s("br"),s("span",{staticClass:"line-number"},[n._v("404")]),s("br"),s("span",{staticClass:"line-number"},[n._v("405")]),s("br"),s("span",{staticClass:"line-number"},[n._v("406")]),s("br"),s("span",{staticClass:"line-number"},[n._v("407")]),s("br"),s("span",{staticClass:"line-number"},[n._v("408")]),s("br"),s("span",{staticClass:"line-number"},[n._v("409")]),s("br"),s("span",{staticClass:"line-number"},[n._v("410")]),s("br"),s("span",{staticClass:"line-number"},[n._v("411")]),s("br"),s("span",{staticClass:"line-number"},[n._v("412")]),s("br"),s("span",{staticClass:"line-number"},[n._v("413")]),s("br"),s("span",{staticClass:"line-number"},[n._v("414")]),s("br"),s("span",{staticClass:"line-number"},[n._v("415")]),s("br"),s("span",{staticClass:"line-number"},[n._v("416")]),s("br"),s("span",{staticClass:"line-number"},[n._v("417")]),s("br"),s("span",{staticClass:"line-number"},[n._v("418")]),s("br"),s("span",{staticClass:"line-number"},[n._v("419")]),s("br"),s("span",{staticClass:"line-number"},[n._v("420")]),s("br"),s("span",{staticClass:"line-number"},[n._v("421")]),s("br"),s("span",{staticClass:"line-number"},[n._v("422")]),s("br"),s("span",{staticClass:"line-number"},[n._v("423")]),s("br"),s("span",{staticClass:"line-number"},[n._v("424")]),s("br"),s("span",{staticClass:"line-number"},[n._v("425")]),s("br"),s("span",{staticClass:"line-number"},[n._v("426")]),s("br"),s("span",{staticClass:"line-number"},[n._v("427")]),s("br"),s("span",{staticClass:"line-number"},[n._v("428")]),s("br"),s("span",{staticClass:"line-number"},[n._v("429")]),s("br"),s("span",{staticClass:"line-number"},[n._v("430")]),s("br"),s("span",{staticClass:"line-number"},[n._v("431")]),s("br"),s("span",{staticClass:"line-number"},[n._v("432")]),s("br"),s("span",{staticClass:"line-number"},[n._v("433")]),s("br"),s("span",{staticClass:"line-number"},[n._v("434")]),s("br"),s("span",{staticClass:"line-number"},[n._v("435")]),s("br"),s("span",{staticClass:"line-number"},[n._v("436")]),s("br"),s("span",{staticClass:"line-number"},[n._v("437")]),s("br"),s("span",{staticClass:"line-number"},[n._v("438")]),s("br"),s("span",{staticClass:"line-number"},[n._v("439")]),s("br"),s("span",{staticClass:"line-number"},[n._v("440")]),s("br"),s("span",{staticClass:"line-number"},[n._v("441")]),s("br"),s("span",{staticClass:"line-number"},[n._v("442")]),s("br"),s("span",{staticClass:"line-number"},[n._v("443")]),s("br"),s("span",{staticClass:"line-number"},[n._v("444")]),s("br"),s("span",{staticClass:"line-number"},[n._v("445")]),s("br"),s("span",{staticClass:"line-number"},[n._v("446")]),s("br"),s("span",{staticClass:"line-number"},[n._v("447")]),s("br"),s("span",{staticClass:"line-number"},[n._v("448")]),s("br"),s("span",{staticClass:"line-number"},[n._v("449")]),s("br"),s("span",{staticClass:"line-number"},[n._v("450")]),s("br"),s("span",{staticClass:"line-number"},[n._v("451")]),s("br"),s("span",{staticClass:"line-number"},[n._v("452")]),s("br"),s("span",{staticClass:"line-number"},[n._v("453")]),s("br"),s("span",{staticClass:"line-number"},[n._v("454")]),s("br"),s("span",{staticClass:"line-number"},[n._v("455")]),s("br"),s("span",{staticClass:"line-number"},[n._v("456")]),s("br"),s("span",{staticClass:"line-number"},[n._v("457")]),s("br"),s("span",{staticClass:"line-number"},[n._v("458")]),s("br"),s("span",{staticClass:"line-number"},[n._v("459")]),s("br"),s("span",{staticClass:"line-number"},[n._v("460")]),s("br"),s("span",{staticClass:"line-number"},[n._v("461")]),s("br"),s("span",{staticClass:"line-number"},[n._v("462")]),s("br"),s("span",{staticClass:"line-number"},[n._v("463")]),s("br"),s("span",{staticClass:"line-number"},[n._v("464")]),s("br"),s("span",{staticClass:"line-number"},[n._v("465")]),s("br"),s("span",{staticClass:"line-number"},[n._v("466")]),s("br"),s("span",{staticClass:"line-number"},[n._v("467")]),s("br"),s("span",{staticClass:"line-number"},[n._v("468")]),s("br"),s("span",{staticClass:"line-number"},[n._v("469")]),s("br"),s("span",{staticClass:"line-number"},[n._v("470")]),s("br"),s("span",{staticClass:"line-number"},[n._v("471")]),s("br"),s("span",{staticClass:"line-number"},[n._v("472")]),s("br"),s("span",{staticClass:"line-number"},[n._v("473")]),s("br"),s("span",{staticClass:"line-number"},[n._v("474")]),s("br"),s("span",{staticClass:"line-number"},[n._v("475")]),s("br"),s("span",{staticClass:"line-number"},[n._v("476")]),s("br"),s("span",{staticClass:"line-number"},[n._v("477")]),s("br"),s("span",{staticClass:"line-number"},[n._v("478")]),s("br"),s("span",{staticClass:"line-number"},[n._v("479")]),s("br"),s("span",{staticClass:"line-number"},[n._v("480")]),s("br"),s("span",{staticClass:"line-number"},[n._v("481")]),s("br"),s("span",{staticClass:"line-number"},[n._v("482")]),s("br"),s("span",{staticClass:"line-number"},[n._v("483")]),s("br"),s("span",{staticClass:"line-number"},[n._v("484")]),s("br"),s("span",{staticClass:"line-number"},[n._v("485")]),s("br"),s("span",{staticClass:"line-number"},[n._v("486")]),s("br"),s("span",{staticClass:"line-number"},[n._v("487")]),s("br"),s("span",{staticClass:"line-number"},[n._v("488")]),s("br"),s("span",{staticClass:"line-number"},[n._v("489")]),s("br"),s("span",{staticClass:"line-number"},[n._v("490")]),s("br"),s("span",{staticClass:"line-number"},[n._v("491")]),s("br"),s("span",{staticClass:"line-number"},[n._v("492")]),s("br"),s("span",{staticClass:"line-number"},[n._v("493")]),s("br"),s("span",{staticClass:"line-number"},[n._v("494")]),s("br"),s("span",{staticClass:"line-number"},[n._v("495")]),s("br"),s("span",{staticClass:"line-number"},[n._v("496")]),s("br"),s("span",{staticClass:"line-number"},[n._v("497")]),s("br"),s("span",{staticClass:"line-number"},[n._v("498")]),s("br"),s("span",{staticClass:"line-number"},[n._v("499")]),s("br"),s("span",{staticClass:"line-number"},[n._v("500")]),s("br"),s("span",{staticClass:"line-number"},[n._v("501")]),s("br"),s("span",{staticClass:"line-number"},[n._v("502")]),s("br"),s("span",{staticClass:"line-number"},[n._v("503")]),s("br"),s("span",{staticClass:"line-number"},[n._v("504")]),s("br")])]),s("p",[n._v("正常情况下我们都是使用 Dubbo 提供的 "),s("code",[n._v("@Service")]),n._v(" 注解将服务注册到 Dubbo 的注册中心，现要求既能使用 RESTful 又能使用 Dubbo，故需要使用一个统一的注解 "),s("code",[n._v("@FeignClient")]),n._v(" 处理，关键代码如下：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('    /**\n     * Registers Beans whose classes was annotated {@link FeignClient}\n     *\n     * @param packagesToScan The base packages to scan\n     * @param registry       {@link BeanDefinitionRegistry}\n     */\n    private void registerServiceBeans(Set<String> packagesToScan, BeanDefinitionRegistry registry) {\n    \n        DubboClassPathBeanDefinitionScanner scanner =\n                new DubboClassPathBeanDefinitionScanner(registry, environment, resourceLoader);\n    \n        BeanNameGenerator beanNameGenerator = resolveBeanNameGenerator(registry);\n    \n        scanner.setBeanNameGenerator(beanNameGenerator);\n    \n        scanner.addIncludeFilter(new AnnotationTypeFilter(FeignClient.class, true, true));\n    \n        for (String packageToScan : packagesToScan) {\n    \n            // Registers @Service Bean first\n            scanner.scan(packageToScan);\n    \n            // Finds all BeanDefinitionHolders of @Service whether @ComponentScan scans or not.\n            Set<BeanDefinitionHolder> beanDefinitionHolders =\n                    findServiceBeanDefinitionHolders(scanner, packageToScan, registry, beanNameGenerator);\n    \n            if (!CollectionUtils.isEmpty(beanDefinitionHolders)) {\n    \n                for (BeanDefinitionHolder beanDefinitionHolder : beanDefinitionHolders) {\n                    registerServiceBean(beanDefinitionHolder, registry, scanner);\n                }\n    \n                if (logger.isInfoEnabled()) {\n                    logger.info(beanDefinitionHolders.size() + " annotated Dubbo\'s @Service Components { " +\n                            beanDefinitionHolders +\n                            " } were scanned under package[" + packageToScan + "]");\n                }\n    \n            } else {\n    \n                if (logger.isWarnEnabled()) {\n                    logger.warn("No Spring Bean annotating Dubbo\'s @Service was found under package["\n                            + packageToScan + "]");\n                }\n    \n            }\n    \n        }\n    \n    }\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br"),s("span",{staticClass:"line-number"},[n._v("46")]),s("br"),s("span",{staticClass:"line-number"},[n._v("47")]),s("br"),s("span",{staticClass:"line-number"},[n._v("48")]),s("br"),s("span",{staticClass:"line-number"},[n._v("49")]),s("br"),s("span",{staticClass:"line-number"},[n._v("50")]),s("br")])]),s("h2",{attrs:{id:"创建-dubbo-调用替换类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建-dubbo-调用替换类"}},[n._v("#")]),n._v(" 创建 Dubbo 调用替换类")]),n._v(" "),s("p",[n._v("在 "),s("code",[n._v("com.alibaba.dubbo.config.spring.beans.factory.annotation")]),n._v(" 包下创建一个名为 "),s("code",[n._v("DubboFeignBuilder")]),n._v(" 的工具类")]),n._v(" "),s("p",[s("strong",[n._v("注：包名不可修改")])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('    package com.alibaba.dubbo.config.spring.beans.factory.annotation;\n    \n    import com.alibaba.dubbo.config.annotation.Reference;\n    import feign.Feign;\n    import feign.Target;\n    import org.springframework.beans.factory.annotation.Autowired;\n    import org.springframework.context.ApplicationContext;\n    import org.springframework.util.ReflectionUtils;\n    \n    public class DubboFeignBuilder extends Feign.Builder {\n        @Autowired\n        private ApplicationContext applicationContext;\n    \n        public Reference defaultReference;\n        final class DefaultReferenceClass{\n            @Reference(check = false) String field;\n        }\n    \n        public DubboFeignBuilder() {\n            this.defaultReference = ReflectionUtils.findField(DubboFeignBuilder.DefaultReferenceClass.class,"field").getAnnotation(Reference.class);\n        }\n    \n    \n        @Override\n        public <T> T target(Target<T> target) {\n            ReferenceBeanBuilder beanBuilder = ReferenceBeanBuilder\n                    .create(defaultReference, target.getClass().getClassLoader(), applicationContext)\n                    .interfaceClass(target.type());\n    \n            try {\n                T object = (T) beanBuilder.build().getObject();\n                return object;\n            } catch (Exception e) {\n                throw new RuntimeException(e);\n            }\n        }\n    }\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br")])]),s("p",[n._v("正常情况下我们都是使用 Dubbo 提供的 "),s("code",[n._v("@Reference")]),n._v(" 注解来调用 Dubbo 服务，改造后我们需要能够支持 RESRful 和 Dubbo 两种调用方式，如果项目中存在 Dubbo 依赖则使用 Dubbo 来调用服务，否则使用 RESTful 调用，关键代码如下：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("    @Override\n    public <T> T target(Target<T> target) {\n        ReferenceBeanBuilder beanBuilder = ReferenceBeanBuilder\n                .create(defaultReference, target.getClass().getClassLoader(), applicationContext)\n                .interfaceClass(target.type());\n    \n        try {\n            T object = (T) beanBuilder.build().getObject();\n            return object;\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    }\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br")])]),s("h2",{attrs:{id:"创建自动配置类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建自动配置类"}},[n._v("#")]),n._v(" 创建自动配置类")]),n._v(" "),s("p",[n._v("利用 Spring Boot Starter 的扩展机制来制作我们自己的 Starter")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('    package com.cmcc.alibaba.dubbo.core;\n    \n    import com.alibaba.dubbo.config.AbstractConfig;\n    import com.alibaba.dubbo.config.spring.beans.factory.annotation.DubboFeignBuilder;\n    import com.alibaba.dubbo.config.spring.beans.factory.annotation.FeignClientToDubboProviderBeanPostProcessor;\n    import feign.Feign;\n    import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n    import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n    import org.springframework.boot.context.properties.source.ConfigurationPropertySources;\n    import org.springframework.context.annotation.Bean;\n    import org.springframework.context.annotation.Configuration;\n    import org.springframework.core.env.Environment;\n    \n    import java.util.Set;\n    \n    import static com.alibaba.boot.dubbo.util.DubboUtils.BASE_PACKAGES_PROPERTY_NAME;\n    import static com.alibaba.boot.dubbo.util.DubboUtils.DUBBO_PREFIX;\n    import static java.util.Collections.emptySet;\n    \n    @Configuration\n    @ConditionalOnProperty(prefix = DUBBO_PREFIX, name = "enabled", matchIfMissing = true, havingValue = "true")\n    @ConditionalOnClass(AbstractConfig.class)\n    public class SpringCloudAlibabaDubboAutoConfiguration {\n        @ConditionalOnProperty(name = BASE_PACKAGES_PROPERTY_NAME)\n        @ConditionalOnClass(ConfigurationPropertySources.class)\n        @Bean\n        public FeignClientToDubboProviderBeanPostProcessor feignClientToDubboProviderBeanPostProcessor(Environment environment) {\n            Set<String> packagesToScan = environment.getProperty(BASE_PACKAGES_PROPERTY_NAME, Set.class, emptySet());\n            return new FeignClientToDubboProviderBeanPostProcessor(packagesToScan);\n        }\n    \n        @Bean\n        public Feign.Builder feignDubboBuilder() {\n            return new DubboFeignBuilder();\n        }\n    }\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br")])]),s("p",[n._v("说明：")]),n._v(" "),s("ul",[s("li",[s("code",[n._v("@ConditionalOnProperty")]),n._v("：触发条件，当配置文件中存在预设条件则触发当前自动配置")]),n._v(" "),s("li",[s("code",[n._v("@ConditionalOnClass")]),n._v("：触发条件，当 "),s("code",[n._v("classpath")]),n._v(" 下存在预设类则触发当前自动配置")])]),n._v(" "),s("h2",{attrs:{id:"spring-factories"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-factories"}},[n._v("#")]),n._v(" spring.factories")]),n._v(" "),s("p",[n._v("在 "),s("code",[n._v("src/main/resources/META-INF")]),n._v(" 目录下创建一个名为 "),s("code",[n._v("spring.factories")]),n._v(" 的配置文件")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("    org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\n      com.cmcc.alibaba.dubbo.core.SpringCloudAlibabaDubboAutoConfiguration\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br")])])])}),[],!1,null,null,null);e.default=r.exports}}]);