(window.webpackJsonp=window.webpackJsonp||[]).push([[574],{1270:function(s,t,n){"use strict";n.r(t);var a=n(5),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"时间和日期是我们编程中经常会用到的-本文主要介绍了go语言内置的time包的基本用法。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#时间和日期是我们编程中经常会用到的-本文主要介绍了go语言内置的time包的基本用法。"}},[s._v("#")]),s._v(" 时间和日期是我们编程中经常会用到的，本文主要介绍了Go语言内置的time包的基本用法。")]),s._v(" "),n("h2",{attrs:{id:"time包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#time包"}},[s._v("#")]),s._v(" time包")]),s._v(" "),n("p",[s._v("time包提供了时间的显示和测量用的函数。日历的计算采用的是公历。")]),s._v(" "),n("h3",{attrs:{id:"时间类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#时间类型"}},[s._v("#")]),s._v(" 时间类型")]),s._v(" "),n("p",[n("code",[s._v("time.Time")]),s._v("类型表示时间。我们可以通过"),n("code",[s._v("time.Now()")]),s._v("函数获取当前的时间对象，然后获取时间对象的年月日时分秒等信息。示例代码如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    func timeDemo() {\n    \tnow := time.Now() //获取当前时间\n    \tfmt.Printf("current time:%v\\n", now)\n    \n    \tyear := now.Year()     //年\n    \tmonth := now.Month()   //月\n    \tday := now.Day()       //日\n    \thour := now.Hour()     //小时\n    \tminute := now.Minute() //分钟\n    \tsecond := now.Second() //秒\n    \tfmt.Printf("%d-%02d-%02d %02d:%02d:%02d\\n", year, month, day, hour, minute, second)\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("h3",{attrs:{id:"时间戳"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#时间戳"}},[s._v("#")]),s._v(" 时间戳")]),s._v(" "),n("p",[s._v("时间戳是自1970年1月1日（08:00:00GMT）至当前时间的总毫秒数。它也被称为Unix时间戳（UnixTimestamp）。")]),s._v(" "),n("p",[s._v("基于时间对象获取时间戳的示例代码如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    func timestampDemo() {\n    \tnow := time.Now()            //获取当前时间\n    \ttimestamp1 := now.Unix()     //时间戳\n    \ttimestamp2 := now.UnixNano() //纳秒时间戳\n    \tfmt.Printf("current timestamp1:%v\\n", timestamp1)\n    \tfmt.Printf("current timestamp2:%v\\n", timestamp2)\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("使用"),n("code",[s._v("time.Unix()")]),s._v("函数可以将时间戳转为时间格式。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    func timestampDemo2(timestamp int64) {\n    \ttimeObj := time.Unix(timestamp, 0) //将时间戳转为时间格式\n    \tfmt.Println(timeObj)\n    \tyear := timeObj.Year()     //年\n    \tmonth := timeObj.Month()   //月\n    \tday := timeObj.Day()       //日\n    \thour := timeObj.Hour()     //小时\n    \tminute := timeObj.Minute() //分钟\n    \tsecond := timeObj.Second() //秒\n    \tfmt.Printf("%d-%02d-%02d %02d:%02d:%02d\\n", year, month, day, hour, minute, second)\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h3",{attrs:{id:"时间间隔"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#时间间隔"}},[s._v("#")]),s._v(" 时间间隔")]),s._v(" "),n("p",[n("code",[s._v("time.Duration")]),s._v("是"),n("code",[s._v("time")]),s._v("包定义的一个类型，它代表两个时间点之间经过的时间，以纳秒为单位。"),n("code",[s._v("time.Duration")]),s._v("表示一段时间间隔，可表示的最长时间段大约290年。")]),s._v(" "),n("p",[s._v("time包中定义的时间间隔类型的常量如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    const (\n        Nanosecond  Duration = 1\n        Microsecond          = 1000 * Nanosecond\n        Millisecond          = 1000 * Microsecond\n        Second               = 1000 * Millisecond\n        Minute               = 60 * Second\n        Hour                 = 60 * Minute\n    )\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("例如："),n("code",[s._v("time.Duration")]),s._v("表示1纳秒，"),n("code",[s._v("time.Second")]),s._v("表示1秒。")]),s._v(" "),n("h3",{attrs:{id:"时间操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#时间操作"}},[s._v("#")]),s._v(" 时间操作")]),s._v(" "),n("h4",{attrs:{id:"add"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#add"}},[s._v("#")]),s._v(" Add")]),s._v(" "),n("p",[s._v("我们在日常的编码过程中可能会遇到要求时间+时间间隔的需求，Go语言的时间对象有提供Add方法如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    func (t Time) Add(d Duration) Time\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("举个例子，求一个小时之后的时间：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    func main() {\n    \tnow := time.Now()\n    \tlater := now.Add(time.Hour) // 当前时间加1小时后的时间\n    \tfmt.Println(later)\n    }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h4",{attrs:{id:"sub"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sub"}},[s._v("#")]),s._v(" Sub")]),s._v(" "),n("p",[s._v("求两个时间之间的差值：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    func (t Time) Sub(u Time) Duration\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("返回一个时间段t-u。如果结果超出了Duration可以表示的最大值/最小值，将返回最大值/最小值。要获取时间点t-d（d为Duration），可以使用t.Add(-d)。")]),s._v(" "),n("h4",{attrs:{id:"equal"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#equal"}},[s._v("#")]),s._v(" Equal")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    func (t Time) Equal(u Time) bool\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("判断两个时间是否相同，会考虑时区的影响，因此不同时区标准的时间也可以正确比较。本方法和用t==u不同，这种方法还会比较地点和时区信息。")]),s._v(" "),n("h4",{attrs:{id:"before"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#before"}},[s._v("#")]),s._v(" Before")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    func (t Time) Before(u Time) bool\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("如果t代表的时间点在u之前，返回真；否则返回假。")]),s._v(" "),n("h4",{attrs:{id:"after"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#after"}},[s._v("#")]),s._v(" After")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    func (t Time) After(u Time) bool\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("如果t代表的时间点在u之后，返回真；否则返回假。")]),s._v(" "),n("h3",{attrs:{id:"定时器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#定时器"}},[s._v("#")]),s._v(" 定时器")]),s._v(" "),n("p",[s._v("使用"),n("code",[s._v("time.Tick(时间间隔)")]),s._v("来设置定时器，定时器的本质上是一个通道（channel）。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    func tickDemo() {\n    \tticker := time.Tick(time.Second) //定义一个1秒间隔的定时器\n    \tfor i := range ticker {\n    \t\tfmt.Println(i)//每秒都会执行的任务\n    \t}\n    }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h3",{attrs:{id:"时间格式化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#时间格式化"}},[s._v("#")]),s._v(" 时间格式化")]),s._v(" "),n("p",[s._v("时间类型有一个自带的方法"),n("code",[s._v("Format")]),s._v("进行格式化，需要注意的是Go语言中格式化时间模板不是常见的"),n("code",[s._v("Y-m-d H:M:S")]),s._v("而是使用Go的诞生时间2006年1月2号15点04分（记忆口诀为2006 1 2 3 4）。也许这就是技术人员的浪漫吧。")]),s._v(" "),n("p",[s._v("补充：如果想格式化为12小时方式，需指定"),n("code",[s._v("PM")]),s._v("。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    func formatDemo() {\n    \tnow := time.Now()\n    \t// 格式化的模板为Go的出生时间2006年1月2号15点04分 Mon Jan\n    \t// 24小时制\n    \tfmt.Println(now.Format("2006-01-02 15:04:05.000 Mon Jan"))\n    \t// 12小时制\n    \tfmt.Println(now.Format("2006-01-02 03:04:05.000 PM Mon Jan"))\n    \tfmt.Println(now.Format("2006/01/02 15:04"))\n    \tfmt.Println(now.Format("15:04 2006/01/02"))\n    \tfmt.Println(now.Format("2006/01/02"))\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h4",{attrs:{id:"解析字符串格式的时间"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解析字符串格式的时间"}},[s._v("#")]),s._v(" 解析字符串格式的时间")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    now := time.Now()\n    fmt.Println(now)\n    // 加载时区\n    loc, err := time.LoadLocation("Asia/Shanghai")\n    if err != nil {\n    \tfmt.Println(err)\n    \treturn\n    }\n    // 按照指定时区和指定格式解析字符串时间\n    timeObj, err := time.ParseInLocation("2006/01/02 15:04:05", "2019/08/04 14:15:20", loc)\n    if err != nil {\n    \tfmt.Println(err)\n    \treturn\n    }\n    fmt.Println(timeObj)\n    fmt.Println(timeObj.Sub(now))\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("h2",{attrs:{id:"练习题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#练习题"}},[s._v("#")]),s._v(" 练习题：")]),s._v(" "),n("ol",[n("li",[s._v("获取当前时间，格式化输出为2017/06/19 20:30:05`格式。")]),s._v(" "),n("li",[s._v("编写程序统计一段代码的执行耗时时间，单位精确到微秒。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);