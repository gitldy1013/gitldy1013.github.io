(window.webpackJsonp=window.webpackJsonp||[]).push([[251],{948:function(a,s,n){"use strict";n.r(s);var r=n(5),t=Object(r.a)({},(function(){var a=this,s=a.$createElement,n=a._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h1",{attrs:{id:"最小的k个数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#最小的k个数"}},[a._v("#")]),a._v(" 最小的K个数")]),a._v(" "),n("p",[a._v("https://www.nowcoder.com/practice/6a296eb82cf844ca8539b57c23e6e9bf")]),a._v(" "),n("h2",{attrs:{id:"描述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#描述"}},[a._v("#")]),a._v(" 描述")]),a._v(" "),n("p",[a._v("输入n个整数，找出其中最小的K个数。例如输入4,5,1,6,2,7,3,8这8个数字，则最小的4个数字是1,2,3,4,。")]),a._v(" "),n("h2",{attrs:{id:"思考"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#思考"}},[a._v("#")]),a._v(" 思考")]),a._v(" "),n("p",[a._v("最大堆和最小堆是二叉堆的两种形式。")]),a._v(" "),n("p",[a._v("最大堆：根结点的键值是所有堆结点键值中最大者，且每个结点的值都比其孩子的值大。")]),a._v(" "),n("p",[a._v("最小堆：根结点的键值是所有堆结点键值中最小者，且每个结点的值都比其孩子的值小")]),a._v(" "),n("p",[n("img",{attrs:{src:"/images/image-20200531214512859.png",alt:"image-20200531214512859"}})]),a._v(" "),n("h2",{attrs:{id:"代码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#代码"}},[a._v("#")]),a._v(" 代码")]),a._v(" "),n("p",[a._v("我们首先需要用一个长度为K的数组，来记录最小值，并且这个数组是排序的，首先需要初始化K数组的值，我们设置为最大，然后遍历每次查找的时候，需要从里面的数组进行比较，然后如果大小超过了K，那么把最大的数给剔除。")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("class Solution:\n    def GetLeastNumbers_Solution(self, tinput, k):\n        array = []\n        if k > len(tinput):\n            return array\n        for i in range(k):\n            array.append(1000000)\n        for key in tinput:\n            for index in range(len(array)):\n                if key < array[index]:\n                    array.insert(index, key)\n                    break\n            if len(array) > k:\n                del array[-1]\n        return array\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br")])])])}),[],!1,null,null,null);s.default=t.exports}}]);