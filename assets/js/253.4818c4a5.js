(window.webpackJsonp=window.webpackJsonp||[]).push([[253],{949:function(s,e,t){"use strict";t.r(e);var a=t(5),n=Object(a.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"二叉树的下一个节点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二叉树的下一个节点"}},[s._v("#")]),s._v(" 二叉树的下一个节点")]),s._v(" "),t("h2",{attrs:{id:"来源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#来源"}},[s._v("#")]),s._v(" 来源")]),s._v(" "),t("p",[s._v("https://www.nowcoder.com/practice/9023a0c988684a53960365b889ceaf5e")]),s._v(" "),t("h2",{attrs:{id:"描述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#描述"}},[s._v("#")]),s._v(" 描述")]),s._v(" "),t("p",[s._v("给定一个二叉树和其中的一个结点，请找出中序遍历顺序的下一个结点并且返回。注意，树中的结点不仅包含左右子结点，同时包含指向父结点的指针。")]),s._v(" "),t("h2",{attrs:{id:"步骤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#步骤"}},[s._v("#")]),s._v(" 步骤")]),s._v(" "),t("ul",[t("li",[s._v("寻找右子树，如果存在就一直找右子树的最左边就是下一个节点")]),s._v(" "),t("li",[s._v("没有右子树，就寻找它的父节点，一直找到它是父节点的左子树，打印父节点")])]),s._v(" "),t("p",[t("img",{attrs:{src:"/images/image-20200616211510448.png",alt:"image-20200616211510448"}})]),s._v(" "),t("h2",{attrs:{id:"代码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#代码"}},[s._v("#")]),s._v(" 代码")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("class TreeLinkNode:\n    def __init__(self, x):\n        self.val = x\n        self.left = None\n        self.right = None\n        self.next = None\n\nclass Solution:\n    def GetNext(self, pNode):\n        # 1.寻找右子树，如果存在就一直找到右子树的最左边，就是下一个节点\n        # 2.没有右子树，就寻找他的父节点，一直找到它是父节点的左子树，打印父节点\n        if pNode.right:\n            tmpNode = pNode.right\n            while tmpNode.left:\n                tmpNode = tmpNode.left\n            return tmpNode\n        else:\n            tmpNode = pNode\n            while tmpNode.next:\n                if tmpNode.next.left == tmpNode:\n                    return tmpNode.next\n                tmpNode = tmpNode.next\n            return None\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br")])])])}),[],!1,null,null,null);e.default=n.exports}}]);