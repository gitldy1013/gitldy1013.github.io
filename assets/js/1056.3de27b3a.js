(window.webpackJsonp=window.webpackJsonp||[]).push([[1056],{1752:function(a,n,s){"use strict";s.r(n);var e=s(5),t=Object(e.a)({},(function(){var a=this,n=a.$createElement,s=a._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"解决-maven-无法自动下载依赖的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决-maven-无法自动下载依赖的问题"}},[a._v("#")]),a._v(" 解决 Maven 无法自动下载依赖的问题")]),a._v(" "),s("h2",{attrs:{id:"现象说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#现象说明"}},[a._v("#")]),a._v(" 现象说明")]),a._v(" "),s("p",[a._v("无法下载依赖的情况大致有两类：")]),a._v(" "),s("ul",[s("li",[a._v("无法通过 Maven 中央仓库提供的坐标下载（也许是网络环境导致）")]),a._v(" "),s("li",[a._v("类库没有上传至中央仓库只能通过官网或其它渠道下载")])]),a._v(" "),s("h2",{attrs:{id:"解决思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决思路"}},[a._v("#")]),a._v(" 解决思路")]),a._v(" "),s("ul",[s("li",[a._v("手动管理依赖，将依赖按传统的方式放入 "),s("code",[a._v("libs")]),a._v(" 目录中。缺点是需要手动管理依赖版本。")]),a._v(" "),s("li",[a._v("将依赖安装到本地仓库中，按照 Maven 下载依赖的优先级，会优先查找本地仓库中的依赖。缺点是协同开发时，其他开发人员会因为本地缺少依赖导致项目启动报错。")])]),a._v(" "),s("h2",{attrs:{id:"解决方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[a._v("#")]),a._v(" 解决方案")]),a._v(" "),s("p",[a._v("以上解决思路虽然都可以解决缺少依赖的问题，但操作起来不太优雅，此时我们可以使用 Maven 提供的插件来解决这个问题")]),a._v(" "),s("p",[s("code",[a._v("pom.xml")]),a._v(" 增加插件配置，关键配置如下：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-install-plugin</artifactId>\n                <version>2.5.2</version>\n                <executions>\n                    <execution>\n                        <id>install-external-kaptcha</id>\n                        \x3c!-- 触发时机：执行 mvn clean 命令时自动触发插件 --\x3e\n                        <phase>clean</phase>\n                        <configuration>\n                            \x3c!-- 存放依赖文件的位置 --\x3e\n                            <file>${project.basedir}/libs/kaptcha-2.3.jar</file>\n                            <repositoryLayout>default</repositoryLayout>\n                            \x3c!-- 自定义 groupId --\x3e\n                            <groupId>com.google.code.kaptcha</groupId>\n                            \x3c!-- 自定义 artifactId --\x3e\n                            <artifactId>kaptcha</artifactId>\n                            \x3c!-- 自定义版本号 --\x3e\n                            <version>2.3</version>\n                            \x3c!-- 打包方式 --\x3e\n                            <packaging>jar</packaging>\n                            \x3c!-- 是否自动生成 POM --\x3e\n                            <generatePom>true</generatePom>\n                        </configuration>\n                        <goals>\n                            <goal>install-file</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br"),s("span",{staticClass:"line-number"},[a._v("24")]),s("br"),s("span",{staticClass:"line-number"},[a._v("25")]),s("br"),s("span",{staticClass:"line-number"},[a._v("26")]),s("br"),s("span",{staticClass:"line-number"},[a._v("27")]),s("br"),s("span",{staticClass:"line-number"},[a._v("28")]),s("br"),s("span",{staticClass:"line-number"},[a._v("29")]),s("br"),s("span",{staticClass:"line-number"},[a._v("30")]),s("br"),s("span",{staticClass:"line-number"},[a._v("31")]),s("br"),s("span",{staticClass:"line-number"},[a._v("32")]),s("br"),s("span",{staticClass:"line-number"},[a._v("33")]),s("br"),s("span",{staticClass:"line-number"},[a._v("34")]),s("br")])]),s("p",[a._v("通过该插件，我们可以在执行 "),s("code",[a._v("mvn clean")]),a._v(" 命令时将项目所需要的依赖自动安装进本地仓库")])])}),[],!1,null,null,null);n.default=t.exports}}]);