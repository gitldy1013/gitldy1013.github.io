(window.webpackJsonp=window.webpackJsonp||[]).push([[317],{1013:function(n,s,a){"use strict";a.r(s);var e=a(5),t=Object(e.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"java-nio"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-nio"}},[n._v("#")]),n._v(" Java NIO")]),n._v(" "),a("h2",{attrs:{id:"概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[n._v("#")]),n._v(" 概念")]),n._v(" "),a("p",[n._v("Java NIO（New IO），No Blocking IO 非阻塞IO，是从Java1.4版本开始引入的一个新的IO API，可以替代标准的Java IO API。NIO与原来的IO有同样的作用和目的，但是使用的方式完全不同，NIO支持面向缓冲区的，基于通道的IO操作。NIO将以更加高效的方式进行文件读写操作")]),n._v(" "),a("h2",{attrs:{id:"io和nio的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#io和nio的区别"}},[n._v("#")]),n._v(" IO和NIO的区别")]),n._v(" "),a("table",[a("thead",[a("tr",[a("th",[n._v("IO")]),n._v(" "),a("th",[n._v("NIO")])])]),n._v(" "),a("tbody",[a("tr",[a("td",[n._v("面向流（Stream Oriented）")]),n._v(" "),a("td",[n._v("面向缓冲区（Buffer Oriented）")])]),n._v(" "),a("tr",[a("td",[n._v("阻塞IO（Blocking IO）")]),n._v(" "),a("td",[n._v("非阻塞IO（Non Blocking IO）")])]),n._v(" "),a("tr",[a("td",[n._v("无")]),n._v(" "),a("td",[n._v("选择器（Selectors）")])])])]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/image-20200327143758859.png",alt:"image-20200327143758859"}})]),n._v(" "),a("ul",[a("li",[n._v("传统的IO是单向的\n"),a("ul",[a("li",[n._v("也就是需要建立输入流和输出流两个管道，数据的流动只能是单向的")])])])]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/image-20200327144423143.png",alt:"image-20200327144423143"}})]),n._v(" "),a("ul",[a("li",[a("p",[n._v("NIO是双向的")]),n._v(" "),a("ul",[a("li",[n._v("里面的缓存区是可以双向传输的")])])]),n._v(" "),a("li",[a("p",[n._v("NIO里面引入的通道的概念")]),n._v(" "),a("ul",[a("li",[n._v("通道可以理解为我们生活中的铁路，它是用于源地址和目的地址连接的")]),n._v(" "),a("li",[n._v("如果需要实际传输的话，那么需要依赖里面的缓冲区")]),n._v(" "),a("li",[n._v("通道负责连接，缓冲区负责传输")])])])]),n._v(" "),a("h2",{attrs:{id:"通道和缓冲区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通道和缓冲区"}},[n._v("#")]),n._v(" 通道和缓冲区")]),n._v(" "),a("p",[n._v("Java NIO系统的核心在于：通道（Channel）和缓冲区（Buffer）。通道表示打开到IO设备（例如：文件、套接字）的连接。若需要使用NIO系统，需要获取用于连接IO设备的通道以及用于容纳数据的缓冲区。然后操作缓冲区，对数据进行处理")]),n._v(" "),a("p",[n._v("简而言之：Channel负责传输，Buffer负责存储")]),n._v(" "),a("h2",{attrs:{id:"缓冲区-buffer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓冲区-buffer"}},[n._v("#")]),n._v(" 缓冲区 Buffer")]),n._v(" "),a("p",[n._v("在Java NIO中负责数据的存取。缓冲区就是数组。用于存储不同类型的数据根据数据类型不同，提供相同类型的缓冲区（除了Boolean）")]),n._v(" "),a("ul",[a("li",[n._v("ByteBuffer：字节缓冲区（最常用的）")]),n._v(" "),a("li",[n._v("CharBuffer")]),n._v(" "),a("li",[n._v("ShortBuffer")]),n._v(" "),a("li",[n._v("IntBuffer")]),n._v(" "),a("li",[n._v("LongBuffer")]),n._v(" "),a("li",[n._v("FloatBuffer")]),n._v(" "),a("li",[n._v("DoubleBuffer")])]),n._v(" "),a("h3",{attrs:{id:"缓冲区中的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓冲区中的方法"}},[n._v("#")]),n._v(" 缓冲区中的方法")]),n._v(" "),a("p",[n._v("上面缓冲区的管理方式几乎一致， 通过 allocate() 获取缓冲区")]),n._v(" "),a("p",[n._v("缓冲区存取数据的两个核心方法")]),n._v(" "),a("ul",[a("li",[n._v("put()：存入数据到缓冲区中")]),n._v(" "),a("li",[n._v("get()：获取缓冲区中的数据")]),n._v(" "),a("li",[n._v("hasRemaining()：判断缓冲区是否还有剩余的数据")]),n._v(" "),a("li",[n._v("remaining()：获取缓冲区还有多少剩余数据")]),n._v(" "),a("li",[n._v("mark()：标记postion的位置")]),n._v(" "),a("li",[n._v("reset()：恢复到刚标记的地方")])]),n._v(" "),a("h3",{attrs:{id:"缓冲区中的核心属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓冲区中的核心属性"}},[n._v("#")]),n._v(" 缓冲区中的核心属性")]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/image-20200327150236836.png",alt:"image-20200327150236836"}})]),n._v(" "),a("ul",[a("li",[n._v("capacity：容量，表示缓冲区中最大存储数据的容量，一旦申明不可改变。")]),n._v(" "),a("li",[n._v("limit：界限，表示缓冲区中的可以操作数据的大小。（limit 后数据不能进行读写）")]),n._v(" "),a("li",[n._v("position：位置，表示缓冲区中正在操作的位置")]),n._v(" "),a("li",[n._v("mark：标记，表示记录当前 position 的位置，可以通过reset() 恢复到 mark的位置")])]),n._v(" "),a("p",[n._v("最后它们之间的关系是：0 <= mark <= position <= limit <= capacity")]),n._v(" "),a("h3",{attrs:{id:"相关操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关操作"}},[n._v("#")]),n._v(" 相关操作")]),n._v(" "),a("p",[n._v("我们首先操作一个大小为1024字节的缓冲区ByteBuffer")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('// 分配一个指定大小的缓冲区\nByteBuffer buf = ByteBuffer.allocate(1024);\nSystem.out.println("初始化");\nSystem.out.println("position：" + buf.position());\nSystem.out.println("limit：" + buf.limit());\nSystem.out.println("capacity：" + buf.capacity());\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br")])]),a("p",[n._v("然后在传入字符串到缓冲区")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('// 存入数据到缓冲区\nString str = "abcde";\nbuf.put(str.getBytes());\n\nSystem.out.println("存入数据");\nSystem.out.println("position：" + buf.position());\nSystem.out.println("limit：" + buf.limit());\nSystem.out.println("capacity：" + buf.capacity());\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br")])]),a("p",[n._v("然后开始读取数据，在读取数据前，我们需要使用flip切换到读取数据模式")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('// 切换读取数据模式\nbuf.flip();\nSystem.out.println("切换读取数据模式");\nSystem.out.println("position：" + buf.position());\nSystem.out.println("limit：" + buf.limit());\nSystem.out.println("capacity：" + buf.capacity());\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br")])]),a("p",[n._v("然后在进行读取操作，我们需要创建一个byte[] 数组，将需要读取出来的数据放进去")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('// 开始读取数据\nSystem.out.println("开始读取数据");\nbyte[] dst = new byte[buf.limit()];\nbuf.get(dst);\nSystem.out.println(new String(dst, 0, dst.length));\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br")])]),a("p",[n._v("下面这个图，是我们在执行各个步骤时， position，limit，capacity的变换")]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/image-20200327150814326.png",alt:"image-20200327150814326"}})]),n._v(" "),a("p",[n._v("完整代码：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('/**\n * 缓冲区：Buffer\n * 在Java NIO中负责数据的存取。缓冲区就是数组。用于存储不同类型的数据\n * 根据数据类型不同，提供相同类型的缓冲区（除了Boolean）\n * ByteBuffer\n * CharBuffer\n * @author: 陌溪\n * @create: 2020-03-27-14:48\n */\npublic class BufferDemo {\n\n    public static void main(String[] args) {\n        // 分配一个指定大小的缓冲区\n        ByteBuffer buf = ByteBuffer.allocate(1024);\n        System.out.println("初始化");\n        System.out.println("position：" + buf.position());\n        System.out.println("limit：" + buf.limit());\n        System.out.println("capacity：" + buf.capacity());\n\n        // 存入数据到缓冲区\n        String str = "abcde";\n        buf.put(str.getBytes());\n        System.out.println("存入数据");\n        System.out.println("position：" + buf.position());\n        System.out.println("limit：" + buf.limit());\n        System.out.println("capacity：" + buf.capacity());\n\n        // 切换读取数据模式\n        buf.flip();\n        System.out.println("切换读取数据模式");\n        System.out.println("position：" + buf.position());\n        System.out.println("limit：" + buf.limit());\n        System.out.println("capacity：" + buf.capacity());\n\n        // 开始读取数据\n        System.out.println("开始读取数据");\n        byte[] dst = new byte[buf.limit()];\n        buf.get(dst);\n        System.out.println(new String(dst, 0, dst.length));\n\n        System.out.println("数据读取完毕");\n        System.out.println("position：" + buf.position());\n        System.out.println("limit：" + buf.limit());\n        System.out.println("capacity：" + buf.capacity());\n\n        // rewind()：表示重复读\n        buf.rewind();\n        System.out.println("rewind");\n        System.out.println("position：" + buf.position());\n        System.out.println("limit：" + buf.limit());\n        System.out.println("capacity：" + buf.capacity());\n\n        // clear()：清空缓冲区，但是缓冲区中的数据仍然存储，但是处于被遗忘状态\n        buf.clear();\n        System.out.println("clear");\n        System.out.println("position：" + buf.position());\n        System.out.println("limit：" + buf.limit());\n        System.out.println("capacity：" + buf.capacity());\n    }\n}\n\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br")])]),a("p",[n._v("最后运行结果：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("初始化\nposition：0\nlimit：1024\ncapacity：1024\n存入数据\nposition：5\nlimit：1024\ncapacity：1024\n切换读取数据模式\nposition：0\nlimit：5\ncapacity：1024\n开始读取数据\nabcde\n数据读取完毕\nposition：5\nlimit：5\ncapacity：1024\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br")])]),a("p",[n._v("从上述输出我们能够发现，postion一直代表我们能够操作的角标，但切换到读取模式的时候，那么就会从0开始，并且limit限制我们能够读取的范围")]),n._v(" "),a("h3",{attrs:{id:"直接缓冲区和非直接缓冲区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#直接缓冲区和非直接缓冲区"}},[n._v("#")]),n._v(" 直接缓冲区和非直接缓冲区")]),n._v(" "),a("ul",[a("li",[n._v("非直接缓冲区：通过 "),a("code",[n._v("allocate()")]),n._v(" 方法分配缓冲区，将缓冲区建立在JVM的内存中")])]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/image-20200327160611964.png",alt:"image-20200327160611964"}})]),n._v(" "),a("p",[n._v("传统IO和非直接缓冲区都需要中间进行一步Copy的过程，是比较耗费时间的")]),n._v(" "),a("ul",[a("li",[n._v("直接缓冲区：通过"),a("code",[n._v("allocateDirect()")]),n._v(" 方法分配直接缓冲区，将缓冲区建立在操作系统的物理内存中，可以提高效率。")])]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/image-20200327160908331.png",alt:"image-20200327160908331"}})]),n._v(" "),a("p",[n._v("写入物理内存中的数据，已经不归JVM来管辖了，因此JVM不会自动收集物理内存中的数据")]),n._v(" "),a("ul",[a("li",[n._v("字节缓冲区要么直接的，要么非直接的，如果为字节缓冲区，则Java虚拟机会尽最大努力直接在此缓冲区上执行本机I/O操作。也就是说，在每次调用基础操作系统的一个本机I/O操作之前，虚拟机都会尽量避免将缓冲区的内容复制到中间缓冲区（或从中间缓冲区中复制内容）")]),n._v(" "),a("li",[n._v("直接缓冲区可以通过调用此类的 "),a("code",[n._v("allocateDirect()工厂方法")]),n._v(" 来创建。此方法返回的缓冲区进行分配和取消分配所需成本通常高于非直接缓冲区。直接缓冲区的内容可以驻留在常规的垃圾回收堆之外，因此，他们对应用程序的内存需求量造成 的影响可能不明显。所以，建议将直接缓冲区主要分配给那些易受基础系统的本机I/O操作影响的大型、持久的缓冲区。一般情况下，最好仅在直接缓冲区能在程序性能方面带来明显好处时分配它们。")]),n._v(" "),a("li",[n._v("直接缓冲区还可以通过"),a("code",[n._v("FileChannel的map()方法")]),n._v(" 将文件区域直接映射到内存中来创建，该方法返回"),a("code",[n._v("MappedByteBuffer")]),n._v(" 。Java平台的实现有助于JNI从本机代码创建直接字节缓冲区。如果以上这些缓冲区中的某个缓冲区实例指的是不可访问的内存区域。则试图访问该区域不会更改该缓冲区的内容，并且将会在访问期间或稍后的某个时间导致抛出不确定的异常。")]),n._v(" "),a("li",[n._v("字节缓冲区是直接缓冲区还是非直接缓冲区可以通过调用其 "),a("code",[n._v("isDirect()")]),n._v(" 方法来确定，提供此方法是为了能够在性能关键型代码中执行显示缓冲区管理。")])]),n._v(" "),a("h2",{attrs:{id:"通道-channel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通道-channel"}},[n._v("#")]),n._v(" 通道 Channel")]),n._v(" "),a("h3",{attrs:{id:"概念-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念-2"}},[n._v("#")]),n._v(" 概念")]),n._v(" "),a("p",[n._v("由"),a("code",[n._v("java.nio.channels")]),n._v("包定义的。Channel表示IO源与目标打开的连接。Channel类似于传统的流，只不过Channel本身不能直接访问数据，Channel只能与Buffer进行交互。")]),n._v(" "),a("p",[n._v("开始的时候，CPU是直接提供IO接口来进行处理应用程序的IO请求的，但是因为IO请求会占用CPU的时间")]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/image-20200327161715544.png",alt:"image-20200327161715544"}})]),n._v(" "),a("p",[n._v("后来在内存中，又提供了一条DMA（直接内存存取）线路，直接和IO接口进行交互，但是DMA在进行操作时候，需要首先向CPU申请权限，获得权限后即可进行IO操作，CPU就可以进行其它的操作了")]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/image-20200327162012058.png",alt:"image-20200327162012058"}})]),n._v(" "),a("p",[n._v("但是当应用程序发送大量的IO请求时候，内存会向CPU申请多条DMA总线，但是当DMA连线更多时候，又会出现其它的问题，因此后面提出了Channel 通道的方式，Channel是一个完全独立的处理器，用于IO操作，这样可以省略向CPU请求的时间")]),n._v(" "),a("p",[n._v("其实：通道和原来的 流 也没有本质的区别，只是原来的DMA改成了 通道")]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/image-20200327162401536.png",alt:"image-20200327162401536"}})]),n._v(" "),a("h3",{attrs:{id:"相关实现类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关实现类"}},[n._v("#")]),n._v(" 相关实现类")]),n._v(" "),a("p",[n._v("通道 Channel，用于源节点与目标节点的连接，在Java NIO中 负责缓冲区中的数据传输。Channel本身不存储数据，因此需要配合缓冲区进行传输。")]),n._v(" "),a("p",[n._v("通道的主要实现类")]),n._v(" "),a("ul",[a("li",[n._v("java.nio.channels.Channels\n"),a("ul",[a("li",[n._v("FileChannel：文件通道")]),n._v(" "),a("li",[n._v("SocketChannel：套接字通道")]),n._v(" "),a("li",[n._v("ServerSocketChannel：套接字通道")]),n._v(" "),a("li",[n._v("DatagramChannel：用于网络")])])])]),n._v(" "),a("h3",{attrs:{id:"获取通道"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取通道"}},[n._v("#")]),n._v(" 获取通道")]),n._v(" "),a("p",[n._v("Java 针对支持通道的类，提供了一个getChannel() 方法")]),n._v(" "),a("ul",[a("li",[n._v("本地IO\n"),a("ul",[a("li",[n._v("FileInputStream")]),n._v(" "),a("li",[n._v("FileOutputStream")]),n._v(" "),a("li",[n._v("RandomAccessFile")])])]),n._v(" "),a("li",[n._v("网络IO\n"),a("ul",[a("li",[n._v("Socket")]),n._v(" "),a("li",[n._v("ServerSocket")]),n._v(" "),a("li",[n._v("DatagramSocket")])])])]),n._v(" "),a("p",[n._v("在JDK 1.7 中NIO.2 针对各通道提供了静态方法："),a("code",[n._v("open()")])]),n._v(" "),a("p",[n._v("在JDK 1.7 中NIO.2 的Files工具类提供了一个静态方法："),a("code",[n._v("newByteChannel()")])]),n._v(" "),a("h3",{attrs:{id:"利用通道完成文件的复制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#利用通道完成文件的复制"}},[n._v("#")]),n._v(" 利用通道完成文件的复制")]),n._v(" "),a("ul",[a("li",[n._v("使用非直接缓冲区，完成文件的复制")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('/**\n * 利用通道完成文件的复制\n * @author: 陌溪\n * @create: 2020-03-27-16:36\n */\npublic class FileCopyDemo {\n\n    public static void main(String[] args) {\n\n        FileInputStream fis = null;\n        FileOutputStream fos = null;\n        FileChannel inChannel = null;\n        FileChannel outChannel = null;\n        try {\n            fis = new FileInputStream("1.jpg");\n            fos = new FileOutputStream("2.jpg");\n\n            // 获取通道\n            inChannel = fis.getChannel();\n            outChannel = fos.getChannel();\n\n            //分配一个指定大小的缓冲区\n            ByteBuffer buf = ByteBuffer.allocate(1024);\n\n            // 将通道中的数据，存入缓冲区\n            while (inChannel.read(buf) != -1) {\n                // 切换成读取数据的模式\n                buf.flip();\n\n                // 将缓冲区中的数据写入通道\n                outChannel.write(buf);\n\n                // 清空缓冲区\n                buf.clear();\n            }\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            try {\n                // 关闭流\n                if(fis != null) {\n                    fis.close();\n                }\n                if(fos != null) {\n                    fos.close();\n                }\n\n                // // 关闭通道\n                if(outChannel != null) {\n                    outChannel.close();\n                }\n                if(inChannel != null) {\n                    inChannel.close();\n                }\n            } catch (Exception e) {\n                e.printStackTrace();\n            } finally {\n\n            }\n        }\n    }\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br"),a("span",{staticClass:"line-number"},[n._v("62")]),a("br"),a("span",{staticClass:"line-number"},[n._v("63")]),a("br")])]),a("ul",[a("li",[n._v("利用直接缓冲区，完成文件复制")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('/**\n * 利用通道完成文件的复制（直接缓冲区，内存映射）\n * @author: 陌溪\n * @create: 2020-03-27-16:36\n */\npublic class FileCopyByDirectDemo {\n\n    public static void main(String[] args) throws IOException {\n\n        // 获取通道\n        FileChannel inChannel = FileChannel.open(Paths.get("1.jpg"), StandardOpenOption.READ);\n        FileChannel outChannel = FileChannel.open(Paths.get("2.jpg"), StandardOpenOption.WRITE, StandardOpenOption.READ, StandardOpenOption.CREATE_NEW);\n\n        // 得到的一个内存映射文件\n        // 这个的好处是，直接将文件存储在内存中了\n        MappedByteBuffer inMappedBuf = inChannel.map(FileChannel.MapMode.READ_ONLY, 0, inChannel.size());\n        MappedByteBuffer outMappedBuf = outChannel.map(FileChannel.MapMode.READ_WRITE, 0, inChannel.size());\n\n        // 直接对缓冲区进行数据的读写操作\n        byte [] dst = new byte[inMappedBuf.limit()];\n        inMappedBuf.get(dst);\n        outMappedBuf.put(dst);\n\n        inChannel.close();\n        outChannel.close();\n    }\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br")])]),a("ul",[a("li",[a("p",[n._v("通道之间数据传输")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('/**\n * 利用通道直接进行数据传输\n * @author: 陌溪\n * @create: 2020-03-27-16:36\n */\npublic class FileCopyByChannelDemo {\n\n    public static void main(String[] args) throws IOException {\n\n        // 获取通道\n        // 获取通道\n        FileChannel inChannel = FileChannel.open(Paths.get("1.jpg"), StandardOpenOption.READ);\n        FileChannel outChannel = FileChannel.open(Paths.get("2.jpg"), StandardOpenOption.WRITE, StandardOpenOption.READ, StandardOpenOption.CREATE_NEW);\n\n        // 从 inChannel通道 到 outChannel通道\n        inChannel.transferTo(0, inChannel.size(), outChannel);\n\n        inChannel.close();\n        outChannel.close();\n    }\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br")])])])]),n._v(" "),a("h3",{attrs:{id:"分散读取与聚集写入"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分散读取与聚集写入"}},[n._v("#")]),n._v(" 分散读取与聚集写入")]),n._v(" "),a("ul",[a("li",[n._v("分散读取（Scatter）：将通道中的数据分散到多个缓冲区中")])]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/image-20200327174630941.png",alt:"image-20200327174630941"}})]),n._v(" "),a("p",[n._v("注意：按照缓冲区的顺序，写入position和limit之间的数据到Channel")]),n._v(" "),a("p",[n._v("下面我们定义了两个缓冲区，然后通过通道将我们的内容分别读取到两个缓冲区中，这就实现了分散读取")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('    /**\n     * 分散读取\n     * @throws IOException\n     */\n    private static void Scatteer() throws IOException {\n        RandomAccessFile raf1 = new RandomAccessFile("1.txt", "rw");\n\n        // 获取通道\n        FileChannel channel = raf1.getChannel();\n\n        // 分配指定大小的缓冲区\n        ByteBuffer buf1 = ByteBuffer.allocate(10);\n        ByteBuffer buf2 = ByteBuffer.allocate(1024);\n\n        // 分散读取\n        ByteBuffer[] bufs = {buf1, buf2};\n        channel.read(bufs);\n\n        for (ByteBuffer byteBuffer: bufs) {\n            // 切换成读模式\n            byteBuffer.flip();\n        }\n\n        System.out.println(new String(bufs[0].array(), 0, bufs[0].limit()));\n        System.out.println(new String(bufs[1].array(), 0, bufs[1].limit()));\n    }\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br")])]),a("ul",[a("li",[n._v("聚集写入（Gather）：将多个缓冲区中的数据都聚集到通道中")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('    /**\n     * 聚集写入\n     * @throws IOException\n     */\n    private static void Gather() throws IOException {\n        RandomAccessFile raf2 = new RandomAccessFile("2.txt", "rw");\n        FileChannel channel2 = raf2.getChannel();\n\n        // 分配指定大小的缓冲区\n        ByteBuffer buf1 = ByteBuffer.allocate(10);\n        ByteBuffer buf2 = ByteBuffer.allocate(1024);\n        ByteBuffer[] bufs = {buf1, buf2};\n\n        // 聚集写入\n        channel2.write(bufs);\n    }\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br")])]),a("h3",{attrs:{id:"字符集"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符集"}},[n._v("#")]),n._v(" 字符集")]),n._v(" "),a("ul",[a("li",[n._v("编码：字符串转换成字节数组")]),n._v(" "),a("li",[n._v("解码：字节数组转换成字符串")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('/**\n * 通道字符集编码\n *\n * @author: 陌溪\n * @create: 2020-03-27-18:20\n */\npublic class ChannelCharsetDemo {\n    public static void main(String[] args) throws CharacterCodingException {\n\n        Charset cs1 = Charset.forName("GBK");\n\n        // 获取编码器\n        CharsetEncoder ce = cs1.newEncoder();\n\n        // 获取解码器\n        CharsetDecoder cd = cs1.newDecoder();\n\n        CharBuffer cBuf = CharBuffer.allocate(1024);\n        cBuf.put("今天天气不错");\n        cBuf.flip();\n\n        //编码\n        ByteBuffer bBuf = ce.encode(cBuf);\n\n        for(int i=0; i< 12; i++) {\n            System.out.println(bBuf.get());\n        }\n\n        // 解码\n        bBuf.flip();\n        CharBuffer cBuf2 = cd.decode(bBuf);\n        System.out.println(cBuf2.toString());\n    }\n}\n\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br")])]),a("h2",{attrs:{id:"nio的非阻塞式网络通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nio的非阻塞式网络通信"}},[n._v("#")]),n._v(" NIO的非阻塞式网络通信")]),n._v(" "),a("p",[n._v("传统的阻塞式IO必须等待内容获取完毕后，才能够继续往下执行")]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/image-20200327190553998.png",alt:"image-20200327190553998"}})]),n._v(" "),a("p",[n._v("在NIO中，引入了选择器的概念，它会把每个通道都注册到选择器中，选择器的作用就是监控通道上的IO状态，但某个通道上，某个IO请求已经准备就绪时，那么选择器才会将该客户端的通道分配到服务端的一个或多个线程上")]),n._v(" "),a("h2",{attrs:{id:"使用nio完成网络通信的三个核心"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用nio完成网络通信的三个核心"}},[n._v("#")]),n._v(" 使用NIO完成网络通信的三个核心")]),n._v(" "),a("ul",[a("li",[n._v("通道（Channel）：负责连接\n"),a("ul",[a("li",[a("code",[n._v("java.nio.channels.Channel")]),n._v(" "),a("ul",[a("li",[n._v("SelectableChannel\n"),a("ul",[a("li",[n._v("SocketChannel")]),n._v(" "),a("li",[n._v("ServerSocketChannel：TCP")]),n._v(" "),a("li",[n._v("DatagramChannel：UDP")])])]),n._v(" "),a("li",[n._v("Pipe.SinkChannel")]),n._v(" "),a("li",[n._v("Pipe.SourceChannel")])])])])]),n._v(" "),a("li",[n._v("缓冲区（Buffer）：负责数据的存取")]),n._v(" "),a("li",[n._v("选择器（Selector）：SelectableChannel的多路复用器，用于监控SelectorableChannel的IO状况")])]),n._v(" "),a("h2",{attrs:{id:"使用阻塞式io完成网络通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用阻塞式io完成网络通信"}},[n._v("#")]),n._v(" 使用阻塞式IO完成网络通信")]),n._v(" "),a("p",[n._v("我们首先需要创建一个服务端，用于接收客户端请求")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('    /**\n     * 服务端\n     */\n    public static void server() throws IOException {\n        // 获取通道\n        ServerSocketChannel ssChannel = ServerSocketChannel.open();\n        FileChannel fileChannel = FileChannel.open(Paths.get("D:\\\\2.jpg"), StandardOpenOption.WRITE, StandardOpenOption.CREATE);\n\n        // 绑定端口号\n        ssChannel.bind(new InetSocketAddress(9898));\n\n        // 获取客户端连接的通道\n        SocketChannel socketChannel = ssChannel.accept();\n\n        // 分配指定大小的缓冲区\n        ByteBuffer buf = ByteBuffer.allocate(1024);\n\n        // 读取客户端的数据，并保存到本地\n        while(socketChannel.read(buf) != -1) {\n            // 切换成读模式\n            buf.flip();\n\n            // 写入\n            fileChannel.write(buf);\n\n            // 清空缓冲区\n            buf.clear();\n        }\n\n        // 关闭通道\n        ssChannel.close();\n        socketChannel.close();\n        fileChannel.close();\n    }\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br")])]),a("p",[n._v("然后在创建客户端，发送文件")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('    public static void client() throws IOException {\n        // 获取通道\n        SocketChannel sChannel = SocketChannel.open(new InetSocketAddress("127.0.0.1", 9898));\n\n        FileChannel inChannel = FileChannel.open(Paths.get("D:\\\\1.jpg"), StandardOpenOption.READ);\n        // 分配指定大小的缓冲区\n        ByteBuffer buf = ByteBuffer.allocate(1024);\n\n        // 读取本地文件，并发送到服务端\n        while (inChannel.read(buf) != -1) {\n            // 切换到读数据模式\n            buf.flip();\n\n            // 将缓冲区的数据写入管道\n            sChannel.write(buf);\n\n            // 清空缓冲区\n            buf.clear();\n        }\n\n        //关闭通道\n        inChannel.close();\n        sChannel.close();\n    }\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br")])]),a("p",[n._v("完整代码：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('\n/**\n * 阻塞式NIO\n *\n * @author: 陌溪\n * @create: 2020-03-27-19:16\n */\npublic class TestBlockingDemo {\n\n    public static void client() throws IOException {\n        // 获取通道\n        SocketChannel sChannel = SocketChannel.open(new InetSocketAddress("127.0.0.1", 9898));\n\n        FileChannel inChannel = FileChannel.open(Paths.get("D:\\\\1.jpg"), StandardOpenOption.READ);\n        // 分配指定大小的缓冲区\n        ByteBuffer buf = ByteBuffer.allocate(1024);\n\n        // 读取本地文件，并发送到服务端\n        while (inChannel.read(buf) != -1) {\n            // 切换到读数据模式\n            buf.flip();\n\n            // 将缓冲区的数据写入管道\n            sChannel.write(buf);\n\n            // 清空缓冲区\n            buf.clear();\n        }\n\n        // 告诉客户端我发送完成了，或者切换成非阻塞模式\n        sChannel.shutdownOutput();\n\n        // 接收服务端的反馈\n        int len = 0;\n        while((len = sChannel.read(buf)) != -1) {\n            buf.flip();\n            System.out.println(new String(buf.array(), 0, len));\n            buf.clear();\n        }\n\n        //关闭通道\n        inChannel.close();\n        sChannel.close();\n    }\n\n    /**\n     * 服务端\n     */\n    public static void server() throws IOException {\n        // 获取通道\n        ServerSocketChannel ssChannel = ServerSocketChannel.open();\n        FileChannel fileChannel = FileChannel.open(Paths.get("D:\\\\2.jpg"), StandardOpenOption.WRITE, StandardOpenOption.CREATE);\n\n        // 绑定端口号\n        ssChannel.bind(new InetSocketAddress(9898));\n\n        // 获取客户端连接的通道\n        SocketChannel socketChannel = ssChannel.accept();\n\n        // 分配指定大小的缓冲区\n        ByteBuffer buf = ByteBuffer.allocate(1024);\n\n        // 读取客户端的数据，并保存到本地\n        while(socketChannel.read(buf) != -1) {\n            // 切换成读模式\n            buf.flip();\n\n            // 写入\n            fileChannel.write(buf);\n\n            // 清空缓冲区\n            buf.clear();\n        }\n\n        //向客户端反馈\n        buf.put("服务端数据接收成功".getBytes());\n        buf.flip();\n        socketChannel.write(buf);\n\n        // 关闭通道\n        ssChannel.close();\n        socketChannel.close();\n        fileChannel.close();\n    }\n\n    public static void main(String[] args) {\n        new Thread(() -> {\n            try {\n                server();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }, "t1").start();\n\n        try {\n            TimeUnit.SECONDS.sleep(5);\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n\n        new Thread(() -> {\n            try {\n                client();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }, "t2").start();\n    }\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br"),a("span",{staticClass:"line-number"},[n._v("62")]),a("br"),a("span",{staticClass:"line-number"},[n._v("63")]),a("br"),a("span",{staticClass:"line-number"},[n._v("64")]),a("br"),a("span",{staticClass:"line-number"},[n._v("65")]),a("br"),a("span",{staticClass:"line-number"},[n._v("66")]),a("br"),a("span",{staticClass:"line-number"},[n._v("67")]),a("br"),a("span",{staticClass:"line-number"},[n._v("68")]),a("br"),a("span",{staticClass:"line-number"},[n._v("69")]),a("br"),a("span",{staticClass:"line-number"},[n._v("70")]),a("br"),a("span",{staticClass:"line-number"},[n._v("71")]),a("br"),a("span",{staticClass:"line-number"},[n._v("72")]),a("br"),a("span",{staticClass:"line-number"},[n._v("73")]),a("br"),a("span",{staticClass:"line-number"},[n._v("74")]),a("br"),a("span",{staticClass:"line-number"},[n._v("75")]),a("br"),a("span",{staticClass:"line-number"},[n._v("76")]),a("br"),a("span",{staticClass:"line-number"},[n._v("77")]),a("br"),a("span",{staticClass:"line-number"},[n._v("78")]),a("br"),a("span",{staticClass:"line-number"},[n._v("79")]),a("br"),a("span",{staticClass:"line-number"},[n._v("80")]),a("br"),a("span",{staticClass:"line-number"},[n._v("81")]),a("br"),a("span",{staticClass:"line-number"},[n._v("82")]),a("br"),a("span",{staticClass:"line-number"},[n._v("83")]),a("br"),a("span",{staticClass:"line-number"},[n._v("84")]),a("br"),a("span",{staticClass:"line-number"},[n._v("85")]),a("br"),a("span",{staticClass:"line-number"},[n._v("86")]),a("br"),a("span",{staticClass:"line-number"},[n._v("87")]),a("br"),a("span",{staticClass:"line-number"},[n._v("88")]),a("br"),a("span",{staticClass:"line-number"},[n._v("89")]),a("br"),a("span",{staticClass:"line-number"},[n._v("90")]),a("br"),a("span",{staticClass:"line-number"},[n._v("91")]),a("br"),a("span",{staticClass:"line-number"},[n._v("92")]),a("br"),a("span",{staticClass:"line-number"},[n._v("93")]),a("br"),a("span",{staticClass:"line-number"},[n._v("94")]),a("br"),a("span",{staticClass:"line-number"},[n._v("95")]),a("br"),a("span",{staticClass:"line-number"},[n._v("96")]),a("br"),a("span",{staticClass:"line-number"},[n._v("97")]),a("br"),a("span",{staticClass:"line-number"},[n._v("98")]),a("br"),a("span",{staticClass:"line-number"},[n._v("99")]),a("br"),a("span",{staticClass:"line-number"},[n._v("100")]),a("br"),a("span",{staticClass:"line-number"},[n._v("101")]),a("br"),a("span",{staticClass:"line-number"},[n._v("102")]),a("br"),a("span",{staticClass:"line-number"},[n._v("103")]),a("br"),a("span",{staticClass:"line-number"},[n._v("104")]),a("br"),a("span",{staticClass:"line-number"},[n._v("105")]),a("br"),a("span",{staticClass:"line-number"},[n._v("106")]),a("br"),a("span",{staticClass:"line-number"},[n._v("107")]),a("br"),a("span",{staticClass:"line-number"},[n._v("108")]),a("br"),a("span",{staticClass:"line-number"},[n._v("109")]),a("br")])]),a("h2",{attrs:{id:"使用非阻塞式io完成网络通信"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用非阻塞式io完成网络通信"}},[n._v("#")]),n._v(" 使用非阻塞式IO完成网络通信")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('/**\n * @author: 陌溪\n * @create: 2020-03-28-8:57\n */\npublic class TestNonBlockingNIODemo {\n\n    /**\n     * 客户端\n     */\n    public static void client() throws IOException {\n\n        // 获取通道\n        SocketChannel sChannel = SocketChannel.open(new InetSocketAddress("127.0.0.1", 9898));\n\n        // 切换成非阻塞模式\n        sChannel.configureBlocking(false);\n\n        // 分配指定大小的缓冲区\n        ByteBuffer buf = ByteBuffer.allocate(1024);\n\n        // 发送数据给服务器\n        buf.put(new Date().toString().getBytes());\n\n        // 切换成写模式\n        buf.flip();\n\n        // 将缓冲区中的内容写入通道\n        sChannel.write(buf);\n\n        // 关闭通道\n        sChannel.close();\n    }\n\n    /**\n     * 服务端\n     */\n    public static void server() throws IOException {\n\n        // 获取通道\n        ServerSocketChannel ssChannel = ServerSocketChannel.open();\n\n        // 切换成非阻塞模式\n        ssChannel.configureBlocking(false);\n\n        // 绑定连接\n        ssChannel.bind(new InetSocketAddress(9898));\n\n        // 获取选择器\n        Selector selector = Selector.open();\n\n        // 将通道注册到选择器上，第二个参数代表选择器监控通道的什么状态\n        // 用选择器监听 接收状态，也就是说客户端什么时候发送了，我才会开始获取连接\n        ssChannel.register(selector, SelectionKey.OP_ACCEPT);\n\n        // 轮询式的获取选择器上已经准备就绪的事件\n        while(selector.select() > 0) {\n\n            // 获取当前选择器中 所有注册的选择键（已就绪的监听事件）\n            Iterator<SelectionKey> it = selector.selectedKeys().iterator();\n\n            while(it.hasNext()) {\n                // 获取准备就绪的事件\n                SelectionKey sk = it.next();\n\n                // 判断是具体什么事件准备就绪\n\n                // 接收事件就绪\n                if(sk.isAcceptable()) {\n                    // 若 接收就绪，获取客户端连接\n                    SocketChannel sChannel = ssChannel.accept();\n\n                    // 切换非阻塞模式\n                    sChannel.configureBlocking(false);\n\n                    // 将该通道注册到选择器上，并监听读就绪状态\n                    sChannel.register(selector, SelectionKey.OP_READ);\n\n                } else if(sk.isReadable()) {\n                    // 读就绪状态就绪\n\n                    // 获取当前选择器上 读就绪 状态的通道\n                    SocketChannel sChannel = (SocketChannel) sk.channel();\n\n                    // 读取数据\n                    ByteBuffer buf = ByteBuffer.allocate(1024);\n\n                    int len = 0;\n                    while((len = sChannel.read(buf)) > 0) {\n                        // 切换成读取模式\n                        buf.flip();\n                        // 打印客户端的发送\n                        System.out.println(Thread.currentThread().getName() + "\\t  " + new String(buf.array(), 0, len));\n                        // 清空缓存\n                        buf.clear();\n                    }\n                }\n            }\n\n            // 操作执行完成后，需要将 选择键给取消 SelectionKey\n            it.remove();\n\n        }\n    }\n\n    public static void main(String[] args) {\n        new Thread(() -> {\n            try {\n                server();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }, "t1").start();\n\n        // 十个客户端发送数据过去\n        for (int i = 0; i < 10; i++) {\n            new Thread(() -> {\n                try {\n                    client();\n                    try {\n                        TimeUnit.SECONDS.sleep(1);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }, String.valueOf(i)).start();\n        }\n\n    }\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br"),a("span",{staticClass:"line-number"},[n._v("62")]),a("br"),a("span",{staticClass:"line-number"},[n._v("63")]),a("br"),a("span",{staticClass:"line-number"},[n._v("64")]),a("br"),a("span",{staticClass:"line-number"},[n._v("65")]),a("br"),a("span",{staticClass:"line-number"},[n._v("66")]),a("br"),a("span",{staticClass:"line-number"},[n._v("67")]),a("br"),a("span",{staticClass:"line-number"},[n._v("68")]),a("br"),a("span",{staticClass:"line-number"},[n._v("69")]),a("br"),a("span",{staticClass:"line-number"},[n._v("70")]),a("br"),a("span",{staticClass:"line-number"},[n._v("71")]),a("br"),a("span",{staticClass:"line-number"},[n._v("72")]),a("br"),a("span",{staticClass:"line-number"},[n._v("73")]),a("br"),a("span",{staticClass:"line-number"},[n._v("74")]),a("br"),a("span",{staticClass:"line-number"},[n._v("75")]),a("br"),a("span",{staticClass:"line-number"},[n._v("76")]),a("br"),a("span",{staticClass:"line-number"},[n._v("77")]),a("br"),a("span",{staticClass:"line-number"},[n._v("78")]),a("br"),a("span",{staticClass:"line-number"},[n._v("79")]),a("br"),a("span",{staticClass:"line-number"},[n._v("80")]),a("br"),a("span",{staticClass:"line-number"},[n._v("81")]),a("br"),a("span",{staticClass:"line-number"},[n._v("82")]),a("br"),a("span",{staticClass:"line-number"},[n._v("83")]),a("br"),a("span",{staticClass:"line-number"},[n._v("84")]),a("br"),a("span",{staticClass:"line-number"},[n._v("85")]),a("br"),a("span",{staticClass:"line-number"},[n._v("86")]),a("br"),a("span",{staticClass:"line-number"},[n._v("87")]),a("br"),a("span",{staticClass:"line-number"},[n._v("88")]),a("br"),a("span",{staticClass:"line-number"},[n._v("89")]),a("br"),a("span",{staticClass:"line-number"},[n._v("90")]),a("br"),a("span",{staticClass:"line-number"},[n._v("91")]),a("br"),a("span",{staticClass:"line-number"},[n._v("92")]),a("br"),a("span",{staticClass:"line-number"},[n._v("93")]),a("br"),a("span",{staticClass:"line-number"},[n._v("94")]),a("br"),a("span",{staticClass:"line-number"},[n._v("95")]),a("br"),a("span",{staticClass:"line-number"},[n._v("96")]),a("br"),a("span",{staticClass:"line-number"},[n._v("97")]),a("br"),a("span",{staticClass:"line-number"},[n._v("98")]),a("br"),a("span",{staticClass:"line-number"},[n._v("99")]),a("br"),a("span",{staticClass:"line-number"},[n._v("100")]),a("br"),a("span",{staticClass:"line-number"},[n._v("101")]),a("br"),a("span",{staticClass:"line-number"},[n._v("102")]),a("br"),a("span",{staticClass:"line-number"},[n._v("103")]),a("br"),a("span",{staticClass:"line-number"},[n._v("104")]),a("br"),a("span",{staticClass:"line-number"},[n._v("105")]),a("br"),a("span",{staticClass:"line-number"},[n._v("106")]),a("br"),a("span",{staticClass:"line-number"},[n._v("107")]),a("br"),a("span",{staticClass:"line-number"},[n._v("108")]),a("br"),a("span",{staticClass:"line-number"},[n._v("109")]),a("br"),a("span",{staticClass:"line-number"},[n._v("110")]),a("br"),a("span",{staticClass:"line-number"},[n._v("111")]),a("br"),a("span",{staticClass:"line-number"},[n._v("112")]),a("br"),a("span",{staticClass:"line-number"},[n._v("113")]),a("br"),a("span",{staticClass:"line-number"},[n._v("114")]),a("br"),a("span",{staticClass:"line-number"},[n._v("115")]),a("br"),a("span",{staticClass:"line-number"},[n._v("116")]),a("br"),a("span",{staticClass:"line-number"},[n._v("117")]),a("br"),a("span",{staticClass:"line-number"},[n._v("118")]),a("br"),a("span",{staticClass:"line-number"},[n._v("119")]),a("br"),a("span",{staticClass:"line-number"},[n._v("120")]),a("br"),a("span",{staticClass:"line-number"},[n._v("121")]),a("br"),a("span",{staticClass:"line-number"},[n._v("122")]),a("br"),a("span",{staticClass:"line-number"},[n._v("123")]),a("br"),a("span",{staticClass:"line-number"},[n._v("124")]),a("br"),a("span",{staticClass:"line-number"},[n._v("125")]),a("br"),a("span",{staticClass:"line-number"},[n._v("126")]),a("br"),a("span",{staticClass:"line-number"},[n._v("127")]),a("br"),a("span",{staticClass:"line-number"},[n._v("128")]),a("br"),a("span",{staticClass:"line-number"},[n._v("129")]),a("br"),a("span",{staticClass:"line-number"},[n._v("130")]),a("br"),a("span",{staticClass:"line-number"},[n._v("131")]),a("br")])]),a("h2",{attrs:{id:"使用非阻塞式io制作聊天室"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用非阻塞式io制作聊天室"}},[n._v("#")]),n._v(" 使用非阻塞式IO制作聊天室")]),n._v(" "),a("p",[n._v("我们只需要把上面的代码稍微改一下，就能够实现聊天室的功能了")]),n._v(" "),a("p",[n._v("首先创建一个服务端，然后启动")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('/**\n * 使用非阻塞IO制作聊天室  服务端\n * @author: 陌溪\n * @create: 2020-03-28-8:57\n */\npublic class ChatServerDemo {\n\n    /**\n     * 服务端\n     */\n    public static void server() throws IOException {\n\n        // 获取通道\n        ServerSocketChannel ssChannel = ServerSocketChannel.open();\n\n        // 切换成非阻塞模式\n        ssChannel.configureBlocking(false);\n\n        // 绑定连接\n        ssChannel.bind(new InetSocketAddress(9898));\n\n        // 获取选择器\n        Selector selector = Selector.open();\n\n        // 将通道注册到选择器上，第二个参数代表选择器监控通道的什么状态\n        // 用选择器监听 接收状态，也就是说客户端什么时候发送了，我才会开始获取连接\n        ssChannel.register(selector, SelectionKey.OP_ACCEPT);\n\n        // 轮询式的获取选择器上已经准备就绪的事件\n        while(selector.select() > 0) {\n\n            // 获取当前选择器中 所有注册的选择键（已就绪的监听事件）\n            Iterator<SelectionKey> it = selector.selectedKeys().iterator();\n\n            while(it.hasNext()) {\n                // 获取准备就绪的事件\n                SelectionKey sk = it.next();\n\n                // 判断是具体什么事件准备就绪\n\n                // 接收事件就绪\n                if(sk.isAcceptable()) {\n                    // 若 接收就绪，获取客户端连接\n                    SocketChannel sChannel = ssChannel.accept();\n\n                    // 切换非阻塞模式\n                    sChannel.configureBlocking(false);\n\n                    // 将该通道注册到选择器上，并监听读就绪状态\n                    sChannel.register(selector, SelectionKey.OP_READ);\n\n                } else if(sk.isReadable()) {\n                    // 读就绪状态就绪\n\n                    // 获取当前选择器上 读就绪 状态的通道\n                    SocketChannel sChannel = (SocketChannel) sk.channel();\n\n                    // 读取数据\n                    ByteBuffer buf = ByteBuffer.allocate(1024);\n\n                    int len = 0;\n                    while((len = sChannel.read(buf)) > 0) {\n                        // 切换成读取模式\n                        buf.flip();\n                        // 打印客户端的发送\n                        System.out.println(Thread.currentThread().getName() + "\\t  " + new String(buf.array(), 0, len));\n                        // 清空缓存\n                        buf.clear();\n                    }\n                }\n            }\n\n            // 操作执行完成后，需要将 选择键给取消 SelectionKey\n            it.remove();\n        }\n    }\n\n    public static void main(String[] args) throws IOException {\n        server();\n    }\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br"),a("span",{staticClass:"line-number"},[n._v("62")]),a("br"),a("span",{staticClass:"line-number"},[n._v("63")]),a("br"),a("span",{staticClass:"line-number"},[n._v("64")]),a("br"),a("span",{staticClass:"line-number"},[n._v("65")]),a("br"),a("span",{staticClass:"line-number"},[n._v("66")]),a("br"),a("span",{staticClass:"line-number"},[n._v("67")]),a("br"),a("span",{staticClass:"line-number"},[n._v("68")]),a("br"),a("span",{staticClass:"line-number"},[n._v("69")]),a("br"),a("span",{staticClass:"line-number"},[n._v("70")]),a("br"),a("span",{staticClass:"line-number"},[n._v("71")]),a("br"),a("span",{staticClass:"line-number"},[n._v("72")]),a("br"),a("span",{staticClass:"line-number"},[n._v("73")]),a("br"),a("span",{staticClass:"line-number"},[n._v("74")]),a("br"),a("span",{staticClass:"line-number"},[n._v("75")]),a("br"),a("span",{staticClass:"line-number"},[n._v("76")]),a("br"),a("span",{staticClass:"line-number"},[n._v("77")]),a("br"),a("span",{staticClass:"line-number"},[n._v("78")]),a("br"),a("span",{staticClass:"line-number"},[n._v("79")]),a("br"),a("span",{staticClass:"line-number"},[n._v("80")]),a("br"),a("span",{staticClass:"line-number"},[n._v("81")]),a("br")])]),a("p",[n._v("然后在创建一个客户端")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('/**\n * 使用非阻塞IO制作聊天室  客户端\n * @author: 陌溪\n * @create: 2020-03-28-8:57\n */\npublic class ChatClientDemo {\n\n    /**\n     * 客户端\n     */\n    public static void client() throws IOException {\n\n        // 获取通道\n        SocketChannel sChannel = SocketChannel.open(new InetSocketAddress("127.0.0.1", 9898));\n\n        // 切换成非阻塞模式\n        sChannel.configureBlocking(false);\n\n        // 分配指定大小的缓冲区\n        ByteBuffer buf = ByteBuffer.allocate(1024);\n\n        // 使用输入流\n        Scanner sc = new Scanner(System.in);\n\n        while(sc.hasNext()) {\n            String str = sc.next();\n\n            // 获取输入内容\n            buf.put((new Date().toString() + "\\n" +str).getBytes());\n            // 切换成写模式\n            buf.flip();\n            // 将缓冲区中的内容写入通道\n            sChannel.write(buf);\n            // 清空缓冲区\n            buf.clear();\n        }\n        // 关闭通道\n        sChannel.close();\n    }\n\n    public static void main(String[] args) throws IOException {\n        client();\n    }\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br")])]),a("p",[n._v("然后我们需要运行两个客户端，但是IDEA默认只能运行一个，因此需要设置并行运行")]),n._v(" "),a("p",[n._v("打开run–>edit configuration")]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/image-20200328102743970.png",alt:"image-20200328102743970"}})]),n._v(" "),a("p",[n._v("最后看效果")]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/111.gif",alt:"image-20200328102743970"}})]),n._v(" "),a("h2",{attrs:{id:"管道-pipe"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#管道-pipe"}},[n._v("#")]),n._v(" 管道（Pipe）")]),n._v(" "),a("p",[n._v("Java NIO管道是两个线程之间的单向数据连接。Pipe有一个source通道和一个sink通道，数据会被写入到sink通道，从source通道读取。")]),n._v(" "),a("p",[a("img",{attrs:{src:"/images/image-20200328104843505.png",alt:"image-20200328104843505"}})]),n._v(" "),a("p",[n._v("代码：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('/**\n * 管道\n * @author: 陌溪\n * @create: 2020-03-28-10:49\n */\npublic class PipeDemo {\n    public static void main(String[] args) throws IOException {\n        // 获取管道\n        Pipe pipe = Pipe.open();\n\n        // 将缓冲区的数据写入管道\n        ByteBuffer buf = ByteBuffer.allocate(1024);\n\n        // 发送数据（使用sink发送）\n        Pipe.SinkChannel sinkChannel = pipe.sink();\n        buf.put("通过单向管道发送数据".getBytes());\n\n        buf.flip();\n        sinkChannel.write(buf);\n\n        // 读取缓冲区中的数据（使用source接收）\n        Pipe.SourceChannel sourceChannel = pipe.source();\n        buf.flip();\n        int len = sourceChannel.read(buf);\n        System.out.println(new String(buf.array(), 0, len));\n\n        sourceChannel.close();\n        sinkChannel.close();\n    }\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br")])])])}),[],!1,null,null,null);s.default=t.exports}}]);