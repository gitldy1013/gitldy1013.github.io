(window.webpackJsonp=window.webpackJsonp||[]).push([[1038],{1734:function(t,r,n){"use strict";n.r(r);var a=n(5),s=Object(a.a)({},(function(){var t=this,r=t.$createElement,n=t._self._c||r;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"spring-简介"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#spring-简介"}},[t._v("#")]),t._v(" Spring 简介")]),t._v(" "),n("h2",{attrs:{id:"概述"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),n("p",[t._v("Spring 的主要作用就是为代码“解耦”，降低代码间的耦合度。")]),t._v(" "),n("p",[t._v("根据功能的不同，可以将一个系统中的代码分为 "),n("strong",[t._v("主业务逻辑")]),t._v(" 与 "),n("strong",[t._v("系统级业务逻辑")]),t._v(" 两类。它们各自具有鲜明的特点：主业务代码间逻辑联系紧密，有具体的专业业务应用场景，复用性相对较低；系统级业务相对功能独立，没有具体的专业业务应用场景，主要是为主业务提供系统级服务，如日志、安全、事务等，复用性强。")]),t._v(" "),n("p",[t._v("Spring 根据代码的功能特点，将降低耦合度的方式分为了两类：IoC 与 AOP。IoC 使得主业务在相互调用过程中，不用再自己维护关系了，即不用再自己创建要使用的对象了。而是由 Spring 容器统一管理，自动“注入”。而 AOP 使得系统级服务得到了最大复用，且不用再由程序员手工将系统级服务“混杂”到主业务逻辑中了，而是由 Spring 容器统一完成“织入”。")]),t._v(" "),n("p",[t._v("Spring 是于 2003 年兴起的一个轻量级的 Java 开发框架，它是为了解决企业应用开发的复杂性而创建的。Spring 的核心是控制反转（IoC）和面向切面编程（AOP）。简单来说，Spring 是一个分层的 Java SE/EE full-stack(一站式)轻量级开源框架。")])])}),[],!1,null,null,null);r.default=s.exports}}]);