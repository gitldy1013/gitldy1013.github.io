(window.webpackJsonp=window.webpackJsonp||[]).push([[540],{1236:function(s,n,a){"use strict";a.r(n);var e=a(5),r=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"docker-命令查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-命令查询"}},[s._v("#")]),s._v(" Docker 命令查询")]),s._v(" "),a("h2",{attrs:{id:"基本语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本语法"}},[s._v("#")]),s._v(" 基本语法")]),s._v(" "),a("p",[s._v("Docker 命令有两大类，客户端命令和服务端命令。前者是主要的操作接口，后者用来启动 Docker Daemon。")]),s._v(" "),a("ul",[a("li",[s._v("客户端命令：基本命令格式为 "),a("code",[s._v("docker [OPTIONS] COMMAND [arg...]")]),s._v("；")]),s._v(" "),a("li",[s._v("服务端命令：基本命令格式为 "),a("code",[s._v("dockerd [OPTIONS]")]),s._v("。")])]),s._v(" "),a("p",[s._v("可以通过 "),a("code",[s._v("man docker")]),s._v(" 或 "),a("code",[s._v("docker help")]),s._v(" 来查看这些命令。")]),s._v(" "),a("h2",{attrs:{id:"客户端命令选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#客户端命令选项"}},[s._v("#")]),s._v(" 客户端命令选项")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('    --config=""：指定客户端配置文件，默认为 `/.docker`；\n    -D=true|false：是否使用 debug 模式。默认不开启；\n    -H, --host=[]：指定命令对应 Docker 守护进程的监听接口，可以为 unix 套接字（unix:///path/to/socket），文件句柄（fd://socketfd）或 tcp 套接字（tcp://[host[:port]]），默认为 unix:///var/run/docker.sock；\n    -l, --log-level="debug|info|warn|error|fatal"：指定日志输出级别；\n    --tls=true|false：是否对 Docker 守护进程启用 TLS 安全机制，默认为否；\n    --tlscacert= /.docker/ca.pem：TLS CA 签名的可信证书文件路径；\n    --tlscert= /.docker/cert.pem：TLS 可信证书文件路径；\n    --tlscert= /.docker/key.pem：TLS 密钥文件路径；\n    --tlsverify=true|false：启用 TLS 校验，默认为否。\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h2",{attrs:{id:"dockerd-命令选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dockerd-命令选项"}},[s._v("#")]),s._v(" dockerd 命令选项")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('    --api-cors-header=""：CORS 头部域，默认不允许 CORS，要允许任意的跨域访问，可以指定为 “*”；\n    --authorization-plugin=""：载入认证的插件；\n    -b=""：将容器挂载到一个已存在的网桥上。指定为 \'none\' 时则禁用容器的网络，与 --bip 选项互斥；\n    --bip=""：让动态创建的 docker0 网桥采用给定的 CIDR 地址; 与 -b 选项互斥；\n    --cgroup-parent=""：指定 cgroup 的父组，默认 fs cgroup 驱动为 `/docker`，systemd cgroup 驱动为 `system.slice`；\n    --cluster-store=""：构成集群（如 Swarm）时，集群键值数据库服务地址；\n    --cluster-advertise=""：构成集群时，自身的被访问地址，可以为 `host:port` 或 `interface:port`；\n    --cluster-store-opt=""：构成集群时，键值数据库的配置选项；\n    --config-file="/etc/docker/daemon.json"：daemon 配置文件路径；\n    --containerd=""：containerd 文件的路径；\n    -D, --debug=true|false：是否使用 Debug 模式。缺省为 false；\n    --default-gateway=""：容器的 IPv4 网关地址，必须在网桥的子网段内；\n    --default-gateway-v6=""：容器的 IPv6 网关地址；\n    --default-ulimit=[]：默认的 ulimit 值；\n    --disable-legacy-registry=true|false：是否允许访问旧版本的镜像仓库服务器；\n    --dns=""：指定容器使用的 DNS 服务器地址；\n    --dns-opt=""：DNS 选项；\n    --dns-search=[]：DNS 搜索域；\n    --exec-opt=[]：运行时的执行选项；\n    --exec-root=""：容器执行状态文件的根路径，默认为 `/var/run/docker`；\n    --fixed-cidr=""：限定分配 IPv4 地址范围；\n    --fixed-cidr-v6=""：限定分配 IPv6 地址范围；\n    -G, --group=""：分配给 unix 套接字的组，默认为 `docker`；\n    -g, --graph=""：Docker 运行时的根路径，默认为 `/var/lib/docker`；\n    -H, --host=[]：指定命令对应 Docker daemon 的监听接口，可以为 unix 套接字（unix:///path/to/socket），文件句柄（fd://socketfd）或 tcp 套接字（tcp://[host[:port]]），默认为 unix:///var/run/docker.sock；\n    --icc=true|false：是否启用容器间以及跟 daemon 所在主机的通信。默认为 true。\n    --insecure-registry=[]：允许访问给定的非安全仓库服务；\n    --ip=""：绑定容器端口时候的默认 IP 地址。缺省为 0.0.0.0；\n    --ip-forward=true|false：是否检查启动在 Docker 主机上的启用 IP 转发服务，默认开启。注意关闭该选项将不对系统转发能力进行任何检查修改；\n    --ip-masq=true|false：是否进行地址伪装，用于容器访问外部网络，默认开启；\n    --iptables=true|false：是否允许 Docker 添加 iptables 规则。缺省为 true；\n    --ipv6=true|false：是否启用 IPv6 支持，默认关闭；\n    -l, --log-level="debug|info|warn|error|fatal"：指定日志输出级别；\n    --label="[]"：添加指定的键值对标注；\n    --log-driver="json-file|syslog|journald|gelf|fluentd|awslogs|splunk|etwlogs|gcplogs|none"：指定日志后端驱动，默认为 json-file；\n    --log-opt=[]：日志后端的选项；\n    --mtu=VALUE：指定容器网络的 mtu；\n    -p=""：指定 daemon 的 PID 文件路径。缺省为 `/var/run/docker.pid`；\n    --raw-logs：输出原始，未加色彩的日志信息；\n    --registry-mirror=<scheme>://<host>：指定 `docker pull` 时使用的注册服务器镜像地址；\n    -s, --storage-driver=""：指定使用给定的存储后端；\n    --selinux-enabled=true|false：是否启用 SELinux 支持。缺省值为 false。SELinux 目前尚不支持 overlay 存储驱动；\n    --storage-opt=[]：驱动后端选项；\n    --tls=true|false：是否对 Docker daemon 启用 TLS 安全机制，默认为否；\n    --tlscacert= /.docker/ca.pem：TLS CA 签名的可信证书文件路径；\n    --tlscert= /.docker/cert.pem：TLS 可信证书文件路径；\n    --tlscert= /.docker/key.pem：TLS 密钥文件路径；\n    --tlsverify=true|false：启用 TLS 校验，默认为否；\n    --userland-proxy=true|false：是否使用用户态代理来实现容器间和出容器的回环通信，默认为 true；\n    --userns-remap=default|uid:gid|user:group|user|uid：指定容器的用户命名空间，默认是创建新的 UID 和 GID 映射到容器内进程。\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br")])]),a("h2",{attrs:{id:"客户端命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#客户端命令"}},[s._v("#")]),s._v(" 客户端命令")]),s._v(" "),a("p",[s._v("可以通过 "),a("code",[s._v("docker COMMAND --help")]),s._v(" 来查看这些命令的具体用法。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    attach：依附到一个正在运行的容器中；\n    build：从一个 Dockerfile 创建一个镜像；\n    commit：从一个容器的修改中创建一个新的镜像；\n    cp：在容器和本地宿主系统之间复制文件中；\n    create：创建一个新容器，但并不运行它；\n    diff：检查一个容器内文件系统的修改，包括修改和增加；\n    events：从服务端获取实时的事件；\n    exec：在运行的容器内执行命令；\n    export：导出容器内容为一个 tar 包；\n    history：显示一个镜像的历史信息；\n    images：列出存在的镜像；\n    import：导入一个文件（典型为 tar 包）路径或目录来创建一个本地镜像；\n    info：显示一些相关的系统信息；\n    inspect：显示一个容器的具体配置信息；\n    kill：关闭一个运行中的容器 (包括进程和所有相关资源)；\n    load：从一个 tar 包中加载一个镜像；\n    login：注册或登录到一个 Docker 的仓库服务器；\n    logout：从 Docker 的仓库服务器登出；\n    logs：获取容器的 log 信息；\n    network：管理 Docker 的网络，包括查看、创建、删除、挂载、卸载等；\n    node：管理 swarm 集群中的节点，包括查看、更新、删除、提升/取消管理节点等；\n    pause：暂停一个容器中的所有进程；\n    port：查找一个 nat 到一个私有网口的公共口；\n    ps：列出主机上的容器；\n    pull：从一个Docker的仓库服务器下拉一个镜像或仓库；\n    push：将一个镜像或者仓库推送到一个 Docker 的注册服务器；\n    rename：重命名一个容器；\n    restart：重启一个运行中的容器；\n    rm：删除给定的若干个容器；\n    rmi：删除给定的若干个镜像；\n    run：创建一个新容器，并在其中运行给定命令；\n    save：保存一个镜像为 tar 包文件；\n    search：在 Docker index 中搜索一个镜像；\n    service：管理 Docker 所启动的应用服务，包括创建、更新、删除等；\n    start：启动一个容器；\n    stats：输出（一个或多个）容器的资源使用统计信息；\n    stop：终止一个运行中的容器；\n    swarm：管理 Docker swarm 集群，包括创建、加入、退出、更新等；\n    tag：为一个镜像打标签；\n    top：查看一个容器中的正在运行的进程信息；\n    unpause：将一个容器内所有的进程从暂停状态中恢复；\n    update：更新指定的若干容器的配置信息；\n    version：输出 Docker 的版本信息；\n    volume：管理 Docker volume，包括查看、创建、删除等；\n    wait：阻塞直到一个容器终止，然后输出它的退出符。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br")])]),a("h2",{attrs:{id:"一张图总结-docker-的命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一张图总结-docker-的命令"}},[s._v("#")]),s._v(" 一张图总结 Docker 的命令")]),s._v(" "),a("p",[a("img",{attrs:{src:"/img/cmdlogic.png",alt:"Docker 命令总结"}})])])}),[],!1,null,null,null);n.default=r.exports}}]);