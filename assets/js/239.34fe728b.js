(window.webpackJsonp=window.webpackJsonp||[]).push([[239],{936:function(n,s,a){"use strict";a.r(s);var t=a(5),e=Object(t.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"数组中出现次数超过一半的数字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组中出现次数超过一半的数字"}},[n._v("#")]),n._v(" 数组中出现次数超过一半的数字")]),n._v(" "),a("h2",{attrs:{id:"题目描述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#题目描述"}},[n._v("#")]),n._v(" 题目描述")]),n._v(" "),a("p",[n._v("数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。例如输入一个长度为9的数组{1,2,3,2,2,2,5,4,2}。由于数字2在数组中出现了5次，超过数组长度的一半，因此输出2。如果不存在则输出0。")]),n._v(" "),a("h2",{attrs:{id:"常规代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常规代码"}},[n._v("#")]),n._v(" 常规代码")]),n._v(" "),a("p",[n._v("使用一个字典，来记录每个数出现的次数")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("#  数组中出现次数超过一半的数字\n# 数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。例如输入一个长度为9的数组{1,2,3,2,2,2,5,4,2}。由于数字2在数组中出现了5次，超过数组长度的一半，因此输出2。如果不存在则输出0。\n# -*- coding:utf-8 -*-\nclass Solution:\n    def MoreThanHalfNum_Solution(self, numbers):\n        numsCount = {}\n        numLen = len(numbers)\n        for num in numbers:\n            if num in numsCount:\n                numsCount[num] += 1\n            else:\n                numsCount[num] = 1\n            # 找出超过一半的数\n            if numsCount[num] > numLen >> 1:\n                return num\n        return 0\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br")])]),a("blockquote",[a("p",[n._v("上述代码的空间和时间复杂度都是：O(n)")]),n._v(" "),a("p",[n._v("如果我们要做到，空间复杂度为：O(1)，时间复杂O(n)")])]),n._v(" "),a("h2",{attrs:{id:"升级代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#升级代码"}},[n._v("#")]),n._v(" 升级代码")]),n._v(" "),a("blockquote",[a("p",[n._v("思路：抵消掉  遇到不相同的数字就相互抵消掉，最终剩下的数字就可能是出现次数大于数组长度一半的数字。首先我们来遍历数字，遍历的时候需要记录上次出现的数字是什么，进而判断 下次出现的数字是否与现在这个数字相等，如果不相等的话，那么就把两个数字抵消掉，到最后没有抵消掉的数字，就可能是出现的次数大于数组长度的一半。")]),n._v(" "),a("p",[n._v("我们可以考虑在遍历数组的时候保存两个值：一个是数组中的一个数字，另一个是次数；当我们遍历到下一个数字的时候，如果下一个数字和我们之前保存的数字相同，则次数加1，如果下一个数字和我们之前保存的数字不同，则凑数减1.如果次数为0 ，我们需要保存下一次出现的次数，然后把次数设置为1.")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("class Solution:\n    def MoreThanHalfNum_Solution(self, numbers):\n        #定义变量 上次出现的数字为0\n        last = 0\n        #上次出现的数字的数量为0 \n        lastCount = 0\n\t\t#遍历数组中的数字\n        for num in numbers:\n            #如果说这个数字出现的次数为0了。\n            if lastCount == 0:\n                #那么就把上次出现的数字，变为需要保存的那个数字。\n                last = num\n                #并把次数设置为1 次，出现了这一次。\n                lastCount = 1\n            else:\n                #否则就判断，这个数字是不是与上次出现的次数相同，如果相同的话，那么我们这个数字出现的次数就加1.\n                if num == last:\n                    lastCount += 1\n                #如果不同的话，那么我们就让这两个数字抵消掉，那么这个数字出现的次数需要减 1；\n                else:\n                    lastCount -= 1\n\t\t#如果最后遍历完事之后 这个记录数字出现次数的 值为0 的话，那么就说明我们的这个数组里面的数刚好可以两两抵消掉\n        if lastCount == 0:\n            return 0\n        #否则的话，就说明 数组里面 留下了没有抵消掉的数\n        else:\n            #这种情况是last可能是大于一半的数字\n            #这个时候把 记录数字次数的变量 计数 为0 \n            lastCount = 0\n            #遍历数组中的数\n            for num in numbers:\n                #如果这个数与我们记录的数相等的话\n                if num == last:\n                    #让这个计数加1\n                    lastCount += 1\n\t\t\t#最后判断一下，这个数的计数次数，是不是大于 我们数组长度的一半，如果是的话，就返回这个数，如果不是就返回0.\n            if lastCount > (len(numbers)>> 1):\n                return last\n        return 0\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);