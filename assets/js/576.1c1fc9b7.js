(window.webpackJsonp=window.webpackJsonp||[]).push([[576],{1272:function(s,a,n){"use strict";n.r(a);var t=n(5),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"go语言中提供的映射关系容器为map-其内部使用散列表-hash-实现。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#go语言中提供的映射关系容器为map-其内部使用散列表-hash-实现。"}},[s._v("#")]),s._v(" Go语言中提供的映射关系容器为"),n("code",[s._v("map")]),s._v("，其内部使用"),n("code",[s._v("散列表（hash）")]),s._v("实现。")]),s._v(" "),n("h2",{attrs:{id:"map是一种无序的基于key-value的数据结构-go语言中的map是引用类型-必须初始化才能使用。"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#map是一种无序的基于key-value的数据结构-go语言中的map是引用类型-必须初始化才能使用。"}},[s._v("#")]),s._v(" map是一种无序的基于"),n("code",[s._v("key-value")]),s._v("的数据结构，Go语言中的map是引用类型，必须初始化才能使用。")]),s._v(" "),n("h2",{attrs:{id:"map定义"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#map定义"}},[s._v("#")]),s._v(" map定义")]),s._v(" "),n("p",[s._v("Go语言中 "),n("code",[s._v("map")]),s._v("的定义语法如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    map[KeyType]ValueType\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("其中，")]),s._v(" "),n("ul",[n("li",[s._v("KeyType:表示键的类型。")]),s._v(" "),n("li",[s._v("ValueType:表示键对应的值的类型。")])]),s._v(" "),n("p",[s._v("map类型的变量默认初始值为nil，需要使用make()函数来分配内存。语法为：")]),s._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[s._v("make(map[KeyType]ValueType, [cap])\n")])])]),n("p",[s._v("其中cap表示map的容量，该参数虽然不是必须的，但是我们应该在初始化map的时候就为其指定一个合适的容量。")]),s._v(" "),n("h2",{attrs:{id:"map基本使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#map基本使用"}},[s._v("#")]),s._v(" map基本使用")]),s._v(" "),n("p",[s._v("map中的数据都是成对出现的，map的基本使用示例代码如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    func main() {\n    \tscoreMap := make(map[string]int, 8)\n    \tscoreMap["张三"] = 90\n    \tscoreMap["小明"] = 100\n    \tfmt.Println(scoreMap)\n    \tfmt.Println(scoreMap["小明"])\n    \tfmt.Printf("type of a:%T\\n", scoreMap)\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("输出：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    map[小明:100 张三:90]\n    100\n    type of a:map[string]int\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("map也支持在声明的时候填充元素，例如：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    func main() {\n    \tuserInfo := map[string]string{\n    \t\t"username": "沙河小王子",\n    \t\t"password": "123456",\n    \t}\n    \tfmt.Println(userInfo) //\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h2",{attrs:{id:"判断某个键是否存在"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#判断某个键是否存在"}},[s._v("#")]),s._v(" 判断某个键是否存在")]),s._v(" "),n("p",[s._v("Go语言中有个判断map中键是否存在的特殊写法，格式如下:")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    value, ok := map[key]\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("举个例子：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    func main() {\n    \tscoreMap := make(map[string]int)\n    \tscoreMap["张三"] = 90\n    \tscoreMap["小明"] = 100\n    \t// 如果key存在ok为true,v为对应的值；不存在ok为false,v为值类型的零值\n    \tv, ok := scoreMap["张三"]\n    \tif ok {\n    \t\tfmt.Println(v)\n    \t} else {\n    \t\tfmt.Println("查无此人")\n    \t}\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("h2",{attrs:{id:"map的遍历"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#map的遍历"}},[s._v("#")]),s._v(" map的遍历")]),s._v(" "),n("p",[s._v("Go语言中使用"),n("code",[s._v("for range")]),s._v("遍历map。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    func main() {\n    \tscoreMap := make(map[string]int)\n    \tscoreMap["张三"] = 90\n    \tscoreMap["小明"] = 100\n    \tscoreMap["娜扎"] = 60\n    \tfor k, v := range scoreMap {\n    \t\tfmt.Println(k, v)\n    \t}\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[s._v("但我们只想遍历key的时候，可以按下面的写法：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    func main() {\n    \tscoreMap := make(map[string]int)\n    \tscoreMap["张三"] = 90\n    \tscoreMap["小明"] = 100\n    \tscoreMap["娜扎"] = 60\n    \tfor k := range scoreMap {\n    \t\tfmt.Println(k)\n    \t}\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("p",[n("strong",[s._v("注意：")]),s._v(" 遍历map时的元素顺序与添加键值对的顺序无关。")]),s._v(" "),n("h2",{attrs:{id:"使用delete-函数删除键值对"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用delete-函数删除键值对"}},[s._v("#")]),s._v(" 使用delete()函数删除键值对")]),s._v(" "),n("p",[s._v("使用"),n("code",[s._v("delete()")]),s._v("内建函数从map中删除一组键值对，"),n("code",[s._v("delete()")]),s._v("函数的格式如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    delete(map, key)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("其中，")]),s._v(" "),n("ul",[n("li",[s._v("map:表示要删除键值对的map")]),s._v(" "),n("li",[s._v("key:表示要删除的键值对的键")])]),s._v(" "),n("p",[s._v("示例代码如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    func main(){\n    \tscoreMap := make(map[string]int)\n    \tscoreMap["张三"] = 90\n    \tscoreMap["小明"] = 100\n    \tscoreMap["娜扎"] = 60\n    \tdelete(scoreMap, "小明")//将小明:100从map中删除\n    \tfor k,v := range scoreMap{\n    \t\tfmt.Println(k, v)\n    \t}\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h2",{attrs:{id:"按照指定顺序遍历map"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#按照指定顺序遍历map"}},[s._v("#")]),s._v(" 按照指定顺序遍历map")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    func main() {\n    \trand.Seed(time.Now().UnixNano()) //初始化随机数种子\n    \n    \tvar scoreMap = make(map[string]int, 200)\n    \n    \tfor i := 0; i < 100; i++ {\n    \t\tkey := fmt.Sprintf("stu%02d", i) //生成stu开头的字符串\n    \t\tvalue := rand.Intn(100)          //生成0~99的随机整数\n    \t\tscoreMap[key] = value\n    \t}\n    \t//取出map中的所有key存入切片keys\n    \tvar keys = make([]string, 0, 200)\n    \tfor key := range scoreMap {\n    \t\tkeys = append(keys, key)\n    \t}\n    \t//对切片进行排序\n    \tsort.Strings(keys)\n    \t//按照排序后的key遍历map\n    \tfor _, key := range keys {\n    \t\tfmt.Println(key, scoreMap[key])\n    \t}\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("h2",{attrs:{id:"元素为map类型的切片"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#元素为map类型的切片"}},[s._v("#")]),s._v(" 元素为map类型的切片")]),s._v(" "),n("p",[s._v("下面的代码演示了切片中的元素为map类型时的操作：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    func main() {\n    \tvar mapSlice = make([]map[string]string, 3)\n    \tfor index, value := range mapSlice {\n    \t\tfmt.Printf("index:%d value:%v\\n", index, value)\n    \t}\n    \tfmt.Println("after init")\n    \t// 对切片中的map元素进行初始化\n    \tmapSlice[0] = make(map[string]string, 10)\n    \tmapSlice[0]["name"] = "小王子"\n    \tmapSlice[0]["password"] = "123456"\n    \tmapSlice[0]["address"] = "沙河"\n    \tfor index, value := range mapSlice {\n    \t\tfmt.Printf("index:%d value:%v\\n", index, value)\n    \t}\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("h2",{attrs:{id:"值为切片类型的map"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#值为切片类型的map"}},[s._v("#")]),s._v(" 值为切片类型的map")]),s._v(" "),n("p",[s._v("下面的代码演示了map中值为切片类型的操作：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    func main() {\n    \tvar sliceMap = make(map[string][]string, 3)\n    \tfmt.Println(sliceMap)\n    \tfmt.Println("after init")\n    \tkey := "中国"\n    \tvalue, ok := sliceMap[key]\n    \tif !ok {\n    \t\tvalue = make([]string, 0, 2)\n    \t}\n    \tvalue = append(value, "北京", "上海")\n    \tsliceMap[key] = value\n    \tfmt.Println(sliceMap)\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br")])]),n("h2",{attrs:{id:"练习题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#练习题"}},[s._v("#")]),s._v(" 练习题")]),s._v(" "),n("ol",[n("li",[s._v("写一个程序，统计一个字符串中每个单词出现的次数。比如：”how do you do”中how=1 do=2 you=1。")]),s._v(" "),n("li",[s._v("观察下面代码，写出最终的打印结果。")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('    func main() {\n    \ttype Map map[string][]int\n    \tm := make(Map)\n    \ts := []int{1, 2}\n    \ts = append(s, 3)\n    \tfmt.Printf("%+v\\n", s)\n    \tm["q1mi"] = s\n    \ts = append(s[:1], s[2:]...)\n    \tfmt.Printf("%+v\\n", s)\n    \tfmt.Printf("%+v\\n", m["q1mi"])\n    }\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);